{
  "version": "3.2",
  "log": [
    {
      "Ownable": {
        "src": "@openzeppelin/contracts/access/Ownable.sol:20",
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin/contracts/access/Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "Ownable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "PaymentSplitter": {
        "src": "@openzeppelin/contracts/finance/PaymentSplitter.sol:27",
        "version": {
          "withMetadata": "7ca80aa715b481cb550ce3949750475a418af4045c653fe6bed689f443f26bfb",
          "withoutMetadata": "a4e026d1eefdf675d63e6c33090429de6d5c3dc870d8924a7112b284573f6a31",
          "linkedWithoutMetadata": "a4e026d1eefdf675d63e6c33090429de6d5c3dc870d8924a7112b284573f6a31"
        },
        "inherit": [
          "Context"
        ],
        "libraries": [
          "Address",
          "SafeERC20"
        ],
        "methods": [
          "(address[],uint256[])",
          "()",
          "totalShares()",
          "totalReleased()",
          "totalReleased(address)",
          "shares(address)",
          "released(address)",
          "released(address,address)",
          "payee(uint256)",
          "release(address payable)",
          "release(address,address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "PaymentSplitter",
            "src": "@openzeppelin/contracts/finance/PaymentSplitter.sol:50"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "PaymentSplitter",
              "label": "_totalShares",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts/finance/PaymentSplitter.sol:33"
            },
            {
              "contract": "PaymentSplitter",
              "label": "_totalReleased",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts/finance/PaymentSplitter.sol:34"
            },
            {
              "contract": "PaymentSplitter",
              "label": "_shares",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin/contracts/finance/PaymentSplitter.sol:36"
            },
            {
              "contract": "PaymentSplitter",
              "label": "_released",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin/contracts/finance/PaymentSplitter.sol:37"
            },
            {
              "contract": "PaymentSplitter",
              "label": "_payees",
              "type": "t_array(t_address)dyn_storage",
              "src": "@openzeppelin/contracts/finance/PaymentSplitter.sol:38"
            },
            {
              "contract": "PaymentSplitter",
              "label": "_erc20TotalReleased",
              "type": "t_mapping(t_contract(IERC20)663,t_uint256)",
              "src": "@openzeppelin/contracts/finance/PaymentSplitter.sol:40"
            },
            {
              "contract": "PaymentSplitter",
              "label": "_erc20Released",
              "type": "t_mapping(t_contract(IERC20)663,t_mapping(t_address,t_uint256))",
              "src": "@openzeppelin/contracts/finance/PaymentSplitter.sol:41"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_array(t_address)dyn_storage": {
              "label": "address[]"
            },
            "t_mapping(t_contract(IERC20)663,t_uint256)": {
              "label": "mapping(contract IERC20 => uint256)"
            },
            "t_contract(IERC20)663": {
              "label": "contract IERC20"
            },
            "t_mapping(t_contract(IERC20)663,t_mapping(t_address,t_uint256))": {
              "label": "mapping(contract IERC20 => mapping(address => uint256))"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ReentrancyGuard": {
        "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:22",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReentrancyGuard",
            "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:39"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ReentrancyGuard",
              "label": "_status",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:37"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "SafeERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:18",
        "version": {
          "withMetadata": "56f3b47fe199a74f30abd43f547fa939c88066448b04cd5f17bdafbe2e03804a",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "Address"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC721": {
        "src": "@openzeppelin/contracts/token/ERC721/IERC721.sol:11",
        "inherit": [
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "balanceOf(address)",
          "ownerOf(uint256)",
          "safeTransferFrom(address,address,uint256)",
          "transferFrom(address,address,uint256)",
          "approve(address,uint256)",
          "getApproved(uint256)",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "safeTransferFrom(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC721Receiver": {
        "src": "@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol:11",
        "inherit": [],
        "libraries": [],
        "methods": [
          "onERC721Received(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC721Enumerable": {
        "src": "@openzeppelin/contracts/token/ERC721/extensions/IERC721Enumerable.sol:12",
        "inherit": [
          "IERC721",
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "tokenOfOwnerByIndex(address,uint256)",
          "tokenByIndex(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC721Metadata": {
        "src": "@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol:12",
        "inherit": [
          "IERC721",
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "tokenURI(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Address": {
        "src": "@openzeppelin/contracts/utils/Address.sol:9",
        "version": {
          "withMetadata": "484d2cade7f176ca5050f1f249737dd81ac6ed00490f5099f09054c1bc596b67",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:186"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Strings": {
        "src": "@openzeppelin/contracts/utils/Strings.sol:9",
        "version": {
          "withMetadata": "b16d77140251bcd9725701aa6d1902c15605c3749a720b7aac593644f6c217ac",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "MerkleProof": {
        "src": "@openzeppelin/contracts/utils/cryptography/MerkleProof.sol:15",
        "version": {
          "withMetadata": "eae9c389bfc7a3fccc9b1be4ba129d982448e261280aa30913fa3d7bc9f5440f",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC165": {
        "src": "@openzeppelin/contracts/utils/introspection/ERC165.sol:22",
        "inherit": [
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC165": {
        "src": "@openzeppelin/contracts/utils/introspection/IERC165.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "SafeMath": {
        "src": "@openzeppelin/contracts/utils/math/SafeMath.sol:16",
        "version": {
          "withMetadata": "8418487e012b6d36d0f064d32c31976a5cbfce3373a77c05261a0ae367939886",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "EnumerableMap": {
        "src": "@openzeppelin/contracts/utils/structs/EnumerableMap.sol:32",
        "version": {
          "withMetadata": "eb2563fd64638723253d815b920b9bdd7ba216c3415fd72b3339b5602807aab3",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "EnumerableSet"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "EnumerableSet": {
        "src": "@openzeppelin/contracts/utils/structs/EnumerableSet.sol:30",
        "version": {
          "withMetadata": "6ee35d052c3beaf7db7a043d937ed616f73a3d6a147dd22fd5b78a58e78e8277",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "DreadfulzNFT": {
        "src": "contracts/DreadfulzNFT.sol:12",
        "version": {
          "withMetadata": "5ffbd847b536cbc57cdc83b55b9b42139645dd131948e999998d9eec0bfcc408",
          "withoutMetadata": "4ea48cbb267fc4ae2f5879ac93bd024136e95953b32ed10b94ac0183de9d4051",
          "linkedWithoutMetadata": "4ea48cbb267fc4ae2f5879ac93bd024136e95953b32ed10b94ac0183de9d4051"
        },
        "inherit": [
          "PaymentSplitter",
          "ERC721A",
          "IERC721Enumerable",
          "IERC721Metadata",
          "IERC721",
          "ERC165",
          "IERC165",
          "ReentrancyGuard",
          "Ownable",
          "Context"
        ],
        "libraries": [
          "EnumerableSet",
          "EnumerableMap",
          "MerkleProof"
        ],
        "methods": [
          "()",
          "mint(uint256)",
          "presale(uint256,address,bytes32[])",
          "balanceOfOwner(address)",
          "mintToTeam(address,uint256)",
          "setSaleActive()",
          "set2ndSaleActive()",
          "setFinalSaleActive()",
          "setMerkleRoot(bytes32)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "DreadfulzNFT",
            "src": "contracts/DreadfulzNFT.sol:48"
          },
          {
            "kind": "state-variable-assignment",
            "name": "merkleRoot",
            "src": "contracts/DreadfulzNFT.sol:22"
          },
          {
            "kind": "state-variable-assignment",
            "name": "isSaleActive",
            "src": "contracts/DreadfulzNFT.sol:26"
          },
          {
            "kind": "state-variable-assignment",
            "name": "is2ndSaleActive",
            "src": "contracts/DreadfulzNFT.sol:27"
          },
          {
            "kind": "state-variable-assignment",
            "name": "isFinalSaleActive",
            "src": "contracts/DreadfulzNFT.sol:28"
          },
          {
            "kind": "state-variable-assignment",
            "name": "RESERVED_AMOUNT",
            "src": "contracts/DreadfulzNFT.sol:30"
          },
          {
            "kind": "state-variable-assignment",
            "name": "FIRST_SALE_AMOUNT",
            "src": "contracts/DreadfulzNFT.sol:31"
          },
          {
            "kind": "state-variable-assignment",
            "name": "SECOND_SALE_AMOUNT",
            "src": "contracts/DreadfulzNFT.sol:32"
          },
          {
            "kind": "state-variable-assignment",
            "name": "FINAL_SALE_AMOUNT",
            "src": "contracts/DreadfulzNFT.sol:33"
          },
          {
            "kind": "state-variable-assignment",
            "name": "PRESALE_PRICE",
            "src": "contracts/DreadfulzNFT.sol:35"
          },
          {
            "kind": "state-variable-assignment",
            "name": "FIRST_SALE_PRICE",
            "src": "contracts/DreadfulzNFT.sol:36"
          },
          {
            "kind": "state-variable-assignment",
            "name": "SECOND_SALE_PRICE",
            "src": "contracts/DreadfulzNFT.sol:37"
          },
          {
            "kind": "state-variable-assignment",
            "name": "FINAL_SALE_PRICE",
            "src": "contracts/DreadfulzNFT.sol:38"
          },
          {
            "kind": "state-variable-assignment",
            "name": "DEV_WALLET",
            "src": "contracts/DreadfulzNFT.sol:40"
          },
          {
            "kind": "state-variable-assignment",
            "name": "MARKETING_WALLET",
            "src": "contracts/DreadfulzNFT.sol:41"
          },
          {
            "kind": "state-variable-assignment",
            "name": "payees",
            "src": "contracts/DreadfulzNFT.sol:43"
          },
          {
            "kind": "state-variable-assignment",
            "name": "shares",
            "src": "contracts/DreadfulzNFT.sol:44"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "DreadfulzNFT",
              "label": "_holderTokens",
              "type": "t_mapping(t_address,t_struct(UintSet)2986_storage)",
              "src": "contracts/DreadfulzNFT.sol:17"
            },
            {
              "contract": "DreadfulzNFT",
              "label": "_tokenOwners",
              "type": "t_struct(UintToAddressMap)2283_storage",
              "src": "contracts/DreadfulzNFT.sol:20"
            },
            {
              "contract": "DreadfulzNFT",
              "label": "merkleRoot",
              "type": "t_bytes32",
              "src": "contracts/DreadfulzNFT.sol:22"
            },
            {
              "contract": "DreadfulzNFT",
              "label": "whitelistClaimed",
              "type": "t_mapping(t_address,t_bool)",
              "src": "contracts/DreadfulzNFT.sol:24"
            },
            {
              "contract": "DreadfulzNFT",
              "label": "isSaleActive",
              "type": "t_bool",
              "src": "contracts/DreadfulzNFT.sol:26"
            },
            {
              "contract": "DreadfulzNFT",
              "label": "is2ndSaleActive",
              "type": "t_bool",
              "src": "contracts/DreadfulzNFT.sol:27"
            },
            {
              "contract": "DreadfulzNFT",
              "label": "isFinalSaleActive",
              "type": "t_bool",
              "src": "contracts/DreadfulzNFT.sol:28"
            },
            {
              "contract": "DreadfulzNFT",
              "label": "RESERVED_AMOUNT",
              "type": "t_uint256",
              "src": "contracts/DreadfulzNFT.sol:30"
            },
            {
              "contract": "DreadfulzNFT",
              "label": "FIRST_SALE_AMOUNT",
              "type": "t_uint256",
              "src": "contracts/DreadfulzNFT.sol:31"
            },
            {
              "contract": "DreadfulzNFT",
              "label": "SECOND_SALE_AMOUNT",
              "type": "t_uint256",
              "src": "contracts/DreadfulzNFT.sol:32"
            },
            {
              "contract": "DreadfulzNFT",
              "label": "FINAL_SALE_AMOUNT",
              "type": "t_uint256",
              "src": "contracts/DreadfulzNFT.sol:33"
            },
            {
              "contract": "DreadfulzNFT",
              "label": "PRESALE_PRICE",
              "type": "t_uint256",
              "src": "contracts/DreadfulzNFT.sol:35"
            },
            {
              "contract": "DreadfulzNFT",
              "label": "FIRST_SALE_PRICE",
              "type": "t_uint256",
              "src": "contracts/DreadfulzNFT.sol:36"
            },
            {
              "contract": "DreadfulzNFT",
              "label": "SECOND_SALE_PRICE",
              "type": "t_uint256",
              "src": "contracts/DreadfulzNFT.sol:37"
            },
            {
              "contract": "DreadfulzNFT",
              "label": "FINAL_SALE_PRICE",
              "type": "t_uint256",
              "src": "contracts/DreadfulzNFT.sol:38"
            },
            {
              "contract": "DreadfulzNFT",
              "label": "DEV_WALLET",
              "type": "t_address_payable",
              "src": "contracts/DreadfulzNFT.sol:40"
            },
            {
              "contract": "DreadfulzNFT",
              "label": "MARKETING_WALLET",
              "type": "t_address_payable",
              "src": "contracts/DreadfulzNFT.sol:41"
            },
            {
              "contract": "DreadfulzNFT",
              "label": "payees",
              "type": "t_array(t_address)dyn_storage",
              "src": "contracts/DreadfulzNFT.sol:43"
            },
            {
              "contract": "DreadfulzNFT",
              "label": "shares",
              "type": "t_array(t_uint256)dyn_storage",
              "src": "contracts/DreadfulzNFT.sol:44"
            }
          ],
          "types": {
            "t_mapping(t_address,t_struct(UintSet)2986_storage)": {
              "label": "mapping(address => struct EnumerableSet.UintSet)"
            },
            "t_address": {
              "label": "address"
            },
            "t_struct(UintSet)2986_storage": {
              "label": "struct EnumerableSet.UintSet",
              "members": [
                {
                  "label": "_inner",
                  "type": "t_struct(Set)2528_storage"
                }
              ]
            },
            "t_struct(Set)2528_storage": {
              "label": "struct EnumerableSet.Set",
              "members": [
                {
                  "label": "_values",
                  "type": "t_array(t_bytes32)dyn_storage"
                },
                {
                  "label": "_indexes",
                  "type": "t_mapping(t_bytes32,t_uint256)"
                }
              ]
            },
            "t_array(t_bytes32)dyn_storage": {
              "label": "bytes32[]"
            },
            "t_bytes32": {
              "label": "bytes32"
            },
            "t_mapping(t_bytes32,t_uint256)": {
              "label": "mapping(bytes32 => uint256)"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_struct(UintToAddressMap)2283_storage": {
              "label": "struct EnumerableMap.UintToAddressMap",
              "members": [
                {
                  "label": "_inner",
                  "type": "t_struct(Map)2053_storage"
                }
              ]
            },
            "t_struct(Map)2053_storage": {
              "label": "struct EnumerableMap.Map",
              "members": [
                {
                  "label": "_keys",
                  "type": "t_struct(Bytes32Set)2722_storage"
                },
                {
                  "label": "_values",
                  "type": "t_mapping(t_bytes32,t_bytes32)"
                }
              ]
            },
            "t_struct(Bytes32Set)2722_storage": {
              "label": "struct EnumerableSet.Bytes32Set",
              "members": [
                {
                  "label": "_inner",
                  "type": "t_struct(Set)2528_storage"
                }
              ]
            },
            "t_mapping(t_bytes32,t_bytes32)": {
              "label": "mapping(bytes32 => bytes32)"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_address_payable": {
              "label": "address payable"
            },
            "t_array(t_address)dyn_storage": {
              "label": "address[]"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "DreadfulzStaking": {
        "src": "contracts/DreadfulzStaking.sol:17",
        "version": {
          "withMetadata": "3d286963a86be4c3c602cb2c7829f80f93ecf054cc7cacc14ee6c0c5fbec9aa2",
          "withoutMetadata": "2c7697bb44406bda1c59c4fcaa4e6d54b427fd0608ceb0c5b793659e3517c87e",
          "linkedWithoutMetadata": "2c7697bb44406bda1c59c4fcaa4e6d54b427fd0608ceb0c5b793659e3517c87e"
        },
        "inherit": [
          "Ownable",
          "Context"
        ],
        "libraries": [
          "SafeMath"
        ],
        "methods": [
          "(address,address)",
          "setTokensClaimable(bool)",
          "getStakedTokens(address)",
          "stake(uint256)",
          "stakeBatch(uint256[])",
          "stakeAll()",
          "unstake(uint256)",
          "unstakeBatch(uint256[])",
          "emergencyUnstake(uint256)",
          "updateReward(address)",
          "rewardsOwing(address)",
          "claimReward(address)",
          "unclaimedRewards(address)",
          "onERC721Received(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "DreadfulzStaking",
            "src": "contracts/DreadfulzStaking.sol:66"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "DreadfulzStaking",
              "label": "rewardsToken",
              "type": "t_contract(IERC20)663",
              "src": "contracts/DreadfulzStaking.sol:21"
            },
            {
              "contract": "DreadfulzStaking",
              "label": "dreadfulzNFT",
              "type": "t_contract(DreadfulzNFT)3590",
              "src": "contracts/DreadfulzStaking.sol:22"
            },
            {
              "contract": "DreadfulzStaking",
              "label": "rewardsPerTokenPoints",
              "type": "t_uint256",
              "src": "contracts/DreadfulzStaking.sol:24"
            },
            {
              "contract": "DreadfulzStaking",
              "label": "totalUnclaimedRewards",
              "type": "t_uint256",
              "src": "contracts/DreadfulzStaking.sol:25"
            },
            {
              "contract": "DreadfulzStaking",
              "label": "stakers",
              "type": "t_mapping(t_address,t_struct(Staker)3629_storage)",
              "src": "contracts/DreadfulzStaking.sol:42"
            },
            {
              "contract": "DreadfulzStaking",
              "label": "tokenOwner",
              "type": "t_mapping(t_uint256,t_address)",
              "src": "contracts/DreadfulzStaking.sol:45"
            },
            {
              "contract": "DreadfulzStaking",
              "label": "tokensClaimable",
              "type": "t_bool",
              "src": "contracts/DreadfulzStaking.sol:48"
            },
            {
              "contract": "DreadfulzStaking",
              "label": "initialised",
              "type": "t_bool",
              "src": "contracts/DreadfulzStaking.sol:49"
            }
          ],
          "types": {
            "t_contract(IERC20)663": {
              "label": "contract IERC20"
            },
            "t_contract(DreadfulzNFT)3590": {
              "label": "contract DreadfulzNFT"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_struct(Staker)3629_storage)": {
              "label": "mapping(address => struct DreadfulzStaking.Staker)"
            },
            "t_address": {
              "label": "address"
            },
            "t_struct(Staker)3629_storage": {
              "label": "struct DreadfulzStaking.Staker",
              "members": [
                {
                  "label": "tokenIds",
                  "type": "t_array(t_uint256)dyn_storage"
                },
                {
                  "label": "tokenIndex",
                  "type": "t_mapping(t_uint256,t_uint256)"
                },
                {
                  "label": "lastRewardPoints",
                  "type": "t_uint256"
                },
                {
                  "label": "rewardsEarned",
                  "type": "t_uint256"
                },
                {
                  "label": "rewardsReleased",
                  "type": "t_uint256"
                }
              ]
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]"
            },
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)"
            },
            "t_bool": {
              "label": "bool"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC721A": {
        "src": "erc721a/contracts/ERC721A.sol:23",
        "version": {
          "withMetadata": "d90e8953f63fb7e09b553fb57c484f25b64a2b502bb9adf41ef329e5f28fad0c",
          "withoutMetadata": "b46845ce757cb59201ed5980ba1e238b1af2a42363b8f4b5a07b70d5394d3bf0",
          "linkedWithoutMetadata": "b46845ce757cb59201ed5980ba1e238b1af2a42363b8f4b5a07b70d5394d3bf0"
        },
        "inherit": [
          "IERC721Enumerable",
          "IERC721Metadata",
          "IERC721",
          "ERC165",
          "IERC165",
          "Context"
        ],
        "libraries": [
          "Address",
          "Strings"
        ],
        "methods": [
          "(string,string,uint256)",
          "totalSupply()",
          "tokenByIndex(uint256)",
          "tokenOfOwnerByIndex(address,uint256)",
          "supportsInterface(bytes4)",
          "balanceOf(address)",
          "ownerOf(uint256)",
          "name()",
          "symbol()",
          "tokenURI(uint256)",
          "approve(address,uint256)",
          "getApproved(uint256)",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "transferFrom(address,address,uint256)",
          "safeTransferFrom(address,address,uint256)",
          "safeTransferFrom(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC721A",
            "src": "erc721a/contracts/ERC721A.sol:64"
          },
          {
            "kind": "state-variable-assignment",
            "name": "currentIndex",
            "src": "erc721a/contracts/ERC721A.sol:37"
          },
          {
            "kind": "state-variable-immutable",
            "name": "maxBatchSize",
            "src": "erc721a/contracts/ERC721A.sol:39"
          },
          {
            "kind": "state-variable-assignment",
            "name": "nextOwnerToExplicitlySet",
            "src": "erc721a/contracts/ERC721A.sol:398"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ERC721A",
              "label": "currentIndex",
              "type": "t_uint256",
              "src": "erc721a/contracts/ERC721A.sol:37"
            },
            {
              "contract": "ERC721A",
              "label": "_name",
              "type": "t_string_storage",
              "src": "erc721a/contracts/ERC721A.sol:42"
            },
            {
              "contract": "ERC721A",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "erc721a/contracts/ERC721A.sol:45"
            },
            {
              "contract": "ERC721A",
              "label": "_ownerships",
              "type": "t_mapping(t_uint256,t_struct(TokenOwnership)4311_storage)",
              "src": "erc721a/contracts/ERC721A.sol:49"
            },
            {
              "contract": "ERC721A",
              "label": "_addressData",
              "type": "t_mapping(t_address,t_struct(AddressData)4316_storage)",
              "src": "erc721a/contracts/ERC721A.sol:52"
            },
            {
              "contract": "ERC721A",
              "label": "_tokenApprovals",
              "type": "t_mapping(t_uint256,t_address)",
              "src": "erc721a/contracts/ERC721A.sol:55"
            },
            {
              "contract": "ERC721A",
              "label": "_operatorApprovals",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "src": "erc721a/contracts/ERC721A.sol:58"
            },
            {
              "contract": "ERC721A",
              "label": "nextOwnerToExplicitlySet",
              "type": "t_uint256",
              "src": "erc721a/contracts/ERC721A.sol:398"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_mapping(t_uint256,t_struct(TokenOwnership)4311_storage)": {
              "label": "mapping(uint256 => struct ERC721A.TokenOwnership)"
            },
            "t_struct(TokenOwnership)4311_storage": {
              "label": "struct ERC721A.TokenOwnership",
              "members": [
                {
                  "label": "addr",
                  "type": "t_address"
                },
                {
                  "label": "startTimestamp",
                  "type": "t_uint64"
                }
              ]
            },
            "t_address": {
              "label": "address"
            },
            "t_uint64": {
              "label": "uint64"
            },
            "t_mapping(t_address,t_struct(AddressData)4316_storage)": {
              "label": "mapping(address => struct ERC721A.AddressData)"
            },
            "t_struct(AddressData)4316_storage": {
              "label": "struct ERC721A.AddressData",
              "members": [
                {
                  "label": "balance",
                  "type": "t_uint128"
                },
                {
                  "label": "numberMinted",
                  "type": "t_uint128"
                }
              ]
            },
            "t_uint128": {
              "label": "uint128"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_bool": {
              "label": "bool"
            }
          },
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "Ownable": {
        "src": "@openzeppelin/contracts/access/Ownable.sol:20",
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin/contracts/access/Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "Ownable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "PaymentSplitter": {
        "src": "@openzeppelin/contracts/finance/PaymentSplitter.sol:27",
        "version": {
          "withMetadata": "7ca80aa715b481cb550ce3949750475a418af4045c653fe6bed689f443f26bfb",
          "withoutMetadata": "a4e026d1eefdf675d63e6c33090429de6d5c3dc870d8924a7112b284573f6a31",
          "linkedWithoutMetadata": "a4e026d1eefdf675d63e6c33090429de6d5c3dc870d8924a7112b284573f6a31"
        },
        "inherit": [
          "Context"
        ],
        "libraries": [
          "Address",
          "SafeERC20"
        ],
        "methods": [
          "(address[],uint256[])",
          "()",
          "totalShares()",
          "totalReleased()",
          "totalReleased(address)",
          "shares(address)",
          "released(address)",
          "released(address,address)",
          "payee(uint256)",
          "release(address payable)",
          "release(address,address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "PaymentSplitter",
            "src": "@openzeppelin/contracts/finance/PaymentSplitter.sol:50"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "PaymentSplitter",
              "label": "_totalShares",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts/finance/PaymentSplitter.sol:33"
            },
            {
              "contract": "PaymentSplitter",
              "label": "_totalReleased",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts/finance/PaymentSplitter.sol:34"
            },
            {
              "contract": "PaymentSplitter",
              "label": "_shares",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin/contracts/finance/PaymentSplitter.sol:36"
            },
            {
              "contract": "PaymentSplitter",
              "label": "_released",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin/contracts/finance/PaymentSplitter.sol:37"
            },
            {
              "contract": "PaymentSplitter",
              "label": "_payees",
              "type": "t_array(t_address)dyn_storage",
              "src": "@openzeppelin/contracts/finance/PaymentSplitter.sol:38"
            },
            {
              "contract": "PaymentSplitter",
              "label": "_erc20TotalReleased",
              "type": "t_mapping(t_contract(IERC20)663,t_uint256)",
              "src": "@openzeppelin/contracts/finance/PaymentSplitter.sol:40"
            },
            {
              "contract": "PaymentSplitter",
              "label": "_erc20Released",
              "type": "t_mapping(t_contract(IERC20)663,t_mapping(t_address,t_uint256))",
              "src": "@openzeppelin/contracts/finance/PaymentSplitter.sol:41"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_array(t_address)dyn_storage": {
              "label": "address[]"
            },
            "t_mapping(t_contract(IERC20)663,t_uint256)": {
              "label": "mapping(contract IERC20 => uint256)"
            },
            "t_contract(IERC20)663": {
              "label": "contract IERC20"
            },
            "t_mapping(t_contract(IERC20)663,t_mapping(t_address,t_uint256))": {
              "label": "mapping(contract IERC20 => mapping(address => uint256))"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ReentrancyGuard": {
        "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:22",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReentrancyGuard",
            "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:39"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ReentrancyGuard",
              "label": "_status",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:37"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "SafeERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:18",
        "version": {
          "withMetadata": "56f3b47fe199a74f30abd43f547fa939c88066448b04cd5f17bdafbe2e03804a",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "Address"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC721": {
        "src": "@openzeppelin/contracts/token/ERC721/IERC721.sol:11",
        "inherit": [
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "balanceOf(address)",
          "ownerOf(uint256)",
          "safeTransferFrom(address,address,uint256)",
          "transferFrom(address,address,uint256)",
          "approve(address,uint256)",
          "getApproved(uint256)",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "safeTransferFrom(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC721Receiver": {
        "src": "@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol:11",
        "inherit": [],
        "libraries": [],
        "methods": [
          "onERC721Received(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC721Enumerable": {
        "src": "@openzeppelin/contracts/token/ERC721/extensions/IERC721Enumerable.sol:12",
        "inherit": [
          "IERC721",
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "tokenOfOwnerByIndex(address,uint256)",
          "tokenByIndex(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC721Metadata": {
        "src": "@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol:12",
        "inherit": [
          "IERC721",
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "tokenURI(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Address": {
        "src": "@openzeppelin/contracts/utils/Address.sol:9",
        "version": {
          "withMetadata": "484d2cade7f176ca5050f1f249737dd81ac6ed00490f5099f09054c1bc596b67",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:186"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Strings": {
        "src": "@openzeppelin/contracts/utils/Strings.sol:9",
        "version": {
          "withMetadata": "b16d77140251bcd9725701aa6d1902c15605c3749a720b7aac593644f6c217ac",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "MerkleProof": {
        "src": "@openzeppelin/contracts/utils/cryptography/MerkleProof.sol:15",
        "version": {
          "withMetadata": "eae9c389bfc7a3fccc9b1be4ba129d982448e261280aa30913fa3d7bc9f5440f",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC165": {
        "src": "@openzeppelin/contracts/utils/introspection/ERC165.sol:22",
        "inherit": [
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC165": {
        "src": "@openzeppelin/contracts/utils/introspection/IERC165.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "SafeMath": {
        "src": "@openzeppelin/contracts/utils/math/SafeMath.sol:16",
        "version": {
          "withMetadata": "8418487e012b6d36d0f064d32c31976a5cbfce3373a77c05261a0ae367939886",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "EnumerableMap": {
        "src": "@openzeppelin/contracts/utils/structs/EnumerableMap.sol:32",
        "version": {
          "withMetadata": "eb2563fd64638723253d815b920b9bdd7ba216c3415fd72b3339b5602807aab3",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "EnumerableSet"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "EnumerableSet": {
        "src": "@openzeppelin/contracts/utils/structs/EnumerableSet.sol:30",
        "version": {
          "withMetadata": "6ee35d052c3beaf7db7a043d937ed616f73a3d6a147dd22fd5b78a58e78e8277",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "DreadfulzNFT": {
        "src": "contracts/DreadfulzNFT.sol:12",
        "version": {
          "withMetadata": "9626146258e613756b0238f7d2eed682baf1ce4037d0a0356fc11204c33c4dff",
          "withoutMetadata": "4ea48cbb267fc4ae2f5879ac93bd024136e95953b32ed10b94ac0183de9d4051",
          "linkedWithoutMetadata": "4ea48cbb267fc4ae2f5879ac93bd024136e95953b32ed10b94ac0183de9d4051"
        },
        "inherit": [
          "PaymentSplitter",
          "ERC721A",
          "IERC721Enumerable",
          "IERC721Metadata",
          "IERC721",
          "ERC165",
          "IERC165",
          "ReentrancyGuard",
          "Ownable",
          "Context"
        ],
        "libraries": [
          "EnumerableSet",
          "EnumerableMap",
          "MerkleProof"
        ],
        "methods": [
          "()",
          "mint(uint256)",
          "presale(uint256,address,bytes32[])",
          "balanceOfOwner(address)",
          "mintToTeam(address,uint256)",
          "setSaleActive()",
          "set2ndSaleActive()",
          "setFinalSaleActive()",
          "setMerkleRoot(bytes32)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "DreadfulzNFT",
            "src": "contracts/DreadfulzNFT.sol:48"
          },
          {
            "kind": "state-variable-assignment",
            "name": "merkleRoot",
            "src": "contracts/DreadfulzNFT.sol:22"
          },
          {
            "kind": "state-variable-assignment",
            "name": "isSaleActive",
            "src": "contracts/DreadfulzNFT.sol:26"
          },
          {
            "kind": "state-variable-assignment",
            "name": "is2ndSaleActive",
            "src": "contracts/DreadfulzNFT.sol:27"
          },
          {
            "kind": "state-variable-assignment",
            "name": "isFinalSaleActive",
            "src": "contracts/DreadfulzNFT.sol:28"
          },
          {
            "kind": "state-variable-assignment",
            "name": "RESERVED_AMOUNT",
            "src": "contracts/DreadfulzNFT.sol:30"
          },
          {
            "kind": "state-variable-assignment",
            "name": "FIRST_SALE_AMOUNT",
            "src": "contracts/DreadfulzNFT.sol:31"
          },
          {
            "kind": "state-variable-assignment",
            "name": "SECOND_SALE_AMOUNT",
            "src": "contracts/DreadfulzNFT.sol:32"
          },
          {
            "kind": "state-variable-assignment",
            "name": "FINAL_SALE_AMOUNT",
            "src": "contracts/DreadfulzNFT.sol:33"
          },
          {
            "kind": "state-variable-assignment",
            "name": "PRESALE_PRICE",
            "src": "contracts/DreadfulzNFT.sol:35"
          },
          {
            "kind": "state-variable-assignment",
            "name": "FIRST_SALE_PRICE",
            "src": "contracts/DreadfulzNFT.sol:36"
          },
          {
            "kind": "state-variable-assignment",
            "name": "SECOND_SALE_PRICE",
            "src": "contracts/DreadfulzNFT.sol:37"
          },
          {
            "kind": "state-variable-assignment",
            "name": "FINAL_SALE_PRICE",
            "src": "contracts/DreadfulzNFT.sol:38"
          },
          {
            "kind": "state-variable-assignment",
            "name": "DEV_WALLET",
            "src": "contracts/DreadfulzNFT.sol:40"
          },
          {
            "kind": "state-variable-assignment",
            "name": "MARKETING_WALLET",
            "src": "contracts/DreadfulzNFT.sol:41"
          },
          {
            "kind": "state-variable-assignment",
            "name": "payees",
            "src": "contracts/DreadfulzNFT.sol:43"
          },
          {
            "kind": "state-variable-assignment",
            "name": "shares",
            "src": "contracts/DreadfulzNFT.sol:44"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "DreadfulzNFT",
              "label": "_holderTokens",
              "type": "t_mapping(t_address,t_struct(UintSet)2986_storage)",
              "src": "contracts/DreadfulzNFT.sol:17"
            },
            {
              "contract": "DreadfulzNFT",
              "label": "_tokenOwners",
              "type": "t_struct(UintToAddressMap)2283_storage",
              "src": "contracts/DreadfulzNFT.sol:20"
            },
            {
              "contract": "DreadfulzNFT",
              "label": "merkleRoot",
              "type": "t_bytes32",
              "src": "contracts/DreadfulzNFT.sol:22"
            },
            {
              "contract": "DreadfulzNFT",
              "label": "whitelistClaimed",
              "type": "t_mapping(t_address,t_bool)",
              "src": "contracts/DreadfulzNFT.sol:24"
            },
            {
              "contract": "DreadfulzNFT",
              "label": "isSaleActive",
              "type": "t_bool",
              "src": "contracts/DreadfulzNFT.sol:26"
            },
            {
              "contract": "DreadfulzNFT",
              "label": "is2ndSaleActive",
              "type": "t_bool",
              "src": "contracts/DreadfulzNFT.sol:27"
            },
            {
              "contract": "DreadfulzNFT",
              "label": "isFinalSaleActive",
              "type": "t_bool",
              "src": "contracts/DreadfulzNFT.sol:28"
            },
            {
              "contract": "DreadfulzNFT",
              "label": "RESERVED_AMOUNT",
              "type": "t_uint256",
              "src": "contracts/DreadfulzNFT.sol:30"
            },
            {
              "contract": "DreadfulzNFT",
              "label": "FIRST_SALE_AMOUNT",
              "type": "t_uint256",
              "src": "contracts/DreadfulzNFT.sol:31"
            },
            {
              "contract": "DreadfulzNFT",
              "label": "SECOND_SALE_AMOUNT",
              "type": "t_uint256",
              "src": "contracts/DreadfulzNFT.sol:32"
            },
            {
              "contract": "DreadfulzNFT",
              "label": "FINAL_SALE_AMOUNT",
              "type": "t_uint256",
              "src": "contracts/DreadfulzNFT.sol:33"
            },
            {
              "contract": "DreadfulzNFT",
              "label": "PRESALE_PRICE",
              "type": "t_uint256",
              "src": "contracts/DreadfulzNFT.sol:35"
            },
            {
              "contract": "DreadfulzNFT",
              "label": "FIRST_SALE_PRICE",
              "type": "t_uint256",
              "src": "contracts/DreadfulzNFT.sol:36"
            },
            {
              "contract": "DreadfulzNFT",
              "label": "SECOND_SALE_PRICE",
              "type": "t_uint256",
              "src": "contracts/DreadfulzNFT.sol:37"
            },
            {
              "contract": "DreadfulzNFT",
              "label": "FINAL_SALE_PRICE",
              "type": "t_uint256",
              "src": "contracts/DreadfulzNFT.sol:38"
            },
            {
              "contract": "DreadfulzNFT",
              "label": "DEV_WALLET",
              "type": "t_address_payable",
              "src": "contracts/DreadfulzNFT.sol:40"
            },
            {
              "contract": "DreadfulzNFT",
              "label": "MARKETING_WALLET",
              "type": "t_address_payable",
              "src": "contracts/DreadfulzNFT.sol:41"
            },
            {
              "contract": "DreadfulzNFT",
              "label": "payees",
              "type": "t_array(t_address)dyn_storage",
              "src": "contracts/DreadfulzNFT.sol:43"
            },
            {
              "contract": "DreadfulzNFT",
              "label": "shares",
              "type": "t_array(t_uint256)dyn_storage",
              "src": "contracts/DreadfulzNFT.sol:44"
            }
          ],
          "types": {
            "t_mapping(t_address,t_struct(UintSet)2986_storage)": {
              "label": "mapping(address => struct EnumerableSet.UintSet)"
            },
            "t_address": {
              "label": "address"
            },
            "t_struct(UintSet)2986_storage": {
              "label": "struct EnumerableSet.UintSet",
              "members": [
                {
                  "label": "_inner",
                  "type": "t_struct(Set)2528_storage"
                }
              ]
            },
            "t_struct(Set)2528_storage": {
              "label": "struct EnumerableSet.Set",
              "members": [
                {
                  "label": "_values",
                  "type": "t_array(t_bytes32)dyn_storage"
                },
                {
                  "label": "_indexes",
                  "type": "t_mapping(t_bytes32,t_uint256)"
                }
              ]
            },
            "t_array(t_bytes32)dyn_storage": {
              "label": "bytes32[]"
            },
            "t_bytes32": {
              "label": "bytes32"
            },
            "t_mapping(t_bytes32,t_uint256)": {
              "label": "mapping(bytes32 => uint256)"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_struct(UintToAddressMap)2283_storage": {
              "label": "struct EnumerableMap.UintToAddressMap",
              "members": [
                {
                  "label": "_inner",
                  "type": "t_struct(Map)2053_storage"
                }
              ]
            },
            "t_struct(Map)2053_storage": {
              "label": "struct EnumerableMap.Map",
              "members": [
                {
                  "label": "_keys",
                  "type": "t_struct(Bytes32Set)2722_storage"
                },
                {
                  "label": "_values",
                  "type": "t_mapping(t_bytes32,t_bytes32)"
                }
              ]
            },
            "t_struct(Bytes32Set)2722_storage": {
              "label": "struct EnumerableSet.Bytes32Set",
              "members": [
                {
                  "label": "_inner",
                  "type": "t_struct(Set)2528_storage"
                }
              ]
            },
            "t_mapping(t_bytes32,t_bytes32)": {
              "label": "mapping(bytes32 => bytes32)"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_address_payable": {
              "label": "address payable"
            },
            "t_array(t_address)dyn_storage": {
              "label": "address[]"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "DreadfulzStaking": {
        "src": "contracts/DreadfulzStaking.sol:17",
        "version": {
          "withMetadata": "bea0f5135112497ccc2a1add153ef3e5127722201633f8625344e708afa506fd",
          "withoutMetadata": "2c7697bb44406bda1c59c4fcaa4e6d54b427fd0608ceb0c5b793659e3517c87e",
          "linkedWithoutMetadata": "2c7697bb44406bda1c59c4fcaa4e6d54b427fd0608ceb0c5b793659e3517c87e"
        },
        "inherit": [
          "Ownable",
          "Context"
        ],
        "libraries": [
          "SafeMath"
        ],
        "methods": [
          "(address,address)",
          "setTokensClaimable(bool)",
          "getStakedTokens(address)",
          "stake(uint256)",
          "stakeBatch(uint256[])",
          "stakeAll()",
          "unstake(uint256)",
          "unstakeBatch(uint256[])",
          "emergencyUnstake(uint256)",
          "updateReward(address)",
          "rewardsOwing(address)",
          "claimReward(address)",
          "unclaimedRewards(address)",
          "onERC721Received(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "DreadfulzStaking",
            "src": "contracts/DreadfulzStaking.sol:66"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "DreadfulzStaking",
              "label": "rewardsToken",
              "type": "t_contract(IERC20)663",
              "src": "contracts/DreadfulzStaking.sol:21"
            },
            {
              "contract": "DreadfulzStaking",
              "label": "dreadfulzNFT",
              "type": "t_contract(DreadfulzNFT)3590",
              "src": "contracts/DreadfulzStaking.sol:22"
            },
            {
              "contract": "DreadfulzStaking",
              "label": "rewardsPerTokenPoints",
              "type": "t_uint256",
              "src": "contracts/DreadfulzStaking.sol:24"
            },
            {
              "contract": "DreadfulzStaking",
              "label": "totalUnclaimedRewards",
              "type": "t_uint256",
              "src": "contracts/DreadfulzStaking.sol:25"
            },
            {
              "contract": "DreadfulzStaking",
              "label": "stakers",
              "type": "t_mapping(t_address,t_struct(Staker)3629_storage)",
              "src": "contracts/DreadfulzStaking.sol:42"
            },
            {
              "contract": "DreadfulzStaking",
              "label": "tokenOwner",
              "type": "t_mapping(t_uint256,t_address)",
              "src": "contracts/DreadfulzStaking.sol:45"
            },
            {
              "contract": "DreadfulzStaking",
              "label": "tokensClaimable",
              "type": "t_bool",
              "src": "contracts/DreadfulzStaking.sol:48"
            },
            {
              "contract": "DreadfulzStaking",
              "label": "initialised",
              "type": "t_bool",
              "src": "contracts/DreadfulzStaking.sol:49"
            }
          ],
          "types": {
            "t_contract(IERC20)663": {
              "label": "contract IERC20"
            },
            "t_contract(DreadfulzNFT)3590": {
              "label": "contract DreadfulzNFT"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_struct(Staker)3629_storage)": {
              "label": "mapping(address => struct DreadfulzStaking.Staker)"
            },
            "t_address": {
              "label": "address"
            },
            "t_struct(Staker)3629_storage": {
              "label": "struct DreadfulzStaking.Staker",
              "members": [
                {
                  "label": "tokenIds",
                  "type": "t_array(t_uint256)dyn_storage"
                },
                {
                  "label": "tokenIndex",
                  "type": "t_mapping(t_uint256,t_uint256)"
                },
                {
                  "label": "lastRewardPoints",
                  "type": "t_uint256"
                },
                {
                  "label": "rewardsEarned",
                  "type": "t_uint256"
                },
                {
                  "label": "rewardsReleased",
                  "type": "t_uint256"
                }
              ]
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]"
            },
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)"
            },
            "t_bool": {
              "label": "bool"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC721A": {
        "src": "erc721a/contracts/ERC721A.sol:23",
        "version": {
          "withMetadata": "d90e8953f63fb7e09b553fb57c484f25b64a2b502bb9adf41ef329e5f28fad0c",
          "withoutMetadata": "b46845ce757cb59201ed5980ba1e238b1af2a42363b8f4b5a07b70d5394d3bf0",
          "linkedWithoutMetadata": "b46845ce757cb59201ed5980ba1e238b1af2a42363b8f4b5a07b70d5394d3bf0"
        },
        "inherit": [
          "IERC721Enumerable",
          "IERC721Metadata",
          "IERC721",
          "ERC165",
          "IERC165",
          "Context"
        ],
        "libraries": [
          "Address",
          "Strings"
        ],
        "methods": [
          "(string,string,uint256)",
          "totalSupply()",
          "tokenByIndex(uint256)",
          "tokenOfOwnerByIndex(address,uint256)",
          "supportsInterface(bytes4)",
          "balanceOf(address)",
          "ownerOf(uint256)",
          "name()",
          "symbol()",
          "tokenURI(uint256)",
          "approve(address,uint256)",
          "getApproved(uint256)",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "transferFrom(address,address,uint256)",
          "safeTransferFrom(address,address,uint256)",
          "safeTransferFrom(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC721A",
            "src": "erc721a/contracts/ERC721A.sol:64"
          },
          {
            "kind": "state-variable-assignment",
            "name": "currentIndex",
            "src": "erc721a/contracts/ERC721A.sol:37"
          },
          {
            "kind": "state-variable-immutable",
            "name": "maxBatchSize",
            "src": "erc721a/contracts/ERC721A.sol:39"
          },
          {
            "kind": "state-variable-assignment",
            "name": "nextOwnerToExplicitlySet",
            "src": "erc721a/contracts/ERC721A.sol:398"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ERC721A",
              "label": "currentIndex",
              "type": "t_uint256",
              "src": "erc721a/contracts/ERC721A.sol:37"
            },
            {
              "contract": "ERC721A",
              "label": "_name",
              "type": "t_string_storage",
              "src": "erc721a/contracts/ERC721A.sol:42"
            },
            {
              "contract": "ERC721A",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "erc721a/contracts/ERC721A.sol:45"
            },
            {
              "contract": "ERC721A",
              "label": "_ownerships",
              "type": "t_mapping(t_uint256,t_struct(TokenOwnership)4311_storage)",
              "src": "erc721a/contracts/ERC721A.sol:49"
            },
            {
              "contract": "ERC721A",
              "label": "_addressData",
              "type": "t_mapping(t_address,t_struct(AddressData)4316_storage)",
              "src": "erc721a/contracts/ERC721A.sol:52"
            },
            {
              "contract": "ERC721A",
              "label": "_tokenApprovals",
              "type": "t_mapping(t_uint256,t_address)",
              "src": "erc721a/contracts/ERC721A.sol:55"
            },
            {
              "contract": "ERC721A",
              "label": "_operatorApprovals",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "src": "erc721a/contracts/ERC721A.sol:58"
            },
            {
              "contract": "ERC721A",
              "label": "nextOwnerToExplicitlySet",
              "type": "t_uint256",
              "src": "erc721a/contracts/ERC721A.sol:398"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_mapping(t_uint256,t_struct(TokenOwnership)4311_storage)": {
              "label": "mapping(uint256 => struct ERC721A.TokenOwnership)"
            },
            "t_struct(TokenOwnership)4311_storage": {
              "label": "struct ERC721A.TokenOwnership",
              "members": [
                {
                  "label": "addr",
                  "type": "t_address"
                },
                {
                  "label": "startTimestamp",
                  "type": "t_uint64"
                }
              ]
            },
            "t_address": {
              "label": "address"
            },
            "t_uint64": {
              "label": "uint64"
            },
            "t_mapping(t_address,t_struct(AddressData)4316_storage)": {
              "label": "mapping(address => struct ERC721A.AddressData)"
            },
            "t_struct(AddressData)4316_storage": {
              "label": "struct ERC721A.AddressData",
              "members": [
                {
                  "label": "balance",
                  "type": "t_uint128"
                },
                {
                  "label": "numberMinted",
                  "type": "t_uint128"
                }
              ]
            },
            "t_uint128": {
              "label": "uint128"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_bool": {
              "label": "bool"
            }
          },
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "Ownable": {
        "src": "@openzeppelin/contracts/access/Ownable.sol:20",
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin/contracts/access/Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "Ownable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "PaymentSplitter": {
        "src": "@openzeppelin/contracts/finance/PaymentSplitter.sol:27",
        "version": {
          "withMetadata": "7ca80aa715b481cb550ce3949750475a418af4045c653fe6bed689f443f26bfb",
          "withoutMetadata": "a4e026d1eefdf675d63e6c33090429de6d5c3dc870d8924a7112b284573f6a31",
          "linkedWithoutMetadata": "a4e026d1eefdf675d63e6c33090429de6d5c3dc870d8924a7112b284573f6a31"
        },
        "inherit": [
          "Context"
        ],
        "libraries": [
          "Address",
          "SafeERC20"
        ],
        "methods": [
          "(address[],uint256[])",
          "()",
          "totalShares()",
          "totalReleased()",
          "totalReleased(address)",
          "shares(address)",
          "released(address)",
          "released(address,address)",
          "payee(uint256)",
          "release(address payable)",
          "release(address,address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "PaymentSplitter",
            "src": "@openzeppelin/contracts/finance/PaymentSplitter.sol:50"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "PaymentSplitter",
              "label": "_totalShares",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts/finance/PaymentSplitter.sol:33"
            },
            {
              "contract": "PaymentSplitter",
              "label": "_totalReleased",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts/finance/PaymentSplitter.sol:34"
            },
            {
              "contract": "PaymentSplitter",
              "label": "_shares",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin/contracts/finance/PaymentSplitter.sol:36"
            },
            {
              "contract": "PaymentSplitter",
              "label": "_released",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin/contracts/finance/PaymentSplitter.sol:37"
            },
            {
              "contract": "PaymentSplitter",
              "label": "_payees",
              "type": "t_array(t_address)dyn_storage",
              "src": "@openzeppelin/contracts/finance/PaymentSplitter.sol:38"
            },
            {
              "contract": "PaymentSplitter",
              "label": "_erc20TotalReleased",
              "type": "t_mapping(t_contract(IERC20)663,t_uint256)",
              "src": "@openzeppelin/contracts/finance/PaymentSplitter.sol:40"
            },
            {
              "contract": "PaymentSplitter",
              "label": "_erc20Released",
              "type": "t_mapping(t_contract(IERC20)663,t_mapping(t_address,t_uint256))",
              "src": "@openzeppelin/contracts/finance/PaymentSplitter.sol:41"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_array(t_address)dyn_storage": {
              "label": "address[]"
            },
            "t_mapping(t_contract(IERC20)663,t_uint256)": {
              "label": "mapping(contract IERC20 => uint256)"
            },
            "t_contract(IERC20)663": {
              "label": "contract IERC20"
            },
            "t_mapping(t_contract(IERC20)663,t_mapping(t_address,t_uint256))": {
              "label": "mapping(contract IERC20 => mapping(address => uint256))"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ReentrancyGuard": {
        "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:22",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReentrancyGuard",
            "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:39"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ReentrancyGuard",
              "label": "_status",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:37"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "SafeERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:18",
        "version": {
          "withMetadata": "56f3b47fe199a74f30abd43f547fa939c88066448b04cd5f17bdafbe2e03804a",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "Address"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC721": {
        "src": "@openzeppelin/contracts/token/ERC721/IERC721.sol:11",
        "inherit": [
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "balanceOf(address)",
          "ownerOf(uint256)",
          "safeTransferFrom(address,address,uint256)",
          "transferFrom(address,address,uint256)",
          "approve(address,uint256)",
          "getApproved(uint256)",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "safeTransferFrom(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC721Receiver": {
        "src": "@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol:11",
        "inherit": [],
        "libraries": [],
        "methods": [
          "onERC721Received(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC721Enumerable": {
        "src": "@openzeppelin/contracts/token/ERC721/extensions/IERC721Enumerable.sol:12",
        "inherit": [
          "IERC721",
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "tokenOfOwnerByIndex(address,uint256)",
          "tokenByIndex(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC721Metadata": {
        "src": "@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol:12",
        "inherit": [
          "IERC721",
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "tokenURI(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Address": {
        "src": "@openzeppelin/contracts/utils/Address.sol:9",
        "version": {
          "withMetadata": "484d2cade7f176ca5050f1f249737dd81ac6ed00490f5099f09054c1bc596b67",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:186"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Strings": {
        "src": "@openzeppelin/contracts/utils/Strings.sol:9",
        "version": {
          "withMetadata": "b16d77140251bcd9725701aa6d1902c15605c3749a720b7aac593644f6c217ac",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "MerkleProof": {
        "src": "@openzeppelin/contracts/utils/cryptography/MerkleProof.sol:15",
        "version": {
          "withMetadata": "eae9c389bfc7a3fccc9b1be4ba129d982448e261280aa30913fa3d7bc9f5440f",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC165": {
        "src": "@openzeppelin/contracts/utils/introspection/ERC165.sol:22",
        "inherit": [
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC165": {
        "src": "@openzeppelin/contracts/utils/introspection/IERC165.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "SafeMath": {
        "src": "@openzeppelin/contracts/utils/math/SafeMath.sol:16",
        "version": {
          "withMetadata": "8418487e012b6d36d0f064d32c31976a5cbfce3373a77c05261a0ae367939886",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "EnumerableMap": {
        "src": "@openzeppelin/contracts/utils/structs/EnumerableMap.sol:32",
        "version": {
          "withMetadata": "eb2563fd64638723253d815b920b9bdd7ba216c3415fd72b3339b5602807aab3",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "EnumerableSet"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "EnumerableSet": {
        "src": "@openzeppelin/contracts/utils/structs/EnumerableSet.sol:30",
        "version": {
          "withMetadata": "6ee35d052c3beaf7db7a043d937ed616f73a3d6a147dd22fd5b78a58e78e8277",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "DreadfulzNFT": {
        "src": "contracts/DreadfulzNFT.sol:12",
        "version": {
          "withMetadata": "659b0d0f3d656800df4877028975e22798bcbd4a5b00138658ef61970d52870d",
          "withoutMetadata": "0e2b2fd89f31705117889766a7366df58d32051fa9341278ab1feaf0eee9a36a",
          "linkedWithoutMetadata": "0e2b2fd89f31705117889766a7366df58d32051fa9341278ab1feaf0eee9a36a"
        },
        "inherit": [
          "PaymentSplitter",
          "ERC721A",
          "IERC721Enumerable",
          "IERC721Metadata",
          "IERC721",
          "ERC165",
          "IERC165",
          "ReentrancyGuard",
          "Ownable",
          "Context"
        ],
        "libraries": [
          "EnumerableSet",
          "EnumerableMap",
          "MerkleProof"
        ],
        "methods": [
          "()",
          "mint(uint256)",
          "presale(uint256,address,bytes32[])",
          "balanceOfOwner(address)",
          "mintToTeam(address,uint256)",
          "setSaleActive()",
          "set2ndSaleActive()",
          "setFinalSaleActive()",
          "setMerkleRoot(bytes32)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "DreadfulzNFT",
            "src": "contracts/DreadfulzNFT.sol:48"
          },
          {
            "kind": "state-variable-assignment",
            "name": "merkleRoot",
            "src": "contracts/DreadfulzNFT.sol:22"
          },
          {
            "kind": "state-variable-assignment",
            "name": "isSaleActive",
            "src": "contracts/DreadfulzNFT.sol:26"
          },
          {
            "kind": "state-variable-assignment",
            "name": "is2ndSaleActive",
            "src": "contracts/DreadfulzNFT.sol:27"
          },
          {
            "kind": "state-variable-assignment",
            "name": "isFinalSaleActive",
            "src": "contracts/DreadfulzNFT.sol:28"
          },
          {
            "kind": "state-variable-assignment",
            "name": "RESERVED_AMOUNT",
            "src": "contracts/DreadfulzNFT.sol:30"
          },
          {
            "kind": "state-variable-assignment",
            "name": "FIRST_SALE_AMOUNT",
            "src": "contracts/DreadfulzNFT.sol:31"
          },
          {
            "kind": "state-variable-assignment",
            "name": "SECOND_SALE_AMOUNT",
            "src": "contracts/DreadfulzNFT.sol:32"
          },
          {
            "kind": "state-variable-assignment",
            "name": "FINAL_SALE_AMOUNT",
            "src": "contracts/DreadfulzNFT.sol:33"
          },
          {
            "kind": "state-variable-assignment",
            "name": "PRESALE_PRICE",
            "src": "contracts/DreadfulzNFT.sol:35"
          },
          {
            "kind": "state-variable-assignment",
            "name": "FIRST_SALE_PRICE",
            "src": "contracts/DreadfulzNFT.sol:36"
          },
          {
            "kind": "state-variable-assignment",
            "name": "SECOND_SALE_PRICE",
            "src": "contracts/DreadfulzNFT.sol:37"
          },
          {
            "kind": "state-variable-assignment",
            "name": "FINAL_SALE_PRICE",
            "src": "contracts/DreadfulzNFT.sol:38"
          },
          {
            "kind": "state-variable-assignment",
            "name": "DEV_WALLET",
            "src": "contracts/DreadfulzNFT.sol:40"
          },
          {
            "kind": "state-variable-assignment",
            "name": "MARKETING_WALLET",
            "src": "contracts/DreadfulzNFT.sol:41"
          },
          {
            "kind": "state-variable-assignment",
            "name": "payees",
            "src": "contracts/DreadfulzNFT.sol:43"
          },
          {
            "kind": "state-variable-assignment",
            "name": "shares",
            "src": "contracts/DreadfulzNFT.sol:44"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "DreadfulzNFT",
              "label": "_holderTokens",
              "type": "t_mapping(t_address,t_struct(UintSet)2986_storage)",
              "src": "contracts/DreadfulzNFT.sol:17"
            },
            {
              "contract": "DreadfulzNFT",
              "label": "_tokenOwners",
              "type": "t_struct(UintToAddressMap)2283_storage",
              "src": "contracts/DreadfulzNFT.sol:20"
            },
            {
              "contract": "DreadfulzNFT",
              "label": "merkleRoot",
              "type": "t_bytes32",
              "src": "contracts/DreadfulzNFT.sol:22"
            },
            {
              "contract": "DreadfulzNFT",
              "label": "whitelistClaimed",
              "type": "t_mapping(t_address,t_bool)",
              "src": "contracts/DreadfulzNFT.sol:24"
            },
            {
              "contract": "DreadfulzNFT",
              "label": "isSaleActive",
              "type": "t_bool",
              "src": "contracts/DreadfulzNFT.sol:26"
            },
            {
              "contract": "DreadfulzNFT",
              "label": "is2ndSaleActive",
              "type": "t_bool",
              "src": "contracts/DreadfulzNFT.sol:27"
            },
            {
              "contract": "DreadfulzNFT",
              "label": "isFinalSaleActive",
              "type": "t_bool",
              "src": "contracts/DreadfulzNFT.sol:28"
            },
            {
              "contract": "DreadfulzNFT",
              "label": "RESERVED_AMOUNT",
              "type": "t_uint256",
              "src": "contracts/DreadfulzNFT.sol:30"
            },
            {
              "contract": "DreadfulzNFT",
              "label": "FIRST_SALE_AMOUNT",
              "type": "t_uint256",
              "src": "contracts/DreadfulzNFT.sol:31"
            },
            {
              "contract": "DreadfulzNFT",
              "label": "SECOND_SALE_AMOUNT",
              "type": "t_uint256",
              "src": "contracts/DreadfulzNFT.sol:32"
            },
            {
              "contract": "DreadfulzNFT",
              "label": "FINAL_SALE_AMOUNT",
              "type": "t_uint256",
              "src": "contracts/DreadfulzNFT.sol:33"
            },
            {
              "contract": "DreadfulzNFT",
              "label": "PRESALE_PRICE",
              "type": "t_uint256",
              "src": "contracts/DreadfulzNFT.sol:35"
            },
            {
              "contract": "DreadfulzNFT",
              "label": "FIRST_SALE_PRICE",
              "type": "t_uint256",
              "src": "contracts/DreadfulzNFT.sol:36"
            },
            {
              "contract": "DreadfulzNFT",
              "label": "SECOND_SALE_PRICE",
              "type": "t_uint256",
              "src": "contracts/DreadfulzNFT.sol:37"
            },
            {
              "contract": "DreadfulzNFT",
              "label": "FINAL_SALE_PRICE",
              "type": "t_uint256",
              "src": "contracts/DreadfulzNFT.sol:38"
            },
            {
              "contract": "DreadfulzNFT",
              "label": "DEV_WALLET",
              "type": "t_address_payable",
              "src": "contracts/DreadfulzNFT.sol:40"
            },
            {
              "contract": "DreadfulzNFT",
              "label": "MARKETING_WALLET",
              "type": "t_address_payable",
              "src": "contracts/DreadfulzNFT.sol:41"
            },
            {
              "contract": "DreadfulzNFT",
              "label": "payees",
              "type": "t_array(t_address)dyn_storage",
              "src": "contracts/DreadfulzNFT.sol:43"
            },
            {
              "contract": "DreadfulzNFT",
              "label": "shares",
              "type": "t_array(t_uint256)dyn_storage",
              "src": "contracts/DreadfulzNFT.sol:44"
            }
          ],
          "types": {
            "t_mapping(t_address,t_struct(UintSet)2986_storage)": {
              "label": "mapping(address => struct EnumerableSet.UintSet)"
            },
            "t_address": {
              "label": "address"
            },
            "t_struct(UintSet)2986_storage": {
              "label": "struct EnumerableSet.UintSet",
              "members": [
                {
                  "label": "_inner",
                  "type": "t_struct(Set)2528_storage"
                }
              ]
            },
            "t_struct(Set)2528_storage": {
              "label": "struct EnumerableSet.Set",
              "members": [
                {
                  "label": "_values",
                  "type": "t_array(t_bytes32)dyn_storage"
                },
                {
                  "label": "_indexes",
                  "type": "t_mapping(t_bytes32,t_uint256)"
                }
              ]
            },
            "t_array(t_bytes32)dyn_storage": {
              "label": "bytes32[]"
            },
            "t_bytes32": {
              "label": "bytes32"
            },
            "t_mapping(t_bytes32,t_uint256)": {
              "label": "mapping(bytes32 => uint256)"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_struct(UintToAddressMap)2283_storage": {
              "label": "struct EnumerableMap.UintToAddressMap",
              "members": [
                {
                  "label": "_inner",
                  "type": "t_struct(Map)2053_storage"
                }
              ]
            },
            "t_struct(Map)2053_storage": {
              "label": "struct EnumerableMap.Map",
              "members": [
                {
                  "label": "_keys",
                  "type": "t_struct(Bytes32Set)2722_storage"
                },
                {
                  "label": "_values",
                  "type": "t_mapping(t_bytes32,t_bytes32)"
                }
              ]
            },
            "t_struct(Bytes32Set)2722_storage": {
              "label": "struct EnumerableSet.Bytes32Set",
              "members": [
                {
                  "label": "_inner",
                  "type": "t_struct(Set)2528_storage"
                }
              ]
            },
            "t_mapping(t_bytes32,t_bytes32)": {
              "label": "mapping(bytes32 => bytes32)"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_address_payable": {
              "label": "address payable"
            },
            "t_array(t_address)dyn_storage": {
              "label": "address[]"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "DreadfulzStaking": {
        "src": "contracts/DreadfulzStaking.sol:17",
        "version": {
          "withMetadata": "184adca73641c50bc28ce338c902b60ba2d0bfa9d78532fbc4a2bbb078602055",
          "withoutMetadata": "2c7697bb44406bda1c59c4fcaa4e6d54b427fd0608ceb0c5b793659e3517c87e",
          "linkedWithoutMetadata": "2c7697bb44406bda1c59c4fcaa4e6d54b427fd0608ceb0c5b793659e3517c87e"
        },
        "inherit": [
          "Ownable",
          "Context"
        ],
        "libraries": [
          "SafeMath"
        ],
        "methods": [
          "(address,address)",
          "setTokensClaimable(bool)",
          "getStakedTokens(address)",
          "stake(uint256)",
          "stakeBatch(uint256[])",
          "stakeAll()",
          "unstake(uint256)",
          "unstakeBatch(uint256[])",
          "emergencyUnstake(uint256)",
          "updateReward(address)",
          "rewardsOwing(address)",
          "claimReward(address)",
          "unclaimedRewards(address)",
          "onERC721Received(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "DreadfulzStaking",
            "src": "contracts/DreadfulzStaking.sol:66"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "DreadfulzStaking",
              "label": "rewardsToken",
              "type": "t_contract(IERC20)663",
              "src": "contracts/DreadfulzStaking.sol:21"
            },
            {
              "contract": "DreadfulzStaking",
              "label": "dreadfulzNFT",
              "type": "t_contract(DreadfulzNFT)3589",
              "src": "contracts/DreadfulzStaking.sol:22"
            },
            {
              "contract": "DreadfulzStaking",
              "label": "rewardsPerTokenPoints",
              "type": "t_uint256",
              "src": "contracts/DreadfulzStaking.sol:24"
            },
            {
              "contract": "DreadfulzStaking",
              "label": "totalUnclaimedRewards",
              "type": "t_uint256",
              "src": "contracts/DreadfulzStaking.sol:25"
            },
            {
              "contract": "DreadfulzStaking",
              "label": "stakers",
              "type": "t_mapping(t_address,t_struct(Staker)3628_storage)",
              "src": "contracts/DreadfulzStaking.sol:42"
            },
            {
              "contract": "DreadfulzStaking",
              "label": "tokenOwner",
              "type": "t_mapping(t_uint256,t_address)",
              "src": "contracts/DreadfulzStaking.sol:45"
            },
            {
              "contract": "DreadfulzStaking",
              "label": "tokensClaimable",
              "type": "t_bool",
              "src": "contracts/DreadfulzStaking.sol:48"
            },
            {
              "contract": "DreadfulzStaking",
              "label": "initialised",
              "type": "t_bool",
              "src": "contracts/DreadfulzStaking.sol:49"
            }
          ],
          "types": {
            "t_contract(IERC20)663": {
              "label": "contract IERC20"
            },
            "t_contract(DreadfulzNFT)3589": {
              "label": "contract DreadfulzNFT"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_struct(Staker)3628_storage)": {
              "label": "mapping(address => struct DreadfulzStaking.Staker)"
            },
            "t_address": {
              "label": "address"
            },
            "t_struct(Staker)3628_storage": {
              "label": "struct DreadfulzStaking.Staker",
              "members": [
                {
                  "label": "tokenIds",
                  "type": "t_array(t_uint256)dyn_storage"
                },
                {
                  "label": "tokenIndex",
                  "type": "t_mapping(t_uint256,t_uint256)"
                },
                {
                  "label": "lastRewardPoints",
                  "type": "t_uint256"
                },
                {
                  "label": "rewardsEarned",
                  "type": "t_uint256"
                },
                {
                  "label": "rewardsReleased",
                  "type": "t_uint256"
                }
              ]
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]"
            },
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)"
            },
            "t_bool": {
              "label": "bool"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC721A": {
        "src": "erc721a/contracts/ERC721A.sol:23",
        "version": {
          "withMetadata": "d90e8953f63fb7e09b553fb57c484f25b64a2b502bb9adf41ef329e5f28fad0c",
          "withoutMetadata": "b46845ce757cb59201ed5980ba1e238b1af2a42363b8f4b5a07b70d5394d3bf0",
          "linkedWithoutMetadata": "b46845ce757cb59201ed5980ba1e238b1af2a42363b8f4b5a07b70d5394d3bf0"
        },
        "inherit": [
          "IERC721Enumerable",
          "IERC721Metadata",
          "IERC721",
          "ERC165",
          "IERC165",
          "Context"
        ],
        "libraries": [
          "Address",
          "Strings"
        ],
        "methods": [
          "(string,string,uint256)",
          "totalSupply()",
          "tokenByIndex(uint256)",
          "tokenOfOwnerByIndex(address,uint256)",
          "supportsInterface(bytes4)",
          "balanceOf(address)",
          "ownerOf(uint256)",
          "name()",
          "symbol()",
          "tokenURI(uint256)",
          "approve(address,uint256)",
          "getApproved(uint256)",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "transferFrom(address,address,uint256)",
          "safeTransferFrom(address,address,uint256)",
          "safeTransferFrom(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC721A",
            "src": "erc721a/contracts/ERC721A.sol:64"
          },
          {
            "kind": "state-variable-assignment",
            "name": "currentIndex",
            "src": "erc721a/contracts/ERC721A.sol:37"
          },
          {
            "kind": "state-variable-immutable",
            "name": "maxBatchSize",
            "src": "erc721a/contracts/ERC721A.sol:39"
          },
          {
            "kind": "state-variable-assignment",
            "name": "nextOwnerToExplicitlySet",
            "src": "erc721a/contracts/ERC721A.sol:398"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ERC721A",
              "label": "currentIndex",
              "type": "t_uint256",
              "src": "erc721a/contracts/ERC721A.sol:37"
            },
            {
              "contract": "ERC721A",
              "label": "_name",
              "type": "t_string_storage",
              "src": "erc721a/contracts/ERC721A.sol:42"
            },
            {
              "contract": "ERC721A",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "erc721a/contracts/ERC721A.sol:45"
            },
            {
              "contract": "ERC721A",
              "label": "_ownerships",
              "type": "t_mapping(t_uint256,t_struct(TokenOwnership)4310_storage)",
              "src": "erc721a/contracts/ERC721A.sol:49"
            },
            {
              "contract": "ERC721A",
              "label": "_addressData",
              "type": "t_mapping(t_address,t_struct(AddressData)4315_storage)",
              "src": "erc721a/contracts/ERC721A.sol:52"
            },
            {
              "contract": "ERC721A",
              "label": "_tokenApprovals",
              "type": "t_mapping(t_uint256,t_address)",
              "src": "erc721a/contracts/ERC721A.sol:55"
            },
            {
              "contract": "ERC721A",
              "label": "_operatorApprovals",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "src": "erc721a/contracts/ERC721A.sol:58"
            },
            {
              "contract": "ERC721A",
              "label": "nextOwnerToExplicitlySet",
              "type": "t_uint256",
              "src": "erc721a/contracts/ERC721A.sol:398"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_mapping(t_uint256,t_struct(TokenOwnership)4310_storage)": {
              "label": "mapping(uint256 => struct ERC721A.TokenOwnership)"
            },
            "t_struct(TokenOwnership)4310_storage": {
              "label": "struct ERC721A.TokenOwnership",
              "members": [
                {
                  "label": "addr",
                  "type": "t_address"
                },
                {
                  "label": "startTimestamp",
                  "type": "t_uint64"
                }
              ]
            },
            "t_address": {
              "label": "address"
            },
            "t_uint64": {
              "label": "uint64"
            },
            "t_mapping(t_address,t_struct(AddressData)4315_storage)": {
              "label": "mapping(address => struct ERC721A.AddressData)"
            },
            "t_struct(AddressData)4315_storage": {
              "label": "struct ERC721A.AddressData",
              "members": [
                {
                  "label": "balance",
                  "type": "t_uint128"
                },
                {
                  "label": "numberMinted",
                  "type": "t_uint128"
                }
              ]
            },
            "t_uint128": {
              "label": "uint128"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_bool": {
              "label": "bool"
            }
          },
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "Ownable": {
        "src": "@openzeppelin/contracts/access/Ownable.sol:20",
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin/contracts/access/Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "Ownable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "PaymentSplitter": {
        "src": "@openzeppelin/contracts/finance/PaymentSplitter.sol:27",
        "version": {
          "withMetadata": "7ca80aa715b481cb550ce3949750475a418af4045c653fe6bed689f443f26bfb",
          "withoutMetadata": "a4e026d1eefdf675d63e6c33090429de6d5c3dc870d8924a7112b284573f6a31",
          "linkedWithoutMetadata": "a4e026d1eefdf675d63e6c33090429de6d5c3dc870d8924a7112b284573f6a31"
        },
        "inherit": [
          "Context"
        ],
        "libraries": [
          "Address",
          "SafeERC20"
        ],
        "methods": [
          "(address[],uint256[])",
          "()",
          "totalShares()",
          "totalReleased()",
          "totalReleased(address)",
          "shares(address)",
          "released(address)",
          "released(address,address)",
          "payee(uint256)",
          "release(address payable)",
          "release(address,address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "PaymentSplitter",
            "src": "@openzeppelin/contracts/finance/PaymentSplitter.sol:50"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "PaymentSplitter",
              "label": "_totalShares",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts/finance/PaymentSplitter.sol:33"
            },
            {
              "contract": "PaymentSplitter",
              "label": "_totalReleased",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts/finance/PaymentSplitter.sol:34"
            },
            {
              "contract": "PaymentSplitter",
              "label": "_shares",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin/contracts/finance/PaymentSplitter.sol:36"
            },
            {
              "contract": "PaymentSplitter",
              "label": "_released",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin/contracts/finance/PaymentSplitter.sol:37"
            },
            {
              "contract": "PaymentSplitter",
              "label": "_payees",
              "type": "t_array(t_address)dyn_storage",
              "src": "@openzeppelin/contracts/finance/PaymentSplitter.sol:38"
            },
            {
              "contract": "PaymentSplitter",
              "label": "_erc20TotalReleased",
              "type": "t_mapping(t_contract(IERC20)663,t_uint256)",
              "src": "@openzeppelin/contracts/finance/PaymentSplitter.sol:40"
            },
            {
              "contract": "PaymentSplitter",
              "label": "_erc20Released",
              "type": "t_mapping(t_contract(IERC20)663,t_mapping(t_address,t_uint256))",
              "src": "@openzeppelin/contracts/finance/PaymentSplitter.sol:41"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_array(t_address)dyn_storage": {
              "label": "address[]"
            },
            "t_mapping(t_contract(IERC20)663,t_uint256)": {
              "label": "mapping(contract IERC20 => uint256)"
            },
            "t_contract(IERC20)663": {
              "label": "contract IERC20"
            },
            "t_mapping(t_contract(IERC20)663,t_mapping(t_address,t_uint256))": {
              "label": "mapping(contract IERC20 => mapping(address => uint256))"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ReentrancyGuard": {
        "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:22",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReentrancyGuard",
            "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:39"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ReentrancyGuard",
              "label": "_status",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:37"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "SafeERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:18",
        "version": {
          "withMetadata": "56f3b47fe199a74f30abd43f547fa939c88066448b04cd5f17bdafbe2e03804a",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "Address"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC721": {
        "src": "@openzeppelin/contracts/token/ERC721/IERC721.sol:11",
        "inherit": [
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "balanceOf(address)",
          "ownerOf(uint256)",
          "safeTransferFrom(address,address,uint256)",
          "transferFrom(address,address,uint256)",
          "approve(address,uint256)",
          "getApproved(uint256)",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "safeTransferFrom(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC721Receiver": {
        "src": "@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol:11",
        "inherit": [],
        "libraries": [],
        "methods": [
          "onERC721Received(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC721Enumerable": {
        "src": "@openzeppelin/contracts/token/ERC721/extensions/IERC721Enumerable.sol:12",
        "inherit": [
          "IERC721",
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "tokenOfOwnerByIndex(address,uint256)",
          "tokenByIndex(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC721Metadata": {
        "src": "@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol:12",
        "inherit": [
          "IERC721",
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "tokenURI(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Address": {
        "src": "@openzeppelin/contracts/utils/Address.sol:9",
        "version": {
          "withMetadata": "484d2cade7f176ca5050f1f249737dd81ac6ed00490f5099f09054c1bc596b67",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:186"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Strings": {
        "src": "@openzeppelin/contracts/utils/Strings.sol:9",
        "version": {
          "withMetadata": "b16d77140251bcd9725701aa6d1902c15605c3749a720b7aac593644f6c217ac",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "MerkleProof": {
        "src": "@openzeppelin/contracts/utils/cryptography/MerkleProof.sol:15",
        "version": {
          "withMetadata": "eae9c389bfc7a3fccc9b1be4ba129d982448e261280aa30913fa3d7bc9f5440f",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC165": {
        "src": "@openzeppelin/contracts/utils/introspection/ERC165.sol:22",
        "inherit": [
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC165": {
        "src": "@openzeppelin/contracts/utils/introspection/IERC165.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "SafeMath": {
        "src": "@openzeppelin/contracts/utils/math/SafeMath.sol:16",
        "version": {
          "withMetadata": "8418487e012b6d36d0f064d32c31976a5cbfce3373a77c05261a0ae367939886",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "EnumerableMap": {
        "src": "@openzeppelin/contracts/utils/structs/EnumerableMap.sol:32",
        "version": {
          "withMetadata": "eb2563fd64638723253d815b920b9bdd7ba216c3415fd72b3339b5602807aab3",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "EnumerableSet"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "EnumerableSet": {
        "src": "@openzeppelin/contracts/utils/structs/EnumerableSet.sol:30",
        "version": {
          "withMetadata": "6ee35d052c3beaf7db7a043d937ed616f73a3d6a147dd22fd5b78a58e78e8277",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "DreadfulzNFT": {
        "src": "contracts/DreadfulzNFT.sol:12",
        "version": {
          "withMetadata": "6cbf03c4fbd848ca8771515e9cbb41ac04b5b17798f2efbe1bf48686ced3da65",
          "withoutMetadata": "42a43f837f61f1e7922747a701eb9184460fcd964651584c22873bc44b9fdd43",
          "linkedWithoutMetadata": "42a43f837f61f1e7922747a701eb9184460fcd964651584c22873bc44b9fdd43"
        },
        "inherit": [
          "PaymentSplitter",
          "ERC721A",
          "IERC721Enumerable",
          "IERC721Metadata",
          "IERC721",
          "ERC165",
          "IERC165",
          "ReentrancyGuard",
          "Ownable",
          "Context"
        ],
        "libraries": [
          "EnumerableSet",
          "EnumerableMap",
          "MerkleProof"
        ],
        "methods": [
          "()",
          "mint(uint256)",
          "presale(uint256,bytes32[])",
          "balanceOfOwner(address)",
          "mintToTeam(address,uint256)",
          "setSaleActive()",
          "set2ndSaleActive()",
          "setFinalSaleActive()",
          "setMerkleRoot(bytes32)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "DreadfulzNFT",
            "src": "contracts/DreadfulzNFT.sol:48"
          },
          {
            "kind": "state-variable-assignment",
            "name": "merkleRoot",
            "src": "contracts/DreadfulzNFT.sol:22"
          },
          {
            "kind": "state-variable-assignment",
            "name": "isSaleActive",
            "src": "contracts/DreadfulzNFT.sol:26"
          },
          {
            "kind": "state-variable-assignment",
            "name": "is2ndSaleActive",
            "src": "contracts/DreadfulzNFT.sol:27"
          },
          {
            "kind": "state-variable-assignment",
            "name": "isFinalSaleActive",
            "src": "contracts/DreadfulzNFT.sol:28"
          },
          {
            "kind": "state-variable-assignment",
            "name": "RESERVED_AMOUNT",
            "src": "contracts/DreadfulzNFT.sol:30"
          },
          {
            "kind": "state-variable-assignment",
            "name": "FIRST_SALE_AMOUNT",
            "src": "contracts/DreadfulzNFT.sol:31"
          },
          {
            "kind": "state-variable-assignment",
            "name": "SECOND_SALE_AMOUNT",
            "src": "contracts/DreadfulzNFT.sol:32"
          },
          {
            "kind": "state-variable-assignment",
            "name": "FINAL_SALE_AMOUNT",
            "src": "contracts/DreadfulzNFT.sol:33"
          },
          {
            "kind": "state-variable-assignment",
            "name": "PRESALE_PRICE",
            "src": "contracts/DreadfulzNFT.sol:35"
          },
          {
            "kind": "state-variable-assignment",
            "name": "FIRST_SALE_PRICE",
            "src": "contracts/DreadfulzNFT.sol:36"
          },
          {
            "kind": "state-variable-assignment",
            "name": "SECOND_SALE_PRICE",
            "src": "contracts/DreadfulzNFT.sol:37"
          },
          {
            "kind": "state-variable-assignment",
            "name": "FINAL_SALE_PRICE",
            "src": "contracts/DreadfulzNFT.sol:38"
          },
          {
            "kind": "state-variable-assignment",
            "name": "DEV_WALLET",
            "src": "contracts/DreadfulzNFT.sol:40"
          },
          {
            "kind": "state-variable-assignment",
            "name": "MARKETING_WALLET",
            "src": "contracts/DreadfulzNFT.sol:41"
          },
          {
            "kind": "state-variable-assignment",
            "name": "payees",
            "src": "contracts/DreadfulzNFT.sol:43"
          },
          {
            "kind": "state-variable-assignment",
            "name": "shares",
            "src": "contracts/DreadfulzNFT.sol:44"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "DreadfulzNFT",
              "label": "_holderTokens",
              "type": "t_mapping(t_address,t_struct(UintSet)2986_storage)",
              "src": "contracts/DreadfulzNFT.sol:17"
            },
            {
              "contract": "DreadfulzNFT",
              "label": "_tokenOwners",
              "type": "t_struct(UintToAddressMap)2283_storage",
              "src": "contracts/DreadfulzNFT.sol:20"
            },
            {
              "contract": "DreadfulzNFT",
              "label": "merkleRoot",
              "type": "t_bytes32",
              "src": "contracts/DreadfulzNFT.sol:22"
            },
            {
              "contract": "DreadfulzNFT",
              "label": "whitelistClaimed",
              "type": "t_mapping(t_address,t_bool)",
              "src": "contracts/DreadfulzNFT.sol:24"
            },
            {
              "contract": "DreadfulzNFT",
              "label": "isSaleActive",
              "type": "t_bool",
              "src": "contracts/DreadfulzNFT.sol:26"
            },
            {
              "contract": "DreadfulzNFT",
              "label": "is2ndSaleActive",
              "type": "t_bool",
              "src": "contracts/DreadfulzNFT.sol:27"
            },
            {
              "contract": "DreadfulzNFT",
              "label": "isFinalSaleActive",
              "type": "t_bool",
              "src": "contracts/DreadfulzNFT.sol:28"
            },
            {
              "contract": "DreadfulzNFT",
              "label": "RESERVED_AMOUNT",
              "type": "t_uint256",
              "src": "contracts/DreadfulzNFT.sol:30"
            },
            {
              "contract": "DreadfulzNFT",
              "label": "FIRST_SALE_AMOUNT",
              "type": "t_uint256",
              "src": "contracts/DreadfulzNFT.sol:31"
            },
            {
              "contract": "DreadfulzNFT",
              "label": "SECOND_SALE_AMOUNT",
              "type": "t_uint256",
              "src": "contracts/DreadfulzNFT.sol:32"
            },
            {
              "contract": "DreadfulzNFT",
              "label": "FINAL_SALE_AMOUNT",
              "type": "t_uint256",
              "src": "contracts/DreadfulzNFT.sol:33"
            },
            {
              "contract": "DreadfulzNFT",
              "label": "PRESALE_PRICE",
              "type": "t_uint256",
              "src": "contracts/DreadfulzNFT.sol:35"
            },
            {
              "contract": "DreadfulzNFT",
              "label": "FIRST_SALE_PRICE",
              "type": "t_uint256",
              "src": "contracts/DreadfulzNFT.sol:36"
            },
            {
              "contract": "DreadfulzNFT",
              "label": "SECOND_SALE_PRICE",
              "type": "t_uint256",
              "src": "contracts/DreadfulzNFT.sol:37"
            },
            {
              "contract": "DreadfulzNFT",
              "label": "FINAL_SALE_PRICE",
              "type": "t_uint256",
              "src": "contracts/DreadfulzNFT.sol:38"
            },
            {
              "contract": "DreadfulzNFT",
              "label": "DEV_WALLET",
              "type": "t_address_payable",
              "src": "contracts/DreadfulzNFT.sol:40"
            },
            {
              "contract": "DreadfulzNFT",
              "label": "MARKETING_WALLET",
              "type": "t_address_payable",
              "src": "contracts/DreadfulzNFT.sol:41"
            },
            {
              "contract": "DreadfulzNFT",
              "label": "payees",
              "type": "t_array(t_address)dyn_storage",
              "src": "contracts/DreadfulzNFT.sol:43"
            },
            {
              "contract": "DreadfulzNFT",
              "label": "shares",
              "type": "t_array(t_uint256)dyn_storage",
              "src": "contracts/DreadfulzNFT.sol:44"
            }
          ],
          "types": {
            "t_mapping(t_address,t_struct(UintSet)2986_storage)": {
              "label": "mapping(address => struct EnumerableSet.UintSet)"
            },
            "t_address": {
              "label": "address"
            },
            "t_struct(UintSet)2986_storage": {
              "label": "struct EnumerableSet.UintSet",
              "members": [
                {
                  "label": "_inner",
                  "type": "t_struct(Set)2528_storage"
                }
              ]
            },
            "t_struct(Set)2528_storage": {
              "label": "struct EnumerableSet.Set",
              "members": [
                {
                  "label": "_values",
                  "type": "t_array(t_bytes32)dyn_storage"
                },
                {
                  "label": "_indexes",
                  "type": "t_mapping(t_bytes32,t_uint256)"
                }
              ]
            },
            "t_array(t_bytes32)dyn_storage": {
              "label": "bytes32[]"
            },
            "t_bytes32": {
              "label": "bytes32"
            },
            "t_mapping(t_bytes32,t_uint256)": {
              "label": "mapping(bytes32 => uint256)"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_struct(UintToAddressMap)2283_storage": {
              "label": "struct EnumerableMap.UintToAddressMap",
              "members": [
                {
                  "label": "_inner",
                  "type": "t_struct(Map)2053_storage"
                }
              ]
            },
            "t_struct(Map)2053_storage": {
              "label": "struct EnumerableMap.Map",
              "members": [
                {
                  "label": "_keys",
                  "type": "t_struct(Bytes32Set)2722_storage"
                },
                {
                  "label": "_values",
                  "type": "t_mapping(t_bytes32,t_bytes32)"
                }
              ]
            },
            "t_struct(Bytes32Set)2722_storage": {
              "label": "struct EnumerableSet.Bytes32Set",
              "members": [
                {
                  "label": "_inner",
                  "type": "t_struct(Set)2528_storage"
                }
              ]
            },
            "t_mapping(t_bytes32,t_bytes32)": {
              "label": "mapping(bytes32 => bytes32)"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_address_payable": {
              "label": "address payable"
            },
            "t_array(t_address)dyn_storage": {
              "label": "address[]"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "DreadfulzStaking": {
        "src": "contracts/DreadfulzStaking.sol:17",
        "version": {
          "withMetadata": "3a0ce437db6546aeeb145b1f26e491ecea5156d3fa26e253431c5c5116f94f84",
          "withoutMetadata": "2c7697bb44406bda1c59c4fcaa4e6d54b427fd0608ceb0c5b793659e3517c87e",
          "linkedWithoutMetadata": "2c7697bb44406bda1c59c4fcaa4e6d54b427fd0608ceb0c5b793659e3517c87e"
        },
        "inherit": [
          "Ownable",
          "Context"
        ],
        "libraries": [
          "SafeMath"
        ],
        "methods": [
          "(address,address)",
          "setTokensClaimable(bool)",
          "getStakedTokens(address)",
          "stake(uint256)",
          "stakeBatch(uint256[])",
          "stakeAll()",
          "unstake(uint256)",
          "unstakeBatch(uint256[])",
          "emergencyUnstake(uint256)",
          "updateReward(address)",
          "rewardsOwing(address)",
          "claimReward(address)",
          "unclaimedRewards(address)",
          "onERC721Received(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "DreadfulzStaking",
            "src": "contracts/DreadfulzStaking.sol:66"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "DreadfulzStaking",
              "label": "rewardsToken",
              "type": "t_contract(IERC20)663",
              "src": "contracts/DreadfulzStaking.sol:21"
            },
            {
              "contract": "DreadfulzStaking",
              "label": "dreadfulzNFT",
              "type": "t_contract(DreadfulzNFT)3580",
              "src": "contracts/DreadfulzStaking.sol:22"
            },
            {
              "contract": "DreadfulzStaking",
              "label": "rewardsPerTokenPoints",
              "type": "t_uint256",
              "src": "contracts/DreadfulzStaking.sol:24"
            },
            {
              "contract": "DreadfulzStaking",
              "label": "totalUnclaimedRewards",
              "type": "t_uint256",
              "src": "contracts/DreadfulzStaking.sol:25"
            },
            {
              "contract": "DreadfulzStaking",
              "label": "stakers",
              "type": "t_mapping(t_address,t_struct(Staker)3619_storage)",
              "src": "contracts/DreadfulzStaking.sol:42"
            },
            {
              "contract": "DreadfulzStaking",
              "label": "tokenOwner",
              "type": "t_mapping(t_uint256,t_address)",
              "src": "contracts/DreadfulzStaking.sol:45"
            },
            {
              "contract": "DreadfulzStaking",
              "label": "tokensClaimable",
              "type": "t_bool",
              "src": "contracts/DreadfulzStaking.sol:48"
            },
            {
              "contract": "DreadfulzStaking",
              "label": "initialised",
              "type": "t_bool",
              "src": "contracts/DreadfulzStaking.sol:49"
            }
          ],
          "types": {
            "t_contract(IERC20)663": {
              "label": "contract IERC20"
            },
            "t_contract(DreadfulzNFT)3580": {
              "label": "contract DreadfulzNFT"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_struct(Staker)3619_storage)": {
              "label": "mapping(address => struct DreadfulzStaking.Staker)"
            },
            "t_address": {
              "label": "address"
            },
            "t_struct(Staker)3619_storage": {
              "label": "struct DreadfulzStaking.Staker",
              "members": [
                {
                  "label": "tokenIds",
                  "type": "t_array(t_uint256)dyn_storage"
                },
                {
                  "label": "tokenIndex",
                  "type": "t_mapping(t_uint256,t_uint256)"
                },
                {
                  "label": "lastRewardPoints",
                  "type": "t_uint256"
                },
                {
                  "label": "rewardsEarned",
                  "type": "t_uint256"
                },
                {
                  "label": "rewardsReleased",
                  "type": "t_uint256"
                }
              ]
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]"
            },
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)"
            },
            "t_bool": {
              "label": "bool"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC721A": {
        "src": "erc721a/contracts/ERC721A.sol:23",
        "version": {
          "withMetadata": "d90e8953f63fb7e09b553fb57c484f25b64a2b502bb9adf41ef329e5f28fad0c",
          "withoutMetadata": "b46845ce757cb59201ed5980ba1e238b1af2a42363b8f4b5a07b70d5394d3bf0",
          "linkedWithoutMetadata": "b46845ce757cb59201ed5980ba1e238b1af2a42363b8f4b5a07b70d5394d3bf0"
        },
        "inherit": [
          "IERC721Enumerable",
          "IERC721Metadata",
          "IERC721",
          "ERC165",
          "IERC165",
          "Context"
        ],
        "libraries": [
          "Address",
          "Strings"
        ],
        "methods": [
          "(string,string,uint256)",
          "totalSupply()",
          "tokenByIndex(uint256)",
          "tokenOfOwnerByIndex(address,uint256)",
          "supportsInterface(bytes4)",
          "balanceOf(address)",
          "ownerOf(uint256)",
          "name()",
          "symbol()",
          "tokenURI(uint256)",
          "approve(address,uint256)",
          "getApproved(uint256)",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "transferFrom(address,address,uint256)",
          "safeTransferFrom(address,address,uint256)",
          "safeTransferFrom(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC721A",
            "src": "erc721a/contracts/ERC721A.sol:64"
          },
          {
            "kind": "state-variable-assignment",
            "name": "currentIndex",
            "src": "erc721a/contracts/ERC721A.sol:37"
          },
          {
            "kind": "state-variable-immutable",
            "name": "maxBatchSize",
            "src": "erc721a/contracts/ERC721A.sol:39"
          },
          {
            "kind": "state-variable-assignment",
            "name": "nextOwnerToExplicitlySet",
            "src": "erc721a/contracts/ERC721A.sol:398"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ERC721A",
              "label": "currentIndex",
              "type": "t_uint256",
              "src": "erc721a/contracts/ERC721A.sol:37"
            },
            {
              "contract": "ERC721A",
              "label": "_name",
              "type": "t_string_storage",
              "src": "erc721a/contracts/ERC721A.sol:42"
            },
            {
              "contract": "ERC721A",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "erc721a/contracts/ERC721A.sol:45"
            },
            {
              "contract": "ERC721A",
              "label": "_ownerships",
              "type": "t_mapping(t_uint256,t_struct(TokenOwnership)4301_storage)",
              "src": "erc721a/contracts/ERC721A.sol:49"
            },
            {
              "contract": "ERC721A",
              "label": "_addressData",
              "type": "t_mapping(t_address,t_struct(AddressData)4306_storage)",
              "src": "erc721a/contracts/ERC721A.sol:52"
            },
            {
              "contract": "ERC721A",
              "label": "_tokenApprovals",
              "type": "t_mapping(t_uint256,t_address)",
              "src": "erc721a/contracts/ERC721A.sol:55"
            },
            {
              "contract": "ERC721A",
              "label": "_operatorApprovals",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "src": "erc721a/contracts/ERC721A.sol:58"
            },
            {
              "contract": "ERC721A",
              "label": "nextOwnerToExplicitlySet",
              "type": "t_uint256",
              "src": "erc721a/contracts/ERC721A.sol:398"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_mapping(t_uint256,t_struct(TokenOwnership)4301_storage)": {
              "label": "mapping(uint256 => struct ERC721A.TokenOwnership)"
            },
            "t_struct(TokenOwnership)4301_storage": {
              "label": "struct ERC721A.TokenOwnership",
              "members": [
                {
                  "label": "addr",
                  "type": "t_address"
                },
                {
                  "label": "startTimestamp",
                  "type": "t_uint64"
                }
              ]
            },
            "t_address": {
              "label": "address"
            },
            "t_uint64": {
              "label": "uint64"
            },
            "t_mapping(t_address,t_struct(AddressData)4306_storage)": {
              "label": "mapping(address => struct ERC721A.AddressData)"
            },
            "t_struct(AddressData)4306_storage": {
              "label": "struct ERC721A.AddressData",
              "members": [
                {
                  "label": "balance",
                  "type": "t_uint128"
                },
                {
                  "label": "numberMinted",
                  "type": "t_uint128"
                }
              ]
            },
            "t_uint128": {
              "label": "uint128"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_bool": {
              "label": "bool"
            }
          },
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "Ownable": {
        "src": "@openzeppelin/contracts/access/Ownable.sol:20",
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin/contracts/access/Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "Ownable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "PaymentSplitter": {
        "src": "@openzeppelin/contracts/finance/PaymentSplitter.sol:27",
        "version": {
          "withMetadata": "7ca80aa715b481cb550ce3949750475a418af4045c653fe6bed689f443f26bfb",
          "withoutMetadata": "a4e026d1eefdf675d63e6c33090429de6d5c3dc870d8924a7112b284573f6a31",
          "linkedWithoutMetadata": "a4e026d1eefdf675d63e6c33090429de6d5c3dc870d8924a7112b284573f6a31"
        },
        "inherit": [
          "Context"
        ],
        "libraries": [
          "Address",
          "SafeERC20"
        ],
        "methods": [
          "(address[],uint256[])",
          "()",
          "totalShares()",
          "totalReleased()",
          "totalReleased(address)",
          "shares(address)",
          "released(address)",
          "released(address,address)",
          "payee(uint256)",
          "release(address payable)",
          "release(address,address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "PaymentSplitter",
            "src": "@openzeppelin/contracts/finance/PaymentSplitter.sol:50"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "PaymentSplitter",
              "label": "_totalShares",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts/finance/PaymentSplitter.sol:33"
            },
            {
              "contract": "PaymentSplitter",
              "label": "_totalReleased",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts/finance/PaymentSplitter.sol:34"
            },
            {
              "contract": "PaymentSplitter",
              "label": "_shares",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin/contracts/finance/PaymentSplitter.sol:36"
            },
            {
              "contract": "PaymentSplitter",
              "label": "_released",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin/contracts/finance/PaymentSplitter.sol:37"
            },
            {
              "contract": "PaymentSplitter",
              "label": "_payees",
              "type": "t_array(t_address)dyn_storage",
              "src": "@openzeppelin/contracts/finance/PaymentSplitter.sol:38"
            },
            {
              "contract": "PaymentSplitter",
              "label": "_erc20TotalReleased",
              "type": "t_mapping(t_contract(IERC20)663,t_uint256)",
              "src": "@openzeppelin/contracts/finance/PaymentSplitter.sol:40"
            },
            {
              "contract": "PaymentSplitter",
              "label": "_erc20Released",
              "type": "t_mapping(t_contract(IERC20)663,t_mapping(t_address,t_uint256))",
              "src": "@openzeppelin/contracts/finance/PaymentSplitter.sol:41"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_array(t_address)dyn_storage": {
              "label": "address[]"
            },
            "t_mapping(t_contract(IERC20)663,t_uint256)": {
              "label": "mapping(contract IERC20 => uint256)"
            },
            "t_contract(IERC20)663": {
              "label": "contract IERC20"
            },
            "t_mapping(t_contract(IERC20)663,t_mapping(t_address,t_uint256))": {
              "label": "mapping(contract IERC20 => mapping(address => uint256))"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ReentrancyGuard": {
        "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:22",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReentrancyGuard",
            "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:39"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ReentrancyGuard",
              "label": "_status",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:37"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "SafeERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:18",
        "version": {
          "withMetadata": "56f3b47fe199a74f30abd43f547fa939c88066448b04cd5f17bdafbe2e03804a",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "Address"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC721": {
        "src": "@openzeppelin/contracts/token/ERC721/IERC721.sol:11",
        "inherit": [
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "balanceOf(address)",
          "ownerOf(uint256)",
          "safeTransferFrom(address,address,uint256)",
          "transferFrom(address,address,uint256)",
          "approve(address,uint256)",
          "getApproved(uint256)",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "safeTransferFrom(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC721Receiver": {
        "src": "@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol:11",
        "inherit": [],
        "libraries": [],
        "methods": [
          "onERC721Received(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC721Enumerable": {
        "src": "@openzeppelin/contracts/token/ERC721/extensions/IERC721Enumerable.sol:12",
        "inherit": [
          "IERC721",
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "tokenOfOwnerByIndex(address,uint256)",
          "tokenByIndex(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC721Metadata": {
        "src": "@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol:12",
        "inherit": [
          "IERC721",
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "tokenURI(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Address": {
        "src": "@openzeppelin/contracts/utils/Address.sol:9",
        "version": {
          "withMetadata": "484d2cade7f176ca5050f1f249737dd81ac6ed00490f5099f09054c1bc596b67",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:186"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Strings": {
        "src": "@openzeppelin/contracts/utils/Strings.sol:9",
        "version": {
          "withMetadata": "b16d77140251bcd9725701aa6d1902c15605c3749a720b7aac593644f6c217ac",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "MerkleProof": {
        "src": "@openzeppelin/contracts/utils/cryptography/MerkleProof.sol:15",
        "version": {
          "withMetadata": "eae9c389bfc7a3fccc9b1be4ba129d982448e261280aa30913fa3d7bc9f5440f",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC165": {
        "src": "@openzeppelin/contracts/utils/introspection/ERC165.sol:22",
        "inherit": [
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC165": {
        "src": "@openzeppelin/contracts/utils/introspection/IERC165.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "SafeMath": {
        "src": "@openzeppelin/contracts/utils/math/SafeMath.sol:16",
        "version": {
          "withMetadata": "8418487e012b6d36d0f064d32c31976a5cbfce3373a77c05261a0ae367939886",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "EnumerableMap": {
        "src": "@openzeppelin/contracts/utils/structs/EnumerableMap.sol:32",
        "version": {
          "withMetadata": "eb2563fd64638723253d815b920b9bdd7ba216c3415fd72b3339b5602807aab3",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "EnumerableSet"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "EnumerableSet": {
        "src": "@openzeppelin/contracts/utils/structs/EnumerableSet.sol:30",
        "version": {
          "withMetadata": "6ee35d052c3beaf7db7a043d937ed616f73a3d6a147dd22fd5b78a58e78e8277",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "DreadfulzNFT": {
        "src": "contracts/DreadfulzNFT.sol:12",
        "version": {
          "withMetadata": "dc076916e7c04294d57b15726fbdee35d1fae4969f8e64ba03b5af259020de3a",
          "withoutMetadata": "7369a552405d69e063027c8519b2ea6c1a394c1e7e961a4c4e03c82e3a08eab5",
          "linkedWithoutMetadata": "7369a552405d69e063027c8519b2ea6c1a394c1e7e961a4c4e03c82e3a08eab5"
        },
        "inherit": [
          "PaymentSplitter",
          "ERC721A",
          "IERC721Enumerable",
          "IERC721Metadata",
          "IERC721",
          "ERC165",
          "IERC165",
          "ReentrancyGuard",
          "Ownable",
          "Context"
        ],
        "libraries": [
          "EnumerableSet",
          "EnumerableMap"
        ],
        "methods": [
          "()",
          "mint(uint256)",
          "presale(uint256,bytes32[])",
          "balanceOfOwner(address)",
          "mintToTeam(address,uint256)",
          "setSaleActive()",
          "set2ndSaleActive()",
          "setFinalSaleActive()",
          "setMerkleRoot(bytes32)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "DreadfulzNFT",
            "src": "contracts/DreadfulzNFT.sol:48"
          },
          {
            "kind": "state-variable-assignment",
            "name": "merkleRoot",
            "src": "contracts/DreadfulzNFT.sol:22"
          },
          {
            "kind": "state-variable-assignment",
            "name": "isSaleActive",
            "src": "contracts/DreadfulzNFT.sol:26"
          },
          {
            "kind": "state-variable-assignment",
            "name": "is2ndSaleActive",
            "src": "contracts/DreadfulzNFT.sol:27"
          },
          {
            "kind": "state-variable-assignment",
            "name": "isFinalSaleActive",
            "src": "contracts/DreadfulzNFT.sol:28"
          },
          {
            "kind": "state-variable-assignment",
            "name": "RESERVED_AMOUNT",
            "src": "contracts/DreadfulzNFT.sol:30"
          },
          {
            "kind": "state-variable-assignment",
            "name": "FIRST_SALE_AMOUNT",
            "src": "contracts/DreadfulzNFT.sol:31"
          },
          {
            "kind": "state-variable-assignment",
            "name": "SECOND_SALE_AMOUNT",
            "src": "contracts/DreadfulzNFT.sol:32"
          },
          {
            "kind": "state-variable-assignment",
            "name": "FINAL_SALE_AMOUNT",
            "src": "contracts/DreadfulzNFT.sol:33"
          },
          {
            "kind": "state-variable-assignment",
            "name": "PRESALE_PRICE",
            "src": "contracts/DreadfulzNFT.sol:35"
          },
          {
            "kind": "state-variable-assignment",
            "name": "FIRST_SALE_PRICE",
            "src": "contracts/DreadfulzNFT.sol:36"
          },
          {
            "kind": "state-variable-assignment",
            "name": "SECOND_SALE_PRICE",
            "src": "contracts/DreadfulzNFT.sol:37"
          },
          {
            "kind": "state-variable-assignment",
            "name": "FINAL_SALE_PRICE",
            "src": "contracts/DreadfulzNFT.sol:38"
          },
          {
            "kind": "state-variable-assignment",
            "name": "DEV_WALLET",
            "src": "contracts/DreadfulzNFT.sol:40"
          },
          {
            "kind": "state-variable-assignment",
            "name": "MARKETING_WALLET",
            "src": "contracts/DreadfulzNFT.sol:41"
          },
          {
            "kind": "state-variable-assignment",
            "name": "payees",
            "src": "contracts/DreadfulzNFT.sol:43"
          },
          {
            "kind": "state-variable-assignment",
            "name": "shares",
            "src": "contracts/DreadfulzNFT.sol:44"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "DreadfulzNFT",
              "label": "_holderTokens",
              "type": "t_mapping(t_address,t_struct(UintSet)2986_storage)",
              "src": "contracts/DreadfulzNFT.sol:17"
            },
            {
              "contract": "DreadfulzNFT",
              "label": "_tokenOwners",
              "type": "t_struct(UintToAddressMap)2283_storage",
              "src": "contracts/DreadfulzNFT.sol:20"
            },
            {
              "contract": "DreadfulzNFT",
              "label": "merkleRoot",
              "type": "t_bytes32",
              "src": "contracts/DreadfulzNFT.sol:22"
            },
            {
              "contract": "DreadfulzNFT",
              "label": "whitelistClaimed",
              "type": "t_mapping(t_address,t_bool)",
              "src": "contracts/DreadfulzNFT.sol:24"
            },
            {
              "contract": "DreadfulzNFT",
              "label": "isSaleActive",
              "type": "t_bool",
              "src": "contracts/DreadfulzNFT.sol:26"
            },
            {
              "contract": "DreadfulzNFT",
              "label": "is2ndSaleActive",
              "type": "t_bool",
              "src": "contracts/DreadfulzNFT.sol:27"
            },
            {
              "contract": "DreadfulzNFT",
              "label": "isFinalSaleActive",
              "type": "t_bool",
              "src": "contracts/DreadfulzNFT.sol:28"
            },
            {
              "contract": "DreadfulzNFT",
              "label": "RESERVED_AMOUNT",
              "type": "t_uint256",
              "src": "contracts/DreadfulzNFT.sol:30"
            },
            {
              "contract": "DreadfulzNFT",
              "label": "FIRST_SALE_AMOUNT",
              "type": "t_uint256",
              "src": "contracts/DreadfulzNFT.sol:31"
            },
            {
              "contract": "DreadfulzNFT",
              "label": "SECOND_SALE_AMOUNT",
              "type": "t_uint256",
              "src": "contracts/DreadfulzNFT.sol:32"
            },
            {
              "contract": "DreadfulzNFT",
              "label": "FINAL_SALE_AMOUNT",
              "type": "t_uint256",
              "src": "contracts/DreadfulzNFT.sol:33"
            },
            {
              "contract": "DreadfulzNFT",
              "label": "PRESALE_PRICE",
              "type": "t_uint256",
              "src": "contracts/DreadfulzNFT.sol:35"
            },
            {
              "contract": "DreadfulzNFT",
              "label": "FIRST_SALE_PRICE",
              "type": "t_uint256",
              "src": "contracts/DreadfulzNFT.sol:36"
            },
            {
              "contract": "DreadfulzNFT",
              "label": "SECOND_SALE_PRICE",
              "type": "t_uint256",
              "src": "contracts/DreadfulzNFT.sol:37"
            },
            {
              "contract": "DreadfulzNFT",
              "label": "FINAL_SALE_PRICE",
              "type": "t_uint256",
              "src": "contracts/DreadfulzNFT.sol:38"
            },
            {
              "contract": "DreadfulzNFT",
              "label": "DEV_WALLET",
              "type": "t_address_payable",
              "src": "contracts/DreadfulzNFT.sol:40"
            },
            {
              "contract": "DreadfulzNFT",
              "label": "MARKETING_WALLET",
              "type": "t_address_payable",
              "src": "contracts/DreadfulzNFT.sol:41"
            },
            {
              "contract": "DreadfulzNFT",
              "label": "payees",
              "type": "t_array(t_address)dyn_storage",
              "src": "contracts/DreadfulzNFT.sol:43"
            },
            {
              "contract": "DreadfulzNFT",
              "label": "shares",
              "type": "t_array(t_uint256)dyn_storage",
              "src": "contracts/DreadfulzNFT.sol:44"
            }
          ],
          "types": {
            "t_mapping(t_address,t_struct(UintSet)2986_storage)": {
              "label": "mapping(address => struct EnumerableSet.UintSet)"
            },
            "t_address": {
              "label": "address"
            },
            "t_struct(UintSet)2986_storage": {
              "label": "struct EnumerableSet.UintSet",
              "members": [
                {
                  "label": "_inner",
                  "type": "t_struct(Set)2528_storage"
                }
              ]
            },
            "t_struct(Set)2528_storage": {
              "label": "struct EnumerableSet.Set",
              "members": [
                {
                  "label": "_values",
                  "type": "t_array(t_bytes32)dyn_storage"
                },
                {
                  "label": "_indexes",
                  "type": "t_mapping(t_bytes32,t_uint256)"
                }
              ]
            },
            "t_array(t_bytes32)dyn_storage": {
              "label": "bytes32[]"
            },
            "t_bytes32": {
              "label": "bytes32"
            },
            "t_mapping(t_bytes32,t_uint256)": {
              "label": "mapping(bytes32 => uint256)"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_struct(UintToAddressMap)2283_storage": {
              "label": "struct EnumerableMap.UintToAddressMap",
              "members": [
                {
                  "label": "_inner",
                  "type": "t_struct(Map)2053_storage"
                }
              ]
            },
            "t_struct(Map)2053_storage": {
              "label": "struct EnumerableMap.Map",
              "members": [
                {
                  "label": "_keys",
                  "type": "t_struct(Bytes32Set)2722_storage"
                },
                {
                  "label": "_values",
                  "type": "t_mapping(t_bytes32,t_bytes32)"
                }
              ]
            },
            "t_struct(Bytes32Set)2722_storage": {
              "label": "struct EnumerableSet.Bytes32Set",
              "members": [
                {
                  "label": "_inner",
                  "type": "t_struct(Set)2528_storage"
                }
              ]
            },
            "t_mapping(t_bytes32,t_bytes32)": {
              "label": "mapping(bytes32 => bytes32)"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_address_payable": {
              "label": "address payable"
            },
            "t_array(t_address)dyn_storage": {
              "label": "address[]"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "DreadfulzStaking": {
        "src": "contracts/DreadfulzStaking.sol:17",
        "version": {
          "withMetadata": "8fb8baedc10cd6ecf77190e1773f70dc5c44dead46335f6ba11c4b97891e3855",
          "withoutMetadata": "2c7697bb44406bda1c59c4fcaa4e6d54b427fd0608ceb0c5b793659e3517c87e",
          "linkedWithoutMetadata": "2c7697bb44406bda1c59c4fcaa4e6d54b427fd0608ceb0c5b793659e3517c87e"
        },
        "inherit": [
          "Ownable",
          "Context"
        ],
        "libraries": [
          "SafeMath"
        ],
        "methods": [
          "(address,address)",
          "setTokensClaimable(bool)",
          "getStakedTokens(address)",
          "stake(uint256)",
          "stakeBatch(uint256[])",
          "stakeAll()",
          "unstake(uint256)",
          "unstakeBatch(uint256[])",
          "emergencyUnstake(uint256)",
          "updateReward(address)",
          "rewardsOwing(address)",
          "claimReward(address)",
          "unclaimedRewards(address)",
          "onERC721Received(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "DreadfulzStaking",
            "src": "contracts/DreadfulzStaking.sol:66"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "DreadfulzStaking",
              "label": "rewardsToken",
              "type": "t_contract(IERC20)663",
              "src": "contracts/DreadfulzStaking.sol:21"
            },
            {
              "contract": "DreadfulzStaking",
              "label": "dreadfulzNFT",
              "type": "t_contract(DreadfulzNFT)3576",
              "src": "contracts/DreadfulzStaking.sol:22"
            },
            {
              "contract": "DreadfulzStaking",
              "label": "rewardsPerTokenPoints",
              "type": "t_uint256",
              "src": "contracts/DreadfulzStaking.sol:24"
            },
            {
              "contract": "DreadfulzStaking",
              "label": "totalUnclaimedRewards",
              "type": "t_uint256",
              "src": "contracts/DreadfulzStaking.sol:25"
            },
            {
              "contract": "DreadfulzStaking",
              "label": "stakers",
              "type": "t_mapping(t_address,t_struct(Staker)3615_storage)",
              "src": "contracts/DreadfulzStaking.sol:42"
            },
            {
              "contract": "DreadfulzStaking",
              "label": "tokenOwner",
              "type": "t_mapping(t_uint256,t_address)",
              "src": "contracts/DreadfulzStaking.sol:45"
            },
            {
              "contract": "DreadfulzStaking",
              "label": "tokensClaimable",
              "type": "t_bool",
              "src": "contracts/DreadfulzStaking.sol:48"
            },
            {
              "contract": "DreadfulzStaking",
              "label": "initialised",
              "type": "t_bool",
              "src": "contracts/DreadfulzStaking.sol:49"
            }
          ],
          "types": {
            "t_contract(IERC20)663": {
              "label": "contract IERC20"
            },
            "t_contract(DreadfulzNFT)3576": {
              "label": "contract DreadfulzNFT"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_struct(Staker)3615_storage)": {
              "label": "mapping(address => struct DreadfulzStaking.Staker)"
            },
            "t_address": {
              "label": "address"
            },
            "t_struct(Staker)3615_storage": {
              "label": "struct DreadfulzStaking.Staker",
              "members": [
                {
                  "label": "tokenIds",
                  "type": "t_array(t_uint256)dyn_storage"
                },
                {
                  "label": "tokenIndex",
                  "type": "t_mapping(t_uint256,t_uint256)"
                },
                {
                  "label": "lastRewardPoints",
                  "type": "t_uint256"
                },
                {
                  "label": "rewardsEarned",
                  "type": "t_uint256"
                },
                {
                  "label": "rewardsReleased",
                  "type": "t_uint256"
                }
              ]
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]"
            },
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)"
            },
            "t_bool": {
              "label": "bool"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC721A": {
        "src": "erc721a/contracts/ERC721A.sol:23",
        "version": {
          "withMetadata": "d90e8953f63fb7e09b553fb57c484f25b64a2b502bb9adf41ef329e5f28fad0c",
          "withoutMetadata": "b46845ce757cb59201ed5980ba1e238b1af2a42363b8f4b5a07b70d5394d3bf0",
          "linkedWithoutMetadata": "b46845ce757cb59201ed5980ba1e238b1af2a42363b8f4b5a07b70d5394d3bf0"
        },
        "inherit": [
          "IERC721Enumerable",
          "IERC721Metadata",
          "IERC721",
          "ERC165",
          "IERC165",
          "Context"
        ],
        "libraries": [
          "Address",
          "Strings"
        ],
        "methods": [
          "(string,string,uint256)",
          "totalSupply()",
          "tokenByIndex(uint256)",
          "tokenOfOwnerByIndex(address,uint256)",
          "supportsInterface(bytes4)",
          "balanceOf(address)",
          "ownerOf(uint256)",
          "name()",
          "symbol()",
          "tokenURI(uint256)",
          "approve(address,uint256)",
          "getApproved(uint256)",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "transferFrom(address,address,uint256)",
          "safeTransferFrom(address,address,uint256)",
          "safeTransferFrom(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC721A",
            "src": "erc721a/contracts/ERC721A.sol:64"
          },
          {
            "kind": "state-variable-assignment",
            "name": "currentIndex",
            "src": "erc721a/contracts/ERC721A.sol:37"
          },
          {
            "kind": "state-variable-immutable",
            "name": "maxBatchSize",
            "src": "erc721a/contracts/ERC721A.sol:39"
          },
          {
            "kind": "state-variable-assignment",
            "name": "nextOwnerToExplicitlySet",
            "src": "erc721a/contracts/ERC721A.sol:398"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ERC721A",
              "label": "currentIndex",
              "type": "t_uint256",
              "src": "erc721a/contracts/ERC721A.sol:37"
            },
            {
              "contract": "ERC721A",
              "label": "_name",
              "type": "t_string_storage",
              "src": "erc721a/contracts/ERC721A.sol:42"
            },
            {
              "contract": "ERC721A",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "erc721a/contracts/ERC721A.sol:45"
            },
            {
              "contract": "ERC721A",
              "label": "_ownerships",
              "type": "t_mapping(t_uint256,t_struct(TokenOwnership)4297_storage)",
              "src": "erc721a/contracts/ERC721A.sol:49"
            },
            {
              "contract": "ERC721A",
              "label": "_addressData",
              "type": "t_mapping(t_address,t_struct(AddressData)4302_storage)",
              "src": "erc721a/contracts/ERC721A.sol:52"
            },
            {
              "contract": "ERC721A",
              "label": "_tokenApprovals",
              "type": "t_mapping(t_uint256,t_address)",
              "src": "erc721a/contracts/ERC721A.sol:55"
            },
            {
              "contract": "ERC721A",
              "label": "_operatorApprovals",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "src": "erc721a/contracts/ERC721A.sol:58"
            },
            {
              "contract": "ERC721A",
              "label": "nextOwnerToExplicitlySet",
              "type": "t_uint256",
              "src": "erc721a/contracts/ERC721A.sol:398"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_mapping(t_uint256,t_struct(TokenOwnership)4297_storage)": {
              "label": "mapping(uint256 => struct ERC721A.TokenOwnership)"
            },
            "t_struct(TokenOwnership)4297_storage": {
              "label": "struct ERC721A.TokenOwnership",
              "members": [
                {
                  "label": "addr",
                  "type": "t_address"
                },
                {
                  "label": "startTimestamp",
                  "type": "t_uint64"
                }
              ]
            },
            "t_address": {
              "label": "address"
            },
            "t_uint64": {
              "label": "uint64"
            },
            "t_mapping(t_address,t_struct(AddressData)4302_storage)": {
              "label": "mapping(address => struct ERC721A.AddressData)"
            },
            "t_struct(AddressData)4302_storage": {
              "label": "struct ERC721A.AddressData",
              "members": [
                {
                  "label": "balance",
                  "type": "t_uint128"
                },
                {
                  "label": "numberMinted",
                  "type": "t_uint128"
                }
              ]
            },
            "t_uint128": {
              "label": "uint128"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_bool": {
              "label": "bool"
            }
          },
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "Ownable": {
        "src": "@openzeppelin/contracts/access/Ownable.sol:20",
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin/contracts/access/Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "Ownable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "PaymentSplitter": {
        "src": "@openzeppelin/contracts/finance/PaymentSplitter.sol:27",
        "version": {
          "withMetadata": "7ca80aa715b481cb550ce3949750475a418af4045c653fe6bed689f443f26bfb",
          "withoutMetadata": "a4e026d1eefdf675d63e6c33090429de6d5c3dc870d8924a7112b284573f6a31",
          "linkedWithoutMetadata": "a4e026d1eefdf675d63e6c33090429de6d5c3dc870d8924a7112b284573f6a31"
        },
        "inherit": [
          "Context"
        ],
        "libraries": [
          "Address",
          "SafeERC20"
        ],
        "methods": [
          "(address[],uint256[])",
          "()",
          "totalShares()",
          "totalReleased()",
          "totalReleased(address)",
          "shares(address)",
          "released(address)",
          "released(address,address)",
          "payee(uint256)",
          "release(address payable)",
          "release(address,address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "PaymentSplitter",
            "src": "@openzeppelin/contracts/finance/PaymentSplitter.sol:50"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "PaymentSplitter",
              "label": "_totalShares",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts/finance/PaymentSplitter.sol:33"
            },
            {
              "contract": "PaymentSplitter",
              "label": "_totalReleased",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts/finance/PaymentSplitter.sol:34"
            },
            {
              "contract": "PaymentSplitter",
              "label": "_shares",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin/contracts/finance/PaymentSplitter.sol:36"
            },
            {
              "contract": "PaymentSplitter",
              "label": "_released",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin/contracts/finance/PaymentSplitter.sol:37"
            },
            {
              "contract": "PaymentSplitter",
              "label": "_payees",
              "type": "t_array(t_address)dyn_storage",
              "src": "@openzeppelin/contracts/finance/PaymentSplitter.sol:38"
            },
            {
              "contract": "PaymentSplitter",
              "label": "_erc20TotalReleased",
              "type": "t_mapping(t_contract(IERC20)663,t_uint256)",
              "src": "@openzeppelin/contracts/finance/PaymentSplitter.sol:40"
            },
            {
              "contract": "PaymentSplitter",
              "label": "_erc20Released",
              "type": "t_mapping(t_contract(IERC20)663,t_mapping(t_address,t_uint256))",
              "src": "@openzeppelin/contracts/finance/PaymentSplitter.sol:41"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_array(t_address)dyn_storage": {
              "label": "address[]"
            },
            "t_mapping(t_contract(IERC20)663,t_uint256)": {
              "label": "mapping(contract IERC20 => uint256)"
            },
            "t_contract(IERC20)663": {
              "label": "contract IERC20"
            },
            "t_mapping(t_contract(IERC20)663,t_mapping(t_address,t_uint256))": {
              "label": "mapping(contract IERC20 => mapping(address => uint256))"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ReentrancyGuard": {
        "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:22",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReentrancyGuard",
            "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:39"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ReentrancyGuard",
              "label": "_status",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:37"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "SafeERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:18",
        "version": {
          "withMetadata": "56f3b47fe199a74f30abd43f547fa939c88066448b04cd5f17bdafbe2e03804a",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "Address"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC721": {
        "src": "@openzeppelin/contracts/token/ERC721/IERC721.sol:11",
        "inherit": [
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "balanceOf(address)",
          "ownerOf(uint256)",
          "safeTransferFrom(address,address,uint256)",
          "transferFrom(address,address,uint256)",
          "approve(address,uint256)",
          "getApproved(uint256)",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "safeTransferFrom(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC721Receiver": {
        "src": "@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol:11",
        "inherit": [],
        "libraries": [],
        "methods": [
          "onERC721Received(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC721Enumerable": {
        "src": "@openzeppelin/contracts/token/ERC721/extensions/IERC721Enumerable.sol:12",
        "inherit": [
          "IERC721",
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "tokenOfOwnerByIndex(address,uint256)",
          "tokenByIndex(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC721Metadata": {
        "src": "@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol:12",
        "inherit": [
          "IERC721",
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "tokenURI(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Address": {
        "src": "@openzeppelin/contracts/utils/Address.sol:9",
        "version": {
          "withMetadata": "484d2cade7f176ca5050f1f249737dd81ac6ed00490f5099f09054c1bc596b67",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:186"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Strings": {
        "src": "@openzeppelin/contracts/utils/Strings.sol:9",
        "version": {
          "withMetadata": "b16d77140251bcd9725701aa6d1902c15605c3749a720b7aac593644f6c217ac",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "MerkleProof": {
        "src": "@openzeppelin/contracts/utils/cryptography/MerkleProof.sol:15",
        "version": {
          "withMetadata": "eae9c389bfc7a3fccc9b1be4ba129d982448e261280aa30913fa3d7bc9f5440f",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC165": {
        "src": "@openzeppelin/contracts/utils/introspection/ERC165.sol:22",
        "inherit": [
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC165": {
        "src": "@openzeppelin/contracts/utils/introspection/IERC165.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "SafeMath": {
        "src": "@openzeppelin/contracts/utils/math/SafeMath.sol:16",
        "version": {
          "withMetadata": "8418487e012b6d36d0f064d32c31976a5cbfce3373a77c05261a0ae367939886",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "EnumerableMap": {
        "src": "@openzeppelin/contracts/utils/structs/EnumerableMap.sol:32",
        "version": {
          "withMetadata": "eb2563fd64638723253d815b920b9bdd7ba216c3415fd72b3339b5602807aab3",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "EnumerableSet"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "EnumerableSet": {
        "src": "@openzeppelin/contracts/utils/structs/EnumerableSet.sol:30",
        "version": {
          "withMetadata": "6ee35d052c3beaf7db7a043d937ed616f73a3d6a147dd22fd5b78a58e78e8277",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "DreadfulzNFT": {
        "src": "contracts/DreadfulzNFT.sol:12",
        "version": {
          "withMetadata": "90a9c55a1c4d743dea088bd00422ebab463a10bbb25b3ea59e360616baeeb189",
          "withoutMetadata": "42a43f837f61f1e7922747a701eb9184460fcd964651584c22873bc44b9fdd43",
          "linkedWithoutMetadata": "42a43f837f61f1e7922747a701eb9184460fcd964651584c22873bc44b9fdd43"
        },
        "inherit": [
          "PaymentSplitter",
          "ERC721A",
          "IERC721Enumerable",
          "IERC721Metadata",
          "IERC721",
          "ERC165",
          "IERC165",
          "ReentrancyGuard",
          "Ownable",
          "Context"
        ],
        "libraries": [
          "EnumerableSet",
          "EnumerableMap",
          "MerkleProof"
        ],
        "methods": [
          "()",
          "mint(uint256)",
          "presale(uint256,bytes32[])",
          "balanceOfOwner(address)",
          "mintToTeam(address,uint256)",
          "setSaleActive()",
          "set2ndSaleActive()",
          "setFinalSaleActive()",
          "setMerkleRoot(bytes32)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "DreadfulzNFT",
            "src": "contracts/DreadfulzNFT.sol:48"
          },
          {
            "kind": "state-variable-assignment",
            "name": "merkleRoot",
            "src": "contracts/DreadfulzNFT.sol:22"
          },
          {
            "kind": "state-variable-assignment",
            "name": "isSaleActive",
            "src": "contracts/DreadfulzNFT.sol:26"
          },
          {
            "kind": "state-variable-assignment",
            "name": "is2ndSaleActive",
            "src": "contracts/DreadfulzNFT.sol:27"
          },
          {
            "kind": "state-variable-assignment",
            "name": "isFinalSaleActive",
            "src": "contracts/DreadfulzNFT.sol:28"
          },
          {
            "kind": "state-variable-assignment",
            "name": "RESERVED_AMOUNT",
            "src": "contracts/DreadfulzNFT.sol:30"
          },
          {
            "kind": "state-variable-assignment",
            "name": "FIRST_SALE_AMOUNT",
            "src": "contracts/DreadfulzNFT.sol:31"
          },
          {
            "kind": "state-variable-assignment",
            "name": "SECOND_SALE_AMOUNT",
            "src": "contracts/DreadfulzNFT.sol:32"
          },
          {
            "kind": "state-variable-assignment",
            "name": "FINAL_SALE_AMOUNT",
            "src": "contracts/DreadfulzNFT.sol:33"
          },
          {
            "kind": "state-variable-assignment",
            "name": "PRESALE_PRICE",
            "src": "contracts/DreadfulzNFT.sol:35"
          },
          {
            "kind": "state-variable-assignment",
            "name": "FIRST_SALE_PRICE",
            "src": "contracts/DreadfulzNFT.sol:36"
          },
          {
            "kind": "state-variable-assignment",
            "name": "SECOND_SALE_PRICE",
            "src": "contracts/DreadfulzNFT.sol:37"
          },
          {
            "kind": "state-variable-assignment",
            "name": "FINAL_SALE_PRICE",
            "src": "contracts/DreadfulzNFT.sol:38"
          },
          {
            "kind": "state-variable-assignment",
            "name": "DEV_WALLET",
            "src": "contracts/DreadfulzNFT.sol:40"
          },
          {
            "kind": "state-variable-assignment",
            "name": "MARKETING_WALLET",
            "src": "contracts/DreadfulzNFT.sol:41"
          },
          {
            "kind": "state-variable-assignment",
            "name": "payees",
            "src": "contracts/DreadfulzNFT.sol:43"
          },
          {
            "kind": "state-variable-assignment",
            "name": "shares",
            "src": "contracts/DreadfulzNFT.sol:44"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "DreadfulzNFT",
              "label": "_holderTokens",
              "type": "t_mapping(t_address,t_struct(UintSet)2986_storage)",
              "src": "contracts/DreadfulzNFT.sol:17"
            },
            {
              "contract": "DreadfulzNFT",
              "label": "_tokenOwners",
              "type": "t_struct(UintToAddressMap)2283_storage",
              "src": "contracts/DreadfulzNFT.sol:20"
            },
            {
              "contract": "DreadfulzNFT",
              "label": "merkleRoot",
              "type": "t_bytes32",
              "src": "contracts/DreadfulzNFT.sol:22"
            },
            {
              "contract": "DreadfulzNFT",
              "label": "whitelistClaimed",
              "type": "t_mapping(t_address,t_bool)",
              "src": "contracts/DreadfulzNFT.sol:24"
            },
            {
              "contract": "DreadfulzNFT",
              "label": "isSaleActive",
              "type": "t_bool",
              "src": "contracts/DreadfulzNFT.sol:26"
            },
            {
              "contract": "DreadfulzNFT",
              "label": "is2ndSaleActive",
              "type": "t_bool",
              "src": "contracts/DreadfulzNFT.sol:27"
            },
            {
              "contract": "DreadfulzNFT",
              "label": "isFinalSaleActive",
              "type": "t_bool",
              "src": "contracts/DreadfulzNFT.sol:28"
            },
            {
              "contract": "DreadfulzNFT",
              "label": "RESERVED_AMOUNT",
              "type": "t_uint256",
              "src": "contracts/DreadfulzNFT.sol:30"
            },
            {
              "contract": "DreadfulzNFT",
              "label": "FIRST_SALE_AMOUNT",
              "type": "t_uint256",
              "src": "contracts/DreadfulzNFT.sol:31"
            },
            {
              "contract": "DreadfulzNFT",
              "label": "SECOND_SALE_AMOUNT",
              "type": "t_uint256",
              "src": "contracts/DreadfulzNFT.sol:32"
            },
            {
              "contract": "DreadfulzNFT",
              "label": "FINAL_SALE_AMOUNT",
              "type": "t_uint256",
              "src": "contracts/DreadfulzNFT.sol:33"
            },
            {
              "contract": "DreadfulzNFT",
              "label": "PRESALE_PRICE",
              "type": "t_uint256",
              "src": "contracts/DreadfulzNFT.sol:35"
            },
            {
              "contract": "DreadfulzNFT",
              "label": "FIRST_SALE_PRICE",
              "type": "t_uint256",
              "src": "contracts/DreadfulzNFT.sol:36"
            },
            {
              "contract": "DreadfulzNFT",
              "label": "SECOND_SALE_PRICE",
              "type": "t_uint256",
              "src": "contracts/DreadfulzNFT.sol:37"
            },
            {
              "contract": "DreadfulzNFT",
              "label": "FINAL_SALE_PRICE",
              "type": "t_uint256",
              "src": "contracts/DreadfulzNFT.sol:38"
            },
            {
              "contract": "DreadfulzNFT",
              "label": "DEV_WALLET",
              "type": "t_address_payable",
              "src": "contracts/DreadfulzNFT.sol:40"
            },
            {
              "contract": "DreadfulzNFT",
              "label": "MARKETING_WALLET",
              "type": "t_address_payable",
              "src": "contracts/DreadfulzNFT.sol:41"
            },
            {
              "contract": "DreadfulzNFT",
              "label": "payees",
              "type": "t_array(t_address)dyn_storage",
              "src": "contracts/DreadfulzNFT.sol:43"
            },
            {
              "contract": "DreadfulzNFT",
              "label": "shares",
              "type": "t_array(t_uint256)dyn_storage",
              "src": "contracts/DreadfulzNFT.sol:44"
            }
          ],
          "types": {
            "t_mapping(t_address,t_struct(UintSet)2986_storage)": {
              "label": "mapping(address => struct EnumerableSet.UintSet)"
            },
            "t_address": {
              "label": "address"
            },
            "t_struct(UintSet)2986_storage": {
              "label": "struct EnumerableSet.UintSet",
              "members": [
                {
                  "label": "_inner",
                  "type": "t_struct(Set)2528_storage"
                }
              ]
            },
            "t_struct(Set)2528_storage": {
              "label": "struct EnumerableSet.Set",
              "members": [
                {
                  "label": "_values",
                  "type": "t_array(t_bytes32)dyn_storage"
                },
                {
                  "label": "_indexes",
                  "type": "t_mapping(t_bytes32,t_uint256)"
                }
              ]
            },
            "t_array(t_bytes32)dyn_storage": {
              "label": "bytes32[]"
            },
            "t_bytes32": {
              "label": "bytes32"
            },
            "t_mapping(t_bytes32,t_uint256)": {
              "label": "mapping(bytes32 => uint256)"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_struct(UintToAddressMap)2283_storage": {
              "label": "struct EnumerableMap.UintToAddressMap",
              "members": [
                {
                  "label": "_inner",
                  "type": "t_struct(Map)2053_storage"
                }
              ]
            },
            "t_struct(Map)2053_storage": {
              "label": "struct EnumerableMap.Map",
              "members": [
                {
                  "label": "_keys",
                  "type": "t_struct(Bytes32Set)2722_storage"
                },
                {
                  "label": "_values",
                  "type": "t_mapping(t_bytes32,t_bytes32)"
                }
              ]
            },
            "t_struct(Bytes32Set)2722_storage": {
              "label": "struct EnumerableSet.Bytes32Set",
              "members": [
                {
                  "label": "_inner",
                  "type": "t_struct(Set)2528_storage"
                }
              ]
            },
            "t_mapping(t_bytes32,t_bytes32)": {
              "label": "mapping(bytes32 => bytes32)"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_address_payable": {
              "label": "address payable"
            },
            "t_array(t_address)dyn_storage": {
              "label": "address[]"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "DreadfulzStaking": {
        "src": "contracts/DreadfulzStaking.sol:17",
        "version": {
          "withMetadata": "ccedbc6289d8cd21b5d5c8130adc0ab28079a956636c898376e78bc563c54992",
          "withoutMetadata": "2c7697bb44406bda1c59c4fcaa4e6d54b427fd0608ceb0c5b793659e3517c87e",
          "linkedWithoutMetadata": "2c7697bb44406bda1c59c4fcaa4e6d54b427fd0608ceb0c5b793659e3517c87e"
        },
        "inherit": [
          "Ownable",
          "Context"
        ],
        "libraries": [
          "SafeMath"
        ],
        "methods": [
          "(address,address)",
          "setTokensClaimable(bool)",
          "getStakedTokens(address)",
          "stake(uint256)",
          "stakeBatch(uint256[])",
          "stakeAll()",
          "unstake(uint256)",
          "unstakeBatch(uint256[])",
          "emergencyUnstake(uint256)",
          "updateReward(address)",
          "rewardsOwing(address)",
          "claimReward(address)",
          "unclaimedRewards(address)",
          "onERC721Received(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "DreadfulzStaking",
            "src": "contracts/DreadfulzStaking.sol:66"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "DreadfulzStaking",
              "label": "rewardsToken",
              "type": "t_contract(IERC20)663",
              "src": "contracts/DreadfulzStaking.sol:21"
            },
            {
              "contract": "DreadfulzStaking",
              "label": "dreadfulzNFT",
              "type": "t_contract(DreadfulzNFT)3580",
              "src": "contracts/DreadfulzStaking.sol:22"
            },
            {
              "contract": "DreadfulzStaking",
              "label": "rewardsPerTokenPoints",
              "type": "t_uint256",
              "src": "contracts/DreadfulzStaking.sol:24"
            },
            {
              "contract": "DreadfulzStaking",
              "label": "totalUnclaimedRewards",
              "type": "t_uint256",
              "src": "contracts/DreadfulzStaking.sol:25"
            },
            {
              "contract": "DreadfulzStaking",
              "label": "stakers",
              "type": "t_mapping(t_address,t_struct(Staker)3619_storage)",
              "src": "contracts/DreadfulzStaking.sol:42"
            },
            {
              "contract": "DreadfulzStaking",
              "label": "tokenOwner",
              "type": "t_mapping(t_uint256,t_address)",
              "src": "contracts/DreadfulzStaking.sol:45"
            },
            {
              "contract": "DreadfulzStaking",
              "label": "tokensClaimable",
              "type": "t_bool",
              "src": "contracts/DreadfulzStaking.sol:48"
            },
            {
              "contract": "DreadfulzStaking",
              "label": "initialised",
              "type": "t_bool",
              "src": "contracts/DreadfulzStaking.sol:49"
            }
          ],
          "types": {
            "t_contract(IERC20)663": {
              "label": "contract IERC20"
            },
            "t_contract(DreadfulzNFT)3580": {
              "label": "contract DreadfulzNFT"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_struct(Staker)3619_storage)": {
              "label": "mapping(address => struct DreadfulzStaking.Staker)"
            },
            "t_address": {
              "label": "address"
            },
            "t_struct(Staker)3619_storage": {
              "label": "struct DreadfulzStaking.Staker",
              "members": [
                {
                  "label": "tokenIds",
                  "type": "t_array(t_uint256)dyn_storage"
                },
                {
                  "label": "tokenIndex",
                  "type": "t_mapping(t_uint256,t_uint256)"
                },
                {
                  "label": "lastRewardPoints",
                  "type": "t_uint256"
                },
                {
                  "label": "rewardsEarned",
                  "type": "t_uint256"
                },
                {
                  "label": "rewardsReleased",
                  "type": "t_uint256"
                }
              ]
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]"
            },
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)"
            },
            "t_bool": {
              "label": "bool"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC721A": {
        "src": "erc721a/contracts/ERC721A.sol:23",
        "version": {
          "withMetadata": "d90e8953f63fb7e09b553fb57c484f25b64a2b502bb9adf41ef329e5f28fad0c",
          "withoutMetadata": "b46845ce757cb59201ed5980ba1e238b1af2a42363b8f4b5a07b70d5394d3bf0",
          "linkedWithoutMetadata": "b46845ce757cb59201ed5980ba1e238b1af2a42363b8f4b5a07b70d5394d3bf0"
        },
        "inherit": [
          "IERC721Enumerable",
          "IERC721Metadata",
          "IERC721",
          "ERC165",
          "IERC165",
          "Context"
        ],
        "libraries": [
          "Address",
          "Strings"
        ],
        "methods": [
          "(string,string,uint256)",
          "totalSupply()",
          "tokenByIndex(uint256)",
          "tokenOfOwnerByIndex(address,uint256)",
          "supportsInterface(bytes4)",
          "balanceOf(address)",
          "ownerOf(uint256)",
          "name()",
          "symbol()",
          "tokenURI(uint256)",
          "approve(address,uint256)",
          "getApproved(uint256)",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "transferFrom(address,address,uint256)",
          "safeTransferFrom(address,address,uint256)",
          "safeTransferFrom(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC721A",
            "src": "erc721a/contracts/ERC721A.sol:64"
          },
          {
            "kind": "state-variable-assignment",
            "name": "currentIndex",
            "src": "erc721a/contracts/ERC721A.sol:37"
          },
          {
            "kind": "state-variable-immutable",
            "name": "maxBatchSize",
            "src": "erc721a/contracts/ERC721A.sol:39"
          },
          {
            "kind": "state-variable-assignment",
            "name": "nextOwnerToExplicitlySet",
            "src": "erc721a/contracts/ERC721A.sol:398"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ERC721A",
              "label": "currentIndex",
              "type": "t_uint256",
              "src": "erc721a/contracts/ERC721A.sol:37"
            },
            {
              "contract": "ERC721A",
              "label": "_name",
              "type": "t_string_storage",
              "src": "erc721a/contracts/ERC721A.sol:42"
            },
            {
              "contract": "ERC721A",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "erc721a/contracts/ERC721A.sol:45"
            },
            {
              "contract": "ERC721A",
              "label": "_ownerships",
              "type": "t_mapping(t_uint256,t_struct(TokenOwnership)4301_storage)",
              "src": "erc721a/contracts/ERC721A.sol:49"
            },
            {
              "contract": "ERC721A",
              "label": "_addressData",
              "type": "t_mapping(t_address,t_struct(AddressData)4306_storage)",
              "src": "erc721a/contracts/ERC721A.sol:52"
            },
            {
              "contract": "ERC721A",
              "label": "_tokenApprovals",
              "type": "t_mapping(t_uint256,t_address)",
              "src": "erc721a/contracts/ERC721A.sol:55"
            },
            {
              "contract": "ERC721A",
              "label": "_operatorApprovals",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "src": "erc721a/contracts/ERC721A.sol:58"
            },
            {
              "contract": "ERC721A",
              "label": "nextOwnerToExplicitlySet",
              "type": "t_uint256",
              "src": "erc721a/contracts/ERC721A.sol:398"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_mapping(t_uint256,t_struct(TokenOwnership)4301_storage)": {
              "label": "mapping(uint256 => struct ERC721A.TokenOwnership)"
            },
            "t_struct(TokenOwnership)4301_storage": {
              "label": "struct ERC721A.TokenOwnership",
              "members": [
                {
                  "label": "addr",
                  "type": "t_address"
                },
                {
                  "label": "startTimestamp",
                  "type": "t_uint64"
                }
              ]
            },
            "t_address": {
              "label": "address"
            },
            "t_uint64": {
              "label": "uint64"
            },
            "t_mapping(t_address,t_struct(AddressData)4306_storage)": {
              "label": "mapping(address => struct ERC721A.AddressData)"
            },
            "t_struct(AddressData)4306_storage": {
              "label": "struct ERC721A.AddressData",
              "members": [
                {
                  "label": "balance",
                  "type": "t_uint128"
                },
                {
                  "label": "numberMinted",
                  "type": "t_uint128"
                }
              ]
            },
            "t_uint128": {
              "label": "uint128"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_bool": {
              "label": "bool"
            }
          },
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "Ownable": {
        "src": "@openzeppelin/contracts/access/Ownable.sol:20",
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin/contracts/access/Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "Ownable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "PaymentSplitter": {
        "src": "@openzeppelin/contracts/finance/PaymentSplitter.sol:27",
        "version": {
          "withMetadata": "7ca80aa715b481cb550ce3949750475a418af4045c653fe6bed689f443f26bfb",
          "withoutMetadata": "a4e026d1eefdf675d63e6c33090429de6d5c3dc870d8924a7112b284573f6a31",
          "linkedWithoutMetadata": "a4e026d1eefdf675d63e6c33090429de6d5c3dc870d8924a7112b284573f6a31"
        },
        "inherit": [
          "Context"
        ],
        "libraries": [
          "Address",
          "SafeERC20"
        ],
        "methods": [
          "(address[],uint256[])",
          "()",
          "totalShares()",
          "totalReleased()",
          "totalReleased(address)",
          "shares(address)",
          "released(address)",
          "released(address,address)",
          "payee(uint256)",
          "release(address payable)",
          "release(address,address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "PaymentSplitter",
            "src": "@openzeppelin/contracts/finance/PaymentSplitter.sol:50"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "PaymentSplitter",
              "label": "_totalShares",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts/finance/PaymentSplitter.sol:33"
            },
            {
              "contract": "PaymentSplitter",
              "label": "_totalReleased",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts/finance/PaymentSplitter.sol:34"
            },
            {
              "contract": "PaymentSplitter",
              "label": "_shares",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin/contracts/finance/PaymentSplitter.sol:36"
            },
            {
              "contract": "PaymentSplitter",
              "label": "_released",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin/contracts/finance/PaymentSplitter.sol:37"
            },
            {
              "contract": "PaymentSplitter",
              "label": "_payees",
              "type": "t_array(t_address)dyn_storage",
              "src": "@openzeppelin/contracts/finance/PaymentSplitter.sol:38"
            },
            {
              "contract": "PaymentSplitter",
              "label": "_erc20TotalReleased",
              "type": "t_mapping(t_contract(IERC20)663,t_uint256)",
              "src": "@openzeppelin/contracts/finance/PaymentSplitter.sol:40"
            },
            {
              "contract": "PaymentSplitter",
              "label": "_erc20Released",
              "type": "t_mapping(t_contract(IERC20)663,t_mapping(t_address,t_uint256))",
              "src": "@openzeppelin/contracts/finance/PaymentSplitter.sol:41"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_array(t_address)dyn_storage": {
              "label": "address[]"
            },
            "t_mapping(t_contract(IERC20)663,t_uint256)": {
              "label": "mapping(contract IERC20 => uint256)"
            },
            "t_contract(IERC20)663": {
              "label": "contract IERC20"
            },
            "t_mapping(t_contract(IERC20)663,t_mapping(t_address,t_uint256))": {
              "label": "mapping(contract IERC20 => mapping(address => uint256))"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ReentrancyGuard": {
        "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:22",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReentrancyGuard",
            "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:39"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ReentrancyGuard",
              "label": "_status",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:37"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "SafeERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:18",
        "version": {
          "withMetadata": "56f3b47fe199a74f30abd43f547fa939c88066448b04cd5f17bdafbe2e03804a",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "Address"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC721": {
        "src": "@openzeppelin/contracts/token/ERC721/IERC721.sol:11",
        "inherit": [
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "balanceOf(address)",
          "ownerOf(uint256)",
          "safeTransferFrom(address,address,uint256)",
          "transferFrom(address,address,uint256)",
          "approve(address,uint256)",
          "getApproved(uint256)",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "safeTransferFrom(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC721Receiver": {
        "src": "@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol:11",
        "inherit": [],
        "libraries": [],
        "methods": [
          "onERC721Received(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC721Enumerable": {
        "src": "@openzeppelin/contracts/token/ERC721/extensions/IERC721Enumerable.sol:12",
        "inherit": [
          "IERC721",
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "tokenOfOwnerByIndex(address,uint256)",
          "tokenByIndex(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC721Metadata": {
        "src": "@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol:12",
        "inherit": [
          "IERC721",
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "tokenURI(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Address": {
        "src": "@openzeppelin/contracts/utils/Address.sol:9",
        "version": {
          "withMetadata": "484d2cade7f176ca5050f1f249737dd81ac6ed00490f5099f09054c1bc596b67",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:186"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Strings": {
        "src": "@openzeppelin/contracts/utils/Strings.sol:9",
        "version": {
          "withMetadata": "b16d77140251bcd9725701aa6d1902c15605c3749a720b7aac593644f6c217ac",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "MerkleProof": {
        "src": "@openzeppelin/contracts/utils/cryptography/MerkleProof.sol:15",
        "version": {
          "withMetadata": "eae9c389bfc7a3fccc9b1be4ba129d982448e261280aa30913fa3d7bc9f5440f",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC165": {
        "src": "@openzeppelin/contracts/utils/introspection/ERC165.sol:22",
        "inherit": [
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC165": {
        "src": "@openzeppelin/contracts/utils/introspection/IERC165.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "SafeMath": {
        "src": "@openzeppelin/contracts/utils/math/SafeMath.sol:16",
        "version": {
          "withMetadata": "8418487e012b6d36d0f064d32c31976a5cbfce3373a77c05261a0ae367939886",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "EnumerableMap": {
        "src": "@openzeppelin/contracts/utils/structs/EnumerableMap.sol:32",
        "version": {
          "withMetadata": "eb2563fd64638723253d815b920b9bdd7ba216c3415fd72b3339b5602807aab3",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "EnumerableSet"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "EnumerableSet": {
        "src": "@openzeppelin/contracts/utils/structs/EnumerableSet.sol:30",
        "version": {
          "withMetadata": "6ee35d052c3beaf7db7a043d937ed616f73a3d6a147dd22fd5b78a58e78e8277",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "DreadfulzNFT": {
        "src": "contracts/DreadfulzNFT.sol:12",
        "version": {
          "withMetadata": "dc076916e7c04294d57b15726fbdee35d1fae4969f8e64ba03b5af259020de3a",
          "withoutMetadata": "7369a552405d69e063027c8519b2ea6c1a394c1e7e961a4c4e03c82e3a08eab5",
          "linkedWithoutMetadata": "7369a552405d69e063027c8519b2ea6c1a394c1e7e961a4c4e03c82e3a08eab5"
        },
        "inherit": [
          "PaymentSplitter",
          "ERC721A",
          "IERC721Enumerable",
          "IERC721Metadata",
          "IERC721",
          "ERC165",
          "IERC165",
          "ReentrancyGuard",
          "Ownable",
          "Context"
        ],
        "libraries": [
          "EnumerableSet",
          "EnumerableMap"
        ],
        "methods": [
          "()",
          "mint(uint256)",
          "presale(uint256,bytes32[])",
          "balanceOfOwner(address)",
          "mintToTeam(address,uint256)",
          "setSaleActive()",
          "set2ndSaleActive()",
          "setFinalSaleActive()",
          "setMerkleRoot(bytes32)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "DreadfulzNFT",
            "src": "contracts/DreadfulzNFT.sol:48"
          },
          {
            "kind": "state-variable-assignment",
            "name": "merkleRoot",
            "src": "contracts/DreadfulzNFT.sol:22"
          },
          {
            "kind": "state-variable-assignment",
            "name": "isSaleActive",
            "src": "contracts/DreadfulzNFT.sol:26"
          },
          {
            "kind": "state-variable-assignment",
            "name": "is2ndSaleActive",
            "src": "contracts/DreadfulzNFT.sol:27"
          },
          {
            "kind": "state-variable-assignment",
            "name": "isFinalSaleActive",
            "src": "contracts/DreadfulzNFT.sol:28"
          },
          {
            "kind": "state-variable-assignment",
            "name": "RESERVED_AMOUNT",
            "src": "contracts/DreadfulzNFT.sol:30"
          },
          {
            "kind": "state-variable-assignment",
            "name": "FIRST_SALE_AMOUNT",
            "src": "contracts/DreadfulzNFT.sol:31"
          },
          {
            "kind": "state-variable-assignment",
            "name": "SECOND_SALE_AMOUNT",
            "src": "contracts/DreadfulzNFT.sol:32"
          },
          {
            "kind": "state-variable-assignment",
            "name": "FINAL_SALE_AMOUNT",
            "src": "contracts/DreadfulzNFT.sol:33"
          },
          {
            "kind": "state-variable-assignment",
            "name": "PRESALE_PRICE",
            "src": "contracts/DreadfulzNFT.sol:35"
          },
          {
            "kind": "state-variable-assignment",
            "name": "FIRST_SALE_PRICE",
            "src": "contracts/DreadfulzNFT.sol:36"
          },
          {
            "kind": "state-variable-assignment",
            "name": "SECOND_SALE_PRICE",
            "src": "contracts/DreadfulzNFT.sol:37"
          },
          {
            "kind": "state-variable-assignment",
            "name": "FINAL_SALE_PRICE",
            "src": "contracts/DreadfulzNFT.sol:38"
          },
          {
            "kind": "state-variable-assignment",
            "name": "DEV_WALLET",
            "src": "contracts/DreadfulzNFT.sol:40"
          },
          {
            "kind": "state-variable-assignment",
            "name": "MARKETING_WALLET",
            "src": "contracts/DreadfulzNFT.sol:41"
          },
          {
            "kind": "state-variable-assignment",
            "name": "payees",
            "src": "contracts/DreadfulzNFT.sol:43"
          },
          {
            "kind": "state-variable-assignment",
            "name": "shares",
            "src": "contracts/DreadfulzNFT.sol:44"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "DreadfulzNFT",
              "label": "_holderTokens",
              "type": "t_mapping(t_address,t_struct(UintSet)2986_storage)",
              "src": "contracts/DreadfulzNFT.sol:17"
            },
            {
              "contract": "DreadfulzNFT",
              "label": "_tokenOwners",
              "type": "t_struct(UintToAddressMap)2283_storage",
              "src": "contracts/DreadfulzNFT.sol:20"
            },
            {
              "contract": "DreadfulzNFT",
              "label": "merkleRoot",
              "type": "t_bytes32",
              "src": "contracts/DreadfulzNFT.sol:22"
            },
            {
              "contract": "DreadfulzNFT",
              "label": "whitelistClaimed",
              "type": "t_mapping(t_address,t_bool)",
              "src": "contracts/DreadfulzNFT.sol:24"
            },
            {
              "contract": "DreadfulzNFT",
              "label": "isSaleActive",
              "type": "t_bool",
              "src": "contracts/DreadfulzNFT.sol:26"
            },
            {
              "contract": "DreadfulzNFT",
              "label": "is2ndSaleActive",
              "type": "t_bool",
              "src": "contracts/DreadfulzNFT.sol:27"
            },
            {
              "contract": "DreadfulzNFT",
              "label": "isFinalSaleActive",
              "type": "t_bool",
              "src": "contracts/DreadfulzNFT.sol:28"
            },
            {
              "contract": "DreadfulzNFT",
              "label": "RESERVED_AMOUNT",
              "type": "t_uint256",
              "src": "contracts/DreadfulzNFT.sol:30"
            },
            {
              "contract": "DreadfulzNFT",
              "label": "FIRST_SALE_AMOUNT",
              "type": "t_uint256",
              "src": "contracts/DreadfulzNFT.sol:31"
            },
            {
              "contract": "DreadfulzNFT",
              "label": "SECOND_SALE_AMOUNT",
              "type": "t_uint256",
              "src": "contracts/DreadfulzNFT.sol:32"
            },
            {
              "contract": "DreadfulzNFT",
              "label": "FINAL_SALE_AMOUNT",
              "type": "t_uint256",
              "src": "contracts/DreadfulzNFT.sol:33"
            },
            {
              "contract": "DreadfulzNFT",
              "label": "PRESALE_PRICE",
              "type": "t_uint256",
              "src": "contracts/DreadfulzNFT.sol:35"
            },
            {
              "contract": "DreadfulzNFT",
              "label": "FIRST_SALE_PRICE",
              "type": "t_uint256",
              "src": "contracts/DreadfulzNFT.sol:36"
            },
            {
              "contract": "DreadfulzNFT",
              "label": "SECOND_SALE_PRICE",
              "type": "t_uint256",
              "src": "contracts/DreadfulzNFT.sol:37"
            },
            {
              "contract": "DreadfulzNFT",
              "label": "FINAL_SALE_PRICE",
              "type": "t_uint256",
              "src": "contracts/DreadfulzNFT.sol:38"
            },
            {
              "contract": "DreadfulzNFT",
              "label": "DEV_WALLET",
              "type": "t_address_payable",
              "src": "contracts/DreadfulzNFT.sol:40"
            },
            {
              "contract": "DreadfulzNFT",
              "label": "MARKETING_WALLET",
              "type": "t_address_payable",
              "src": "contracts/DreadfulzNFT.sol:41"
            },
            {
              "contract": "DreadfulzNFT",
              "label": "payees",
              "type": "t_array(t_address)dyn_storage",
              "src": "contracts/DreadfulzNFT.sol:43"
            },
            {
              "contract": "DreadfulzNFT",
              "label": "shares",
              "type": "t_array(t_uint256)dyn_storage",
              "src": "contracts/DreadfulzNFT.sol:44"
            }
          ],
          "types": {
            "t_mapping(t_address,t_struct(UintSet)2986_storage)": {
              "label": "mapping(address => struct EnumerableSet.UintSet)"
            },
            "t_address": {
              "label": "address"
            },
            "t_struct(UintSet)2986_storage": {
              "label": "struct EnumerableSet.UintSet",
              "members": [
                {
                  "label": "_inner",
                  "type": "t_struct(Set)2528_storage"
                }
              ]
            },
            "t_struct(Set)2528_storage": {
              "label": "struct EnumerableSet.Set",
              "members": [
                {
                  "label": "_values",
                  "type": "t_array(t_bytes32)dyn_storage"
                },
                {
                  "label": "_indexes",
                  "type": "t_mapping(t_bytes32,t_uint256)"
                }
              ]
            },
            "t_array(t_bytes32)dyn_storage": {
              "label": "bytes32[]"
            },
            "t_bytes32": {
              "label": "bytes32"
            },
            "t_mapping(t_bytes32,t_uint256)": {
              "label": "mapping(bytes32 => uint256)"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_struct(UintToAddressMap)2283_storage": {
              "label": "struct EnumerableMap.UintToAddressMap",
              "members": [
                {
                  "label": "_inner",
                  "type": "t_struct(Map)2053_storage"
                }
              ]
            },
            "t_struct(Map)2053_storage": {
              "label": "struct EnumerableMap.Map",
              "members": [
                {
                  "label": "_keys",
                  "type": "t_struct(Bytes32Set)2722_storage"
                },
                {
                  "label": "_values",
                  "type": "t_mapping(t_bytes32,t_bytes32)"
                }
              ]
            },
            "t_struct(Bytes32Set)2722_storage": {
              "label": "struct EnumerableSet.Bytes32Set",
              "members": [
                {
                  "label": "_inner",
                  "type": "t_struct(Set)2528_storage"
                }
              ]
            },
            "t_mapping(t_bytes32,t_bytes32)": {
              "label": "mapping(bytes32 => bytes32)"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_address_payable": {
              "label": "address payable"
            },
            "t_array(t_address)dyn_storage": {
              "label": "address[]"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "DreadfulzStaking": {
        "src": "contracts/DreadfulzStaking.sol:17",
        "version": {
          "withMetadata": "8fb8baedc10cd6ecf77190e1773f70dc5c44dead46335f6ba11c4b97891e3855",
          "withoutMetadata": "2c7697bb44406bda1c59c4fcaa4e6d54b427fd0608ceb0c5b793659e3517c87e",
          "linkedWithoutMetadata": "2c7697bb44406bda1c59c4fcaa4e6d54b427fd0608ceb0c5b793659e3517c87e"
        },
        "inherit": [
          "Ownable",
          "Context"
        ],
        "libraries": [
          "SafeMath"
        ],
        "methods": [
          "(address,address)",
          "setTokensClaimable(bool)",
          "getStakedTokens(address)",
          "stake(uint256)",
          "stakeBatch(uint256[])",
          "stakeAll()",
          "unstake(uint256)",
          "unstakeBatch(uint256[])",
          "emergencyUnstake(uint256)",
          "updateReward(address)",
          "rewardsOwing(address)",
          "claimReward(address)",
          "unclaimedRewards(address)",
          "onERC721Received(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "DreadfulzStaking",
            "src": "contracts/DreadfulzStaking.sol:66"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "DreadfulzStaking",
              "label": "rewardsToken",
              "type": "t_contract(IERC20)663",
              "src": "contracts/DreadfulzStaking.sol:21"
            },
            {
              "contract": "DreadfulzStaking",
              "label": "dreadfulzNFT",
              "type": "t_contract(DreadfulzNFT)3576",
              "src": "contracts/DreadfulzStaking.sol:22"
            },
            {
              "contract": "DreadfulzStaking",
              "label": "rewardsPerTokenPoints",
              "type": "t_uint256",
              "src": "contracts/DreadfulzStaking.sol:24"
            },
            {
              "contract": "DreadfulzStaking",
              "label": "totalUnclaimedRewards",
              "type": "t_uint256",
              "src": "contracts/DreadfulzStaking.sol:25"
            },
            {
              "contract": "DreadfulzStaking",
              "label": "stakers",
              "type": "t_mapping(t_address,t_struct(Staker)3615_storage)",
              "src": "contracts/DreadfulzStaking.sol:42"
            },
            {
              "contract": "DreadfulzStaking",
              "label": "tokenOwner",
              "type": "t_mapping(t_uint256,t_address)",
              "src": "contracts/DreadfulzStaking.sol:45"
            },
            {
              "contract": "DreadfulzStaking",
              "label": "tokensClaimable",
              "type": "t_bool",
              "src": "contracts/DreadfulzStaking.sol:48"
            },
            {
              "contract": "DreadfulzStaking",
              "label": "initialised",
              "type": "t_bool",
              "src": "contracts/DreadfulzStaking.sol:49"
            }
          ],
          "types": {
            "t_contract(IERC20)663": {
              "label": "contract IERC20"
            },
            "t_contract(DreadfulzNFT)3576": {
              "label": "contract DreadfulzNFT"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_struct(Staker)3615_storage)": {
              "label": "mapping(address => struct DreadfulzStaking.Staker)"
            },
            "t_address": {
              "label": "address"
            },
            "t_struct(Staker)3615_storage": {
              "label": "struct DreadfulzStaking.Staker",
              "members": [
                {
                  "label": "tokenIds",
                  "type": "t_array(t_uint256)dyn_storage"
                },
                {
                  "label": "tokenIndex",
                  "type": "t_mapping(t_uint256,t_uint256)"
                },
                {
                  "label": "lastRewardPoints",
                  "type": "t_uint256"
                },
                {
                  "label": "rewardsEarned",
                  "type": "t_uint256"
                },
                {
                  "label": "rewardsReleased",
                  "type": "t_uint256"
                }
              ]
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]"
            },
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)"
            },
            "t_bool": {
              "label": "bool"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC721A": {
        "src": "erc721a/contracts/ERC721A.sol:23",
        "version": {
          "withMetadata": "d90e8953f63fb7e09b553fb57c484f25b64a2b502bb9adf41ef329e5f28fad0c",
          "withoutMetadata": "b46845ce757cb59201ed5980ba1e238b1af2a42363b8f4b5a07b70d5394d3bf0",
          "linkedWithoutMetadata": "b46845ce757cb59201ed5980ba1e238b1af2a42363b8f4b5a07b70d5394d3bf0"
        },
        "inherit": [
          "IERC721Enumerable",
          "IERC721Metadata",
          "IERC721",
          "ERC165",
          "IERC165",
          "Context"
        ],
        "libraries": [
          "Address",
          "Strings"
        ],
        "methods": [
          "(string,string,uint256)",
          "totalSupply()",
          "tokenByIndex(uint256)",
          "tokenOfOwnerByIndex(address,uint256)",
          "supportsInterface(bytes4)",
          "balanceOf(address)",
          "ownerOf(uint256)",
          "name()",
          "symbol()",
          "tokenURI(uint256)",
          "approve(address,uint256)",
          "getApproved(uint256)",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "transferFrom(address,address,uint256)",
          "safeTransferFrom(address,address,uint256)",
          "safeTransferFrom(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC721A",
            "src": "erc721a/contracts/ERC721A.sol:64"
          },
          {
            "kind": "state-variable-assignment",
            "name": "currentIndex",
            "src": "erc721a/contracts/ERC721A.sol:37"
          },
          {
            "kind": "state-variable-immutable",
            "name": "maxBatchSize",
            "src": "erc721a/contracts/ERC721A.sol:39"
          },
          {
            "kind": "state-variable-assignment",
            "name": "nextOwnerToExplicitlySet",
            "src": "erc721a/contracts/ERC721A.sol:398"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ERC721A",
              "label": "currentIndex",
              "type": "t_uint256",
              "src": "erc721a/contracts/ERC721A.sol:37"
            },
            {
              "contract": "ERC721A",
              "label": "_name",
              "type": "t_string_storage",
              "src": "erc721a/contracts/ERC721A.sol:42"
            },
            {
              "contract": "ERC721A",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "erc721a/contracts/ERC721A.sol:45"
            },
            {
              "contract": "ERC721A",
              "label": "_ownerships",
              "type": "t_mapping(t_uint256,t_struct(TokenOwnership)4297_storage)",
              "src": "erc721a/contracts/ERC721A.sol:49"
            },
            {
              "contract": "ERC721A",
              "label": "_addressData",
              "type": "t_mapping(t_address,t_struct(AddressData)4302_storage)",
              "src": "erc721a/contracts/ERC721A.sol:52"
            },
            {
              "contract": "ERC721A",
              "label": "_tokenApprovals",
              "type": "t_mapping(t_uint256,t_address)",
              "src": "erc721a/contracts/ERC721A.sol:55"
            },
            {
              "contract": "ERC721A",
              "label": "_operatorApprovals",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "src": "erc721a/contracts/ERC721A.sol:58"
            },
            {
              "contract": "ERC721A",
              "label": "nextOwnerToExplicitlySet",
              "type": "t_uint256",
              "src": "erc721a/contracts/ERC721A.sol:398"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_mapping(t_uint256,t_struct(TokenOwnership)4297_storage)": {
              "label": "mapping(uint256 => struct ERC721A.TokenOwnership)"
            },
            "t_struct(TokenOwnership)4297_storage": {
              "label": "struct ERC721A.TokenOwnership",
              "members": [
                {
                  "label": "addr",
                  "type": "t_address"
                },
                {
                  "label": "startTimestamp",
                  "type": "t_uint64"
                }
              ]
            },
            "t_address": {
              "label": "address"
            },
            "t_uint64": {
              "label": "uint64"
            },
            "t_mapping(t_address,t_struct(AddressData)4302_storage)": {
              "label": "mapping(address => struct ERC721A.AddressData)"
            },
            "t_struct(AddressData)4302_storage": {
              "label": "struct ERC721A.AddressData",
              "members": [
                {
                  "label": "balance",
                  "type": "t_uint128"
                },
                {
                  "label": "numberMinted",
                  "type": "t_uint128"
                }
              ]
            },
            "t_uint128": {
              "label": "uint128"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_bool": {
              "label": "bool"
            }
          },
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "Ownable": {
        "src": "@openzeppelin/contracts/access/Ownable.sol:20",
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin/contracts/access/Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "Ownable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "PaymentSplitter": {
        "src": "@openzeppelin/contracts/finance/PaymentSplitter.sol:27",
        "version": {
          "withMetadata": "7ca80aa715b481cb550ce3949750475a418af4045c653fe6bed689f443f26bfb",
          "withoutMetadata": "a4e026d1eefdf675d63e6c33090429de6d5c3dc870d8924a7112b284573f6a31",
          "linkedWithoutMetadata": "a4e026d1eefdf675d63e6c33090429de6d5c3dc870d8924a7112b284573f6a31"
        },
        "inherit": [
          "Context"
        ],
        "libraries": [
          "Address",
          "SafeERC20"
        ],
        "methods": [
          "(address[],uint256[])",
          "()",
          "totalShares()",
          "totalReleased()",
          "totalReleased(address)",
          "shares(address)",
          "released(address)",
          "released(address,address)",
          "payee(uint256)",
          "release(address payable)",
          "release(address,address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "PaymentSplitter",
            "src": "@openzeppelin/contracts/finance/PaymentSplitter.sol:50"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "PaymentSplitter",
              "label": "_totalShares",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts/finance/PaymentSplitter.sol:33"
            },
            {
              "contract": "PaymentSplitter",
              "label": "_totalReleased",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts/finance/PaymentSplitter.sol:34"
            },
            {
              "contract": "PaymentSplitter",
              "label": "_shares",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin/contracts/finance/PaymentSplitter.sol:36"
            },
            {
              "contract": "PaymentSplitter",
              "label": "_released",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin/contracts/finance/PaymentSplitter.sol:37"
            },
            {
              "contract": "PaymentSplitter",
              "label": "_payees",
              "type": "t_array(t_address)dyn_storage",
              "src": "@openzeppelin/contracts/finance/PaymentSplitter.sol:38"
            },
            {
              "contract": "PaymentSplitter",
              "label": "_erc20TotalReleased",
              "type": "t_mapping(t_contract(IERC20)663,t_uint256)",
              "src": "@openzeppelin/contracts/finance/PaymentSplitter.sol:40"
            },
            {
              "contract": "PaymentSplitter",
              "label": "_erc20Released",
              "type": "t_mapping(t_contract(IERC20)663,t_mapping(t_address,t_uint256))",
              "src": "@openzeppelin/contracts/finance/PaymentSplitter.sol:41"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_array(t_address)dyn_storage": {
              "label": "address[]"
            },
            "t_mapping(t_contract(IERC20)663,t_uint256)": {
              "label": "mapping(contract IERC20 => uint256)"
            },
            "t_contract(IERC20)663": {
              "label": "contract IERC20"
            },
            "t_mapping(t_contract(IERC20)663,t_mapping(t_address,t_uint256))": {
              "label": "mapping(contract IERC20 => mapping(address => uint256))"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ReentrancyGuard": {
        "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:22",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReentrancyGuard",
            "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:39"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ReentrancyGuard",
              "label": "_status",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:37"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "SafeERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:18",
        "version": {
          "withMetadata": "56f3b47fe199a74f30abd43f547fa939c88066448b04cd5f17bdafbe2e03804a",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "Address"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC721": {
        "src": "@openzeppelin/contracts/token/ERC721/IERC721.sol:11",
        "inherit": [
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "balanceOf(address)",
          "ownerOf(uint256)",
          "safeTransferFrom(address,address,uint256)",
          "transferFrom(address,address,uint256)",
          "approve(address,uint256)",
          "getApproved(uint256)",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "safeTransferFrom(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC721Receiver": {
        "src": "@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol:11",
        "inherit": [],
        "libraries": [],
        "methods": [
          "onERC721Received(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC721Enumerable": {
        "src": "@openzeppelin/contracts/token/ERC721/extensions/IERC721Enumerable.sol:12",
        "inherit": [
          "IERC721",
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "tokenOfOwnerByIndex(address,uint256)",
          "tokenByIndex(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC721Metadata": {
        "src": "@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol:12",
        "inherit": [
          "IERC721",
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "tokenURI(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Address": {
        "src": "@openzeppelin/contracts/utils/Address.sol:9",
        "version": {
          "withMetadata": "484d2cade7f176ca5050f1f249737dd81ac6ed00490f5099f09054c1bc596b67",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:186"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Strings": {
        "src": "@openzeppelin/contracts/utils/Strings.sol:9",
        "version": {
          "withMetadata": "b16d77140251bcd9725701aa6d1902c15605c3749a720b7aac593644f6c217ac",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "MerkleProof": {
        "src": "@openzeppelin/contracts/utils/cryptography/MerkleProof.sol:15",
        "version": {
          "withMetadata": "eae9c389bfc7a3fccc9b1be4ba129d982448e261280aa30913fa3d7bc9f5440f",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC165": {
        "src": "@openzeppelin/contracts/utils/introspection/ERC165.sol:22",
        "inherit": [
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC165": {
        "src": "@openzeppelin/contracts/utils/introspection/IERC165.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "SafeMath": {
        "src": "@openzeppelin/contracts/utils/math/SafeMath.sol:16",
        "version": {
          "withMetadata": "8418487e012b6d36d0f064d32c31976a5cbfce3373a77c05261a0ae367939886",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "EnumerableMap": {
        "src": "@openzeppelin/contracts/utils/structs/EnumerableMap.sol:32",
        "version": {
          "withMetadata": "eb2563fd64638723253d815b920b9bdd7ba216c3415fd72b3339b5602807aab3",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "EnumerableSet"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "EnumerableSet": {
        "src": "@openzeppelin/contracts/utils/structs/EnumerableSet.sol:30",
        "version": {
          "withMetadata": "6ee35d052c3beaf7db7a043d937ed616f73a3d6a147dd22fd5b78a58e78e8277",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "DreadfulzNFT": {
        "src": "contracts/DreadfulzNFT.sol:12",
        "version": {
          "withMetadata": "869d7f844171df0b028d4f21dd992cfc54301bbe6145daf2d0c2535178e585fe",
          "withoutMetadata": "fd93fa56471cd6fb06c09a22b7331e3980c18e82ec22efe25c61c7d05dfb928f",
          "linkedWithoutMetadata": "fd93fa56471cd6fb06c09a22b7331e3980c18e82ec22efe25c61c7d05dfb928f"
        },
        "inherit": [
          "PaymentSplitter",
          "ERC721A",
          "IERC721Enumerable",
          "IERC721Metadata",
          "IERC721",
          "ERC165",
          "IERC165",
          "ReentrancyGuard",
          "Ownable",
          "Context"
        ],
        "libraries": [
          "EnumerableSet",
          "EnumerableMap"
        ],
        "methods": [
          "()",
          "mint(uint256)",
          "presale(uint256,bytes32[])",
          "balanceOfOwner(address)",
          "mintToTeam(address,uint256)",
          "setSaleActive()",
          "set2ndSaleActive()",
          "setFinalSaleActive()",
          "setMerkleRoot(bytes32)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "DreadfulzNFT",
            "src": "contracts/DreadfulzNFT.sol:48"
          },
          {
            "kind": "state-variable-assignment",
            "name": "merkleRoot",
            "src": "contracts/DreadfulzNFT.sol:22"
          },
          {
            "kind": "state-variable-assignment",
            "name": "isSaleActive",
            "src": "contracts/DreadfulzNFT.sol:26"
          },
          {
            "kind": "state-variable-assignment",
            "name": "is2ndSaleActive",
            "src": "contracts/DreadfulzNFT.sol:27"
          },
          {
            "kind": "state-variable-assignment",
            "name": "isFinalSaleActive",
            "src": "contracts/DreadfulzNFT.sol:28"
          },
          {
            "kind": "state-variable-assignment",
            "name": "RESERVED_AMOUNT",
            "src": "contracts/DreadfulzNFT.sol:30"
          },
          {
            "kind": "state-variable-assignment",
            "name": "FIRST_SALE_AMOUNT",
            "src": "contracts/DreadfulzNFT.sol:31"
          },
          {
            "kind": "state-variable-assignment",
            "name": "SECOND_SALE_AMOUNT",
            "src": "contracts/DreadfulzNFT.sol:32"
          },
          {
            "kind": "state-variable-assignment",
            "name": "FINAL_SALE_AMOUNT",
            "src": "contracts/DreadfulzNFT.sol:33"
          },
          {
            "kind": "state-variable-assignment",
            "name": "PRESALE_PRICE",
            "src": "contracts/DreadfulzNFT.sol:35"
          },
          {
            "kind": "state-variable-assignment",
            "name": "FIRST_SALE_PRICE",
            "src": "contracts/DreadfulzNFT.sol:36"
          },
          {
            "kind": "state-variable-assignment",
            "name": "SECOND_SALE_PRICE",
            "src": "contracts/DreadfulzNFT.sol:37"
          },
          {
            "kind": "state-variable-assignment",
            "name": "FINAL_SALE_PRICE",
            "src": "contracts/DreadfulzNFT.sol:38"
          },
          {
            "kind": "state-variable-assignment",
            "name": "DEV_WALLET",
            "src": "contracts/DreadfulzNFT.sol:40"
          },
          {
            "kind": "state-variable-assignment",
            "name": "MARKETING_WALLET",
            "src": "contracts/DreadfulzNFT.sol:41"
          },
          {
            "kind": "state-variable-assignment",
            "name": "payees",
            "src": "contracts/DreadfulzNFT.sol:43"
          },
          {
            "kind": "state-variable-assignment",
            "name": "shares",
            "src": "contracts/DreadfulzNFT.sol:44"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "DreadfulzNFT",
              "label": "_holderTokens",
              "type": "t_mapping(t_address,t_struct(UintSet)2986_storage)",
              "src": "contracts/DreadfulzNFT.sol:17"
            },
            {
              "contract": "DreadfulzNFT",
              "label": "_tokenOwners",
              "type": "t_struct(UintToAddressMap)2283_storage",
              "src": "contracts/DreadfulzNFT.sol:20"
            },
            {
              "contract": "DreadfulzNFT",
              "label": "merkleRoot",
              "type": "t_bytes32",
              "src": "contracts/DreadfulzNFT.sol:22"
            },
            {
              "contract": "DreadfulzNFT",
              "label": "whitelistClaimed",
              "type": "t_mapping(t_address,t_bool)",
              "src": "contracts/DreadfulzNFT.sol:24"
            },
            {
              "contract": "DreadfulzNFT",
              "label": "isSaleActive",
              "type": "t_bool",
              "src": "contracts/DreadfulzNFT.sol:26"
            },
            {
              "contract": "DreadfulzNFT",
              "label": "is2ndSaleActive",
              "type": "t_bool",
              "src": "contracts/DreadfulzNFT.sol:27"
            },
            {
              "contract": "DreadfulzNFT",
              "label": "isFinalSaleActive",
              "type": "t_bool",
              "src": "contracts/DreadfulzNFT.sol:28"
            },
            {
              "contract": "DreadfulzNFT",
              "label": "RESERVED_AMOUNT",
              "type": "t_uint256",
              "src": "contracts/DreadfulzNFT.sol:30"
            },
            {
              "contract": "DreadfulzNFT",
              "label": "FIRST_SALE_AMOUNT",
              "type": "t_uint256",
              "src": "contracts/DreadfulzNFT.sol:31"
            },
            {
              "contract": "DreadfulzNFT",
              "label": "SECOND_SALE_AMOUNT",
              "type": "t_uint256",
              "src": "contracts/DreadfulzNFT.sol:32"
            },
            {
              "contract": "DreadfulzNFT",
              "label": "FINAL_SALE_AMOUNT",
              "type": "t_uint256",
              "src": "contracts/DreadfulzNFT.sol:33"
            },
            {
              "contract": "DreadfulzNFT",
              "label": "PRESALE_PRICE",
              "type": "t_uint256",
              "src": "contracts/DreadfulzNFT.sol:35"
            },
            {
              "contract": "DreadfulzNFT",
              "label": "FIRST_SALE_PRICE",
              "type": "t_uint256",
              "src": "contracts/DreadfulzNFT.sol:36"
            },
            {
              "contract": "DreadfulzNFT",
              "label": "SECOND_SALE_PRICE",
              "type": "t_uint256",
              "src": "contracts/DreadfulzNFT.sol:37"
            },
            {
              "contract": "DreadfulzNFT",
              "label": "FINAL_SALE_PRICE",
              "type": "t_uint256",
              "src": "contracts/DreadfulzNFT.sol:38"
            },
            {
              "contract": "DreadfulzNFT",
              "label": "DEV_WALLET",
              "type": "t_address_payable",
              "src": "contracts/DreadfulzNFT.sol:40"
            },
            {
              "contract": "DreadfulzNFT",
              "label": "MARKETING_WALLET",
              "type": "t_address_payable",
              "src": "contracts/DreadfulzNFT.sol:41"
            },
            {
              "contract": "DreadfulzNFT",
              "label": "payees",
              "type": "t_array(t_address)dyn_storage",
              "src": "contracts/DreadfulzNFT.sol:43"
            },
            {
              "contract": "DreadfulzNFT",
              "label": "shares",
              "type": "t_array(t_uint256)dyn_storage",
              "src": "contracts/DreadfulzNFT.sol:44"
            }
          ],
          "types": {
            "t_mapping(t_address,t_struct(UintSet)2986_storage)": {
              "label": "mapping(address => struct EnumerableSet.UintSet)"
            },
            "t_address": {
              "label": "address"
            },
            "t_struct(UintSet)2986_storage": {
              "label": "struct EnumerableSet.UintSet",
              "members": [
                {
                  "label": "_inner",
                  "type": "t_struct(Set)2528_storage"
                }
              ]
            },
            "t_struct(Set)2528_storage": {
              "label": "struct EnumerableSet.Set",
              "members": [
                {
                  "label": "_values",
                  "type": "t_array(t_bytes32)dyn_storage"
                },
                {
                  "label": "_indexes",
                  "type": "t_mapping(t_bytes32,t_uint256)"
                }
              ]
            },
            "t_array(t_bytes32)dyn_storage": {
              "label": "bytes32[]"
            },
            "t_bytes32": {
              "label": "bytes32"
            },
            "t_mapping(t_bytes32,t_uint256)": {
              "label": "mapping(bytes32 => uint256)"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_struct(UintToAddressMap)2283_storage": {
              "label": "struct EnumerableMap.UintToAddressMap",
              "members": [
                {
                  "label": "_inner",
                  "type": "t_struct(Map)2053_storage"
                }
              ]
            },
            "t_struct(Map)2053_storage": {
              "label": "struct EnumerableMap.Map",
              "members": [
                {
                  "label": "_keys",
                  "type": "t_struct(Bytes32Set)2722_storage"
                },
                {
                  "label": "_values",
                  "type": "t_mapping(t_bytes32,t_bytes32)"
                }
              ]
            },
            "t_struct(Bytes32Set)2722_storage": {
              "label": "struct EnumerableSet.Bytes32Set",
              "members": [
                {
                  "label": "_inner",
                  "type": "t_struct(Set)2528_storage"
                }
              ]
            },
            "t_mapping(t_bytes32,t_bytes32)": {
              "label": "mapping(bytes32 => bytes32)"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_address_payable": {
              "label": "address payable"
            },
            "t_array(t_address)dyn_storage": {
              "label": "address[]"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "DreadfulzStaking": {
        "src": "contracts/DreadfulzStaking.sol:17",
        "version": {
          "withMetadata": "2dceab860c6cd1b0f61cdba8372dce8b8e56d6fff632d4b760315402b3c24a80",
          "withoutMetadata": "2c7697bb44406bda1c59c4fcaa4e6d54b427fd0608ceb0c5b793659e3517c87e",
          "linkedWithoutMetadata": "2c7697bb44406bda1c59c4fcaa4e6d54b427fd0608ceb0c5b793659e3517c87e"
        },
        "inherit": [
          "Ownable",
          "Context"
        ],
        "libraries": [
          "SafeMath"
        ],
        "methods": [
          "(address,address)",
          "setTokensClaimable(bool)",
          "getStakedTokens(address)",
          "stake(uint256)",
          "stakeBatch(uint256[])",
          "stakeAll()",
          "unstake(uint256)",
          "unstakeBatch(uint256[])",
          "emergencyUnstake(uint256)",
          "updateReward(address)",
          "rewardsOwing(address)",
          "claimReward(address)",
          "unclaimedRewards(address)",
          "onERC721Received(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "DreadfulzStaking",
            "src": "contracts/DreadfulzStaking.sol:66"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "DreadfulzStaking",
              "label": "rewardsToken",
              "type": "t_contract(IERC20)663",
              "src": "contracts/DreadfulzStaking.sol:21"
            },
            {
              "contract": "DreadfulzStaking",
              "label": "dreadfulzNFT",
              "type": "t_contract(DreadfulzNFT)3573",
              "src": "contracts/DreadfulzStaking.sol:22"
            },
            {
              "contract": "DreadfulzStaking",
              "label": "rewardsPerTokenPoints",
              "type": "t_uint256",
              "src": "contracts/DreadfulzStaking.sol:24"
            },
            {
              "contract": "DreadfulzStaking",
              "label": "totalUnclaimedRewards",
              "type": "t_uint256",
              "src": "contracts/DreadfulzStaking.sol:25"
            },
            {
              "contract": "DreadfulzStaking",
              "label": "stakers",
              "type": "t_mapping(t_address,t_struct(Staker)3612_storage)",
              "src": "contracts/DreadfulzStaking.sol:42"
            },
            {
              "contract": "DreadfulzStaking",
              "label": "tokenOwner",
              "type": "t_mapping(t_uint256,t_address)",
              "src": "contracts/DreadfulzStaking.sol:45"
            },
            {
              "contract": "DreadfulzStaking",
              "label": "tokensClaimable",
              "type": "t_bool",
              "src": "contracts/DreadfulzStaking.sol:48"
            },
            {
              "contract": "DreadfulzStaking",
              "label": "initialised",
              "type": "t_bool",
              "src": "contracts/DreadfulzStaking.sol:49"
            }
          ],
          "types": {
            "t_contract(IERC20)663": {
              "label": "contract IERC20"
            },
            "t_contract(DreadfulzNFT)3573": {
              "label": "contract DreadfulzNFT"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_struct(Staker)3612_storage)": {
              "label": "mapping(address => struct DreadfulzStaking.Staker)"
            },
            "t_address": {
              "label": "address"
            },
            "t_struct(Staker)3612_storage": {
              "label": "struct DreadfulzStaking.Staker",
              "members": [
                {
                  "label": "tokenIds",
                  "type": "t_array(t_uint256)dyn_storage"
                },
                {
                  "label": "tokenIndex",
                  "type": "t_mapping(t_uint256,t_uint256)"
                },
                {
                  "label": "lastRewardPoints",
                  "type": "t_uint256"
                },
                {
                  "label": "rewardsEarned",
                  "type": "t_uint256"
                },
                {
                  "label": "rewardsReleased",
                  "type": "t_uint256"
                }
              ]
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]"
            },
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)"
            },
            "t_bool": {
              "label": "bool"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC721A": {
        "src": "erc721a/contracts/ERC721A.sol:23",
        "version": {
          "withMetadata": "d90e8953f63fb7e09b553fb57c484f25b64a2b502bb9adf41ef329e5f28fad0c",
          "withoutMetadata": "b46845ce757cb59201ed5980ba1e238b1af2a42363b8f4b5a07b70d5394d3bf0",
          "linkedWithoutMetadata": "b46845ce757cb59201ed5980ba1e238b1af2a42363b8f4b5a07b70d5394d3bf0"
        },
        "inherit": [
          "IERC721Enumerable",
          "IERC721Metadata",
          "IERC721",
          "ERC165",
          "IERC165",
          "Context"
        ],
        "libraries": [
          "Address",
          "Strings"
        ],
        "methods": [
          "(string,string,uint256)",
          "totalSupply()",
          "tokenByIndex(uint256)",
          "tokenOfOwnerByIndex(address,uint256)",
          "supportsInterface(bytes4)",
          "balanceOf(address)",
          "ownerOf(uint256)",
          "name()",
          "symbol()",
          "tokenURI(uint256)",
          "approve(address,uint256)",
          "getApproved(uint256)",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "transferFrom(address,address,uint256)",
          "safeTransferFrom(address,address,uint256)",
          "safeTransferFrom(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC721A",
            "src": "erc721a/contracts/ERC721A.sol:64"
          },
          {
            "kind": "state-variable-assignment",
            "name": "currentIndex",
            "src": "erc721a/contracts/ERC721A.sol:37"
          },
          {
            "kind": "state-variable-immutable",
            "name": "maxBatchSize",
            "src": "erc721a/contracts/ERC721A.sol:39"
          },
          {
            "kind": "state-variable-assignment",
            "name": "nextOwnerToExplicitlySet",
            "src": "erc721a/contracts/ERC721A.sol:398"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ERC721A",
              "label": "currentIndex",
              "type": "t_uint256",
              "src": "erc721a/contracts/ERC721A.sol:37"
            },
            {
              "contract": "ERC721A",
              "label": "_name",
              "type": "t_string_storage",
              "src": "erc721a/contracts/ERC721A.sol:42"
            },
            {
              "contract": "ERC721A",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "erc721a/contracts/ERC721A.sol:45"
            },
            {
              "contract": "ERC721A",
              "label": "_ownerships",
              "type": "t_mapping(t_uint256,t_struct(TokenOwnership)4294_storage)",
              "src": "erc721a/contracts/ERC721A.sol:49"
            },
            {
              "contract": "ERC721A",
              "label": "_addressData",
              "type": "t_mapping(t_address,t_struct(AddressData)4299_storage)",
              "src": "erc721a/contracts/ERC721A.sol:52"
            },
            {
              "contract": "ERC721A",
              "label": "_tokenApprovals",
              "type": "t_mapping(t_uint256,t_address)",
              "src": "erc721a/contracts/ERC721A.sol:55"
            },
            {
              "contract": "ERC721A",
              "label": "_operatorApprovals",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "src": "erc721a/contracts/ERC721A.sol:58"
            },
            {
              "contract": "ERC721A",
              "label": "nextOwnerToExplicitlySet",
              "type": "t_uint256",
              "src": "erc721a/contracts/ERC721A.sol:398"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_mapping(t_uint256,t_struct(TokenOwnership)4294_storage)": {
              "label": "mapping(uint256 => struct ERC721A.TokenOwnership)"
            },
            "t_struct(TokenOwnership)4294_storage": {
              "label": "struct ERC721A.TokenOwnership",
              "members": [
                {
                  "label": "addr",
                  "type": "t_address"
                },
                {
                  "label": "startTimestamp",
                  "type": "t_uint64"
                }
              ]
            },
            "t_address": {
              "label": "address"
            },
            "t_uint64": {
              "label": "uint64"
            },
            "t_mapping(t_address,t_struct(AddressData)4299_storage)": {
              "label": "mapping(address => struct ERC721A.AddressData)"
            },
            "t_struct(AddressData)4299_storage": {
              "label": "struct ERC721A.AddressData",
              "members": [
                {
                  "label": "balance",
                  "type": "t_uint128"
                },
                {
                  "label": "numberMinted",
                  "type": "t_uint128"
                }
              ]
            },
            "t_uint128": {
              "label": "uint128"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_bool": {
              "label": "bool"
            }
          },
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "Ownable": {
        "src": "@openzeppelin/contracts/access/Ownable.sol:20",
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin/contracts/access/Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "Ownable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "PaymentSplitter": {
        "src": "@openzeppelin/contracts/finance/PaymentSplitter.sol:27",
        "version": {
          "withMetadata": "7ca80aa715b481cb550ce3949750475a418af4045c653fe6bed689f443f26bfb",
          "withoutMetadata": "a4e026d1eefdf675d63e6c33090429de6d5c3dc870d8924a7112b284573f6a31",
          "linkedWithoutMetadata": "a4e026d1eefdf675d63e6c33090429de6d5c3dc870d8924a7112b284573f6a31"
        },
        "inherit": [
          "Context"
        ],
        "libraries": [
          "Address",
          "SafeERC20"
        ],
        "methods": [
          "(address[],uint256[])",
          "()",
          "totalShares()",
          "totalReleased()",
          "totalReleased(address)",
          "shares(address)",
          "released(address)",
          "released(address,address)",
          "payee(uint256)",
          "release(address payable)",
          "release(address,address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "PaymentSplitter",
            "src": "@openzeppelin/contracts/finance/PaymentSplitter.sol:50"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "PaymentSplitter",
              "label": "_totalShares",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts/finance/PaymentSplitter.sol:33"
            },
            {
              "contract": "PaymentSplitter",
              "label": "_totalReleased",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts/finance/PaymentSplitter.sol:34"
            },
            {
              "contract": "PaymentSplitter",
              "label": "_shares",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin/contracts/finance/PaymentSplitter.sol:36"
            },
            {
              "contract": "PaymentSplitter",
              "label": "_released",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin/contracts/finance/PaymentSplitter.sol:37"
            },
            {
              "contract": "PaymentSplitter",
              "label": "_payees",
              "type": "t_array(t_address)dyn_storage",
              "src": "@openzeppelin/contracts/finance/PaymentSplitter.sol:38"
            },
            {
              "contract": "PaymentSplitter",
              "label": "_erc20TotalReleased",
              "type": "t_mapping(t_contract(IERC20)663,t_uint256)",
              "src": "@openzeppelin/contracts/finance/PaymentSplitter.sol:40"
            },
            {
              "contract": "PaymentSplitter",
              "label": "_erc20Released",
              "type": "t_mapping(t_contract(IERC20)663,t_mapping(t_address,t_uint256))",
              "src": "@openzeppelin/contracts/finance/PaymentSplitter.sol:41"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_array(t_address)dyn_storage": {
              "label": "address[]"
            },
            "t_mapping(t_contract(IERC20)663,t_uint256)": {
              "label": "mapping(contract IERC20 => uint256)"
            },
            "t_contract(IERC20)663": {
              "label": "contract IERC20"
            },
            "t_mapping(t_contract(IERC20)663,t_mapping(t_address,t_uint256))": {
              "label": "mapping(contract IERC20 => mapping(address => uint256))"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ReentrancyGuard": {
        "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:22",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReentrancyGuard",
            "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:39"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ReentrancyGuard",
              "label": "_status",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:37"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "SafeERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:18",
        "version": {
          "withMetadata": "56f3b47fe199a74f30abd43f547fa939c88066448b04cd5f17bdafbe2e03804a",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "Address"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC721": {
        "src": "@openzeppelin/contracts/token/ERC721/IERC721.sol:11",
        "inherit": [
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "balanceOf(address)",
          "ownerOf(uint256)",
          "safeTransferFrom(address,address,uint256)",
          "transferFrom(address,address,uint256)",
          "approve(address,uint256)",
          "getApproved(uint256)",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "safeTransferFrom(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC721Receiver": {
        "src": "@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol:11",
        "inherit": [],
        "libraries": [],
        "methods": [
          "onERC721Received(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC721Enumerable": {
        "src": "@openzeppelin/contracts/token/ERC721/extensions/IERC721Enumerable.sol:12",
        "inherit": [
          "IERC721",
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "tokenOfOwnerByIndex(address,uint256)",
          "tokenByIndex(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC721Metadata": {
        "src": "@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol:12",
        "inherit": [
          "IERC721",
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "tokenURI(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Address": {
        "src": "@openzeppelin/contracts/utils/Address.sol:9",
        "version": {
          "withMetadata": "484d2cade7f176ca5050f1f249737dd81ac6ed00490f5099f09054c1bc596b67",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:186"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Strings": {
        "src": "@openzeppelin/contracts/utils/Strings.sol:9",
        "version": {
          "withMetadata": "b16d77140251bcd9725701aa6d1902c15605c3749a720b7aac593644f6c217ac",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "MerkleProof": {
        "src": "@openzeppelin/contracts/utils/cryptography/MerkleProof.sol:15",
        "version": {
          "withMetadata": "eae9c389bfc7a3fccc9b1be4ba129d982448e261280aa30913fa3d7bc9f5440f",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC165": {
        "src": "@openzeppelin/contracts/utils/introspection/ERC165.sol:22",
        "inherit": [
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC165": {
        "src": "@openzeppelin/contracts/utils/introspection/IERC165.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "SafeMath": {
        "src": "@openzeppelin/contracts/utils/math/SafeMath.sol:16",
        "version": {
          "withMetadata": "8418487e012b6d36d0f064d32c31976a5cbfce3373a77c05261a0ae367939886",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "EnumerableMap": {
        "src": "@openzeppelin/contracts/utils/structs/EnumerableMap.sol:32",
        "version": {
          "withMetadata": "eb2563fd64638723253d815b920b9bdd7ba216c3415fd72b3339b5602807aab3",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "EnumerableSet"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "EnumerableSet": {
        "src": "@openzeppelin/contracts/utils/structs/EnumerableSet.sol:30",
        "version": {
          "withMetadata": "6ee35d052c3beaf7db7a043d937ed616f73a3d6a147dd22fd5b78a58e78e8277",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "DreadfulzNFT": {
        "src": "contracts/DreadfulzNFT.sol:12",
        "version": {
          "withMetadata": "dc076916e7c04294d57b15726fbdee35d1fae4969f8e64ba03b5af259020de3a",
          "withoutMetadata": "7369a552405d69e063027c8519b2ea6c1a394c1e7e961a4c4e03c82e3a08eab5",
          "linkedWithoutMetadata": "7369a552405d69e063027c8519b2ea6c1a394c1e7e961a4c4e03c82e3a08eab5"
        },
        "inherit": [
          "PaymentSplitter",
          "ERC721A",
          "IERC721Enumerable",
          "IERC721Metadata",
          "IERC721",
          "ERC165",
          "IERC165",
          "ReentrancyGuard",
          "Ownable",
          "Context"
        ],
        "libraries": [
          "EnumerableSet",
          "EnumerableMap"
        ],
        "methods": [
          "()",
          "mint(uint256)",
          "presale(uint256,bytes32[])",
          "balanceOfOwner(address)",
          "mintToTeam(address,uint256)",
          "setSaleActive()",
          "set2ndSaleActive()",
          "setFinalSaleActive()",
          "setMerkleRoot(bytes32)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "DreadfulzNFT",
            "src": "contracts/DreadfulzNFT.sol:48"
          },
          {
            "kind": "state-variable-assignment",
            "name": "merkleRoot",
            "src": "contracts/DreadfulzNFT.sol:22"
          },
          {
            "kind": "state-variable-assignment",
            "name": "isSaleActive",
            "src": "contracts/DreadfulzNFT.sol:26"
          },
          {
            "kind": "state-variable-assignment",
            "name": "is2ndSaleActive",
            "src": "contracts/DreadfulzNFT.sol:27"
          },
          {
            "kind": "state-variable-assignment",
            "name": "isFinalSaleActive",
            "src": "contracts/DreadfulzNFT.sol:28"
          },
          {
            "kind": "state-variable-assignment",
            "name": "RESERVED_AMOUNT",
            "src": "contracts/DreadfulzNFT.sol:30"
          },
          {
            "kind": "state-variable-assignment",
            "name": "FIRST_SALE_AMOUNT",
            "src": "contracts/DreadfulzNFT.sol:31"
          },
          {
            "kind": "state-variable-assignment",
            "name": "SECOND_SALE_AMOUNT",
            "src": "contracts/DreadfulzNFT.sol:32"
          },
          {
            "kind": "state-variable-assignment",
            "name": "FINAL_SALE_AMOUNT",
            "src": "contracts/DreadfulzNFT.sol:33"
          },
          {
            "kind": "state-variable-assignment",
            "name": "PRESALE_PRICE",
            "src": "contracts/DreadfulzNFT.sol:35"
          },
          {
            "kind": "state-variable-assignment",
            "name": "FIRST_SALE_PRICE",
            "src": "contracts/DreadfulzNFT.sol:36"
          },
          {
            "kind": "state-variable-assignment",
            "name": "SECOND_SALE_PRICE",
            "src": "contracts/DreadfulzNFT.sol:37"
          },
          {
            "kind": "state-variable-assignment",
            "name": "FINAL_SALE_PRICE",
            "src": "contracts/DreadfulzNFT.sol:38"
          },
          {
            "kind": "state-variable-assignment",
            "name": "DEV_WALLET",
            "src": "contracts/DreadfulzNFT.sol:40"
          },
          {
            "kind": "state-variable-assignment",
            "name": "MARKETING_WALLET",
            "src": "contracts/DreadfulzNFT.sol:41"
          },
          {
            "kind": "state-variable-assignment",
            "name": "payees",
            "src": "contracts/DreadfulzNFT.sol:43"
          },
          {
            "kind": "state-variable-assignment",
            "name": "shares",
            "src": "contracts/DreadfulzNFT.sol:44"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "DreadfulzNFT",
              "label": "_holderTokens",
              "type": "t_mapping(t_address,t_struct(UintSet)2986_storage)",
              "src": "contracts/DreadfulzNFT.sol:17"
            },
            {
              "contract": "DreadfulzNFT",
              "label": "_tokenOwners",
              "type": "t_struct(UintToAddressMap)2283_storage",
              "src": "contracts/DreadfulzNFT.sol:20"
            },
            {
              "contract": "DreadfulzNFT",
              "label": "merkleRoot",
              "type": "t_bytes32",
              "src": "contracts/DreadfulzNFT.sol:22"
            },
            {
              "contract": "DreadfulzNFT",
              "label": "whitelistClaimed",
              "type": "t_mapping(t_address,t_bool)",
              "src": "contracts/DreadfulzNFT.sol:24"
            },
            {
              "contract": "DreadfulzNFT",
              "label": "isSaleActive",
              "type": "t_bool",
              "src": "contracts/DreadfulzNFT.sol:26"
            },
            {
              "contract": "DreadfulzNFT",
              "label": "is2ndSaleActive",
              "type": "t_bool",
              "src": "contracts/DreadfulzNFT.sol:27"
            },
            {
              "contract": "DreadfulzNFT",
              "label": "isFinalSaleActive",
              "type": "t_bool",
              "src": "contracts/DreadfulzNFT.sol:28"
            },
            {
              "contract": "DreadfulzNFT",
              "label": "RESERVED_AMOUNT",
              "type": "t_uint256",
              "src": "contracts/DreadfulzNFT.sol:30"
            },
            {
              "contract": "DreadfulzNFT",
              "label": "FIRST_SALE_AMOUNT",
              "type": "t_uint256",
              "src": "contracts/DreadfulzNFT.sol:31"
            },
            {
              "contract": "DreadfulzNFT",
              "label": "SECOND_SALE_AMOUNT",
              "type": "t_uint256",
              "src": "contracts/DreadfulzNFT.sol:32"
            },
            {
              "contract": "DreadfulzNFT",
              "label": "FINAL_SALE_AMOUNT",
              "type": "t_uint256",
              "src": "contracts/DreadfulzNFT.sol:33"
            },
            {
              "contract": "DreadfulzNFT",
              "label": "PRESALE_PRICE",
              "type": "t_uint256",
              "src": "contracts/DreadfulzNFT.sol:35"
            },
            {
              "contract": "DreadfulzNFT",
              "label": "FIRST_SALE_PRICE",
              "type": "t_uint256",
              "src": "contracts/DreadfulzNFT.sol:36"
            },
            {
              "contract": "DreadfulzNFT",
              "label": "SECOND_SALE_PRICE",
              "type": "t_uint256",
              "src": "contracts/DreadfulzNFT.sol:37"
            },
            {
              "contract": "DreadfulzNFT",
              "label": "FINAL_SALE_PRICE",
              "type": "t_uint256",
              "src": "contracts/DreadfulzNFT.sol:38"
            },
            {
              "contract": "DreadfulzNFT",
              "label": "DEV_WALLET",
              "type": "t_address_payable",
              "src": "contracts/DreadfulzNFT.sol:40"
            },
            {
              "contract": "DreadfulzNFT",
              "label": "MARKETING_WALLET",
              "type": "t_address_payable",
              "src": "contracts/DreadfulzNFT.sol:41"
            },
            {
              "contract": "DreadfulzNFT",
              "label": "payees",
              "type": "t_array(t_address)dyn_storage",
              "src": "contracts/DreadfulzNFT.sol:43"
            },
            {
              "contract": "DreadfulzNFT",
              "label": "shares",
              "type": "t_array(t_uint256)dyn_storage",
              "src": "contracts/DreadfulzNFT.sol:44"
            }
          ],
          "types": {
            "t_mapping(t_address,t_struct(UintSet)2986_storage)": {
              "label": "mapping(address => struct EnumerableSet.UintSet)"
            },
            "t_address": {
              "label": "address"
            },
            "t_struct(UintSet)2986_storage": {
              "label": "struct EnumerableSet.UintSet",
              "members": [
                {
                  "label": "_inner",
                  "type": "t_struct(Set)2528_storage"
                }
              ]
            },
            "t_struct(Set)2528_storage": {
              "label": "struct EnumerableSet.Set",
              "members": [
                {
                  "label": "_values",
                  "type": "t_array(t_bytes32)dyn_storage"
                },
                {
                  "label": "_indexes",
                  "type": "t_mapping(t_bytes32,t_uint256)"
                }
              ]
            },
            "t_array(t_bytes32)dyn_storage": {
              "label": "bytes32[]"
            },
            "t_bytes32": {
              "label": "bytes32"
            },
            "t_mapping(t_bytes32,t_uint256)": {
              "label": "mapping(bytes32 => uint256)"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_struct(UintToAddressMap)2283_storage": {
              "label": "struct EnumerableMap.UintToAddressMap",
              "members": [
                {
                  "label": "_inner",
                  "type": "t_struct(Map)2053_storage"
                }
              ]
            },
            "t_struct(Map)2053_storage": {
              "label": "struct EnumerableMap.Map",
              "members": [
                {
                  "label": "_keys",
                  "type": "t_struct(Bytes32Set)2722_storage"
                },
                {
                  "label": "_values",
                  "type": "t_mapping(t_bytes32,t_bytes32)"
                }
              ]
            },
            "t_struct(Bytes32Set)2722_storage": {
              "label": "struct EnumerableSet.Bytes32Set",
              "members": [
                {
                  "label": "_inner",
                  "type": "t_struct(Set)2528_storage"
                }
              ]
            },
            "t_mapping(t_bytes32,t_bytes32)": {
              "label": "mapping(bytes32 => bytes32)"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_address_payable": {
              "label": "address payable"
            },
            "t_array(t_address)dyn_storage": {
              "label": "address[]"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "DreadfulzStaking": {
        "src": "contracts/DreadfulzStaking.sol:17",
        "version": {
          "withMetadata": "8fb8baedc10cd6ecf77190e1773f70dc5c44dead46335f6ba11c4b97891e3855",
          "withoutMetadata": "2c7697bb44406bda1c59c4fcaa4e6d54b427fd0608ceb0c5b793659e3517c87e",
          "linkedWithoutMetadata": "2c7697bb44406bda1c59c4fcaa4e6d54b427fd0608ceb0c5b793659e3517c87e"
        },
        "inherit": [
          "Ownable",
          "Context"
        ],
        "libraries": [
          "SafeMath"
        ],
        "methods": [
          "(address,address)",
          "setTokensClaimable(bool)",
          "getStakedTokens(address)",
          "stake(uint256)",
          "stakeBatch(uint256[])",
          "stakeAll()",
          "unstake(uint256)",
          "unstakeBatch(uint256[])",
          "emergencyUnstake(uint256)",
          "updateReward(address)",
          "rewardsOwing(address)",
          "claimReward(address)",
          "unclaimedRewards(address)",
          "onERC721Received(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "DreadfulzStaking",
            "src": "contracts/DreadfulzStaking.sol:66"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "DreadfulzStaking",
              "label": "rewardsToken",
              "type": "t_contract(IERC20)663",
              "src": "contracts/DreadfulzStaking.sol:21"
            },
            {
              "contract": "DreadfulzStaking",
              "label": "dreadfulzNFT",
              "type": "t_contract(DreadfulzNFT)3576",
              "src": "contracts/DreadfulzStaking.sol:22"
            },
            {
              "contract": "DreadfulzStaking",
              "label": "rewardsPerTokenPoints",
              "type": "t_uint256",
              "src": "contracts/DreadfulzStaking.sol:24"
            },
            {
              "contract": "DreadfulzStaking",
              "label": "totalUnclaimedRewards",
              "type": "t_uint256",
              "src": "contracts/DreadfulzStaking.sol:25"
            },
            {
              "contract": "DreadfulzStaking",
              "label": "stakers",
              "type": "t_mapping(t_address,t_struct(Staker)3615_storage)",
              "src": "contracts/DreadfulzStaking.sol:42"
            },
            {
              "contract": "DreadfulzStaking",
              "label": "tokenOwner",
              "type": "t_mapping(t_uint256,t_address)",
              "src": "contracts/DreadfulzStaking.sol:45"
            },
            {
              "contract": "DreadfulzStaking",
              "label": "tokensClaimable",
              "type": "t_bool",
              "src": "contracts/DreadfulzStaking.sol:48"
            },
            {
              "contract": "DreadfulzStaking",
              "label": "initialised",
              "type": "t_bool",
              "src": "contracts/DreadfulzStaking.sol:49"
            }
          ],
          "types": {
            "t_contract(IERC20)663": {
              "label": "contract IERC20"
            },
            "t_contract(DreadfulzNFT)3576": {
              "label": "contract DreadfulzNFT"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_struct(Staker)3615_storage)": {
              "label": "mapping(address => struct DreadfulzStaking.Staker)"
            },
            "t_address": {
              "label": "address"
            },
            "t_struct(Staker)3615_storage": {
              "label": "struct DreadfulzStaking.Staker",
              "members": [
                {
                  "label": "tokenIds",
                  "type": "t_array(t_uint256)dyn_storage"
                },
                {
                  "label": "tokenIndex",
                  "type": "t_mapping(t_uint256,t_uint256)"
                },
                {
                  "label": "lastRewardPoints",
                  "type": "t_uint256"
                },
                {
                  "label": "rewardsEarned",
                  "type": "t_uint256"
                },
                {
                  "label": "rewardsReleased",
                  "type": "t_uint256"
                }
              ]
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]"
            },
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)"
            },
            "t_bool": {
              "label": "bool"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC721A": {
        "src": "erc721a/contracts/ERC721A.sol:23",
        "version": {
          "withMetadata": "d90e8953f63fb7e09b553fb57c484f25b64a2b502bb9adf41ef329e5f28fad0c",
          "withoutMetadata": "b46845ce757cb59201ed5980ba1e238b1af2a42363b8f4b5a07b70d5394d3bf0",
          "linkedWithoutMetadata": "b46845ce757cb59201ed5980ba1e238b1af2a42363b8f4b5a07b70d5394d3bf0"
        },
        "inherit": [
          "IERC721Enumerable",
          "IERC721Metadata",
          "IERC721",
          "ERC165",
          "IERC165",
          "Context"
        ],
        "libraries": [
          "Address",
          "Strings"
        ],
        "methods": [
          "(string,string,uint256)",
          "totalSupply()",
          "tokenByIndex(uint256)",
          "tokenOfOwnerByIndex(address,uint256)",
          "supportsInterface(bytes4)",
          "balanceOf(address)",
          "ownerOf(uint256)",
          "name()",
          "symbol()",
          "tokenURI(uint256)",
          "approve(address,uint256)",
          "getApproved(uint256)",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "transferFrom(address,address,uint256)",
          "safeTransferFrom(address,address,uint256)",
          "safeTransferFrom(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC721A",
            "src": "erc721a/contracts/ERC721A.sol:64"
          },
          {
            "kind": "state-variable-assignment",
            "name": "currentIndex",
            "src": "erc721a/contracts/ERC721A.sol:37"
          },
          {
            "kind": "state-variable-immutable",
            "name": "maxBatchSize",
            "src": "erc721a/contracts/ERC721A.sol:39"
          },
          {
            "kind": "state-variable-assignment",
            "name": "nextOwnerToExplicitlySet",
            "src": "erc721a/contracts/ERC721A.sol:398"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ERC721A",
              "label": "currentIndex",
              "type": "t_uint256",
              "src": "erc721a/contracts/ERC721A.sol:37"
            },
            {
              "contract": "ERC721A",
              "label": "_name",
              "type": "t_string_storage",
              "src": "erc721a/contracts/ERC721A.sol:42"
            },
            {
              "contract": "ERC721A",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "erc721a/contracts/ERC721A.sol:45"
            },
            {
              "contract": "ERC721A",
              "label": "_ownerships",
              "type": "t_mapping(t_uint256,t_struct(TokenOwnership)4297_storage)",
              "src": "erc721a/contracts/ERC721A.sol:49"
            },
            {
              "contract": "ERC721A",
              "label": "_addressData",
              "type": "t_mapping(t_address,t_struct(AddressData)4302_storage)",
              "src": "erc721a/contracts/ERC721A.sol:52"
            },
            {
              "contract": "ERC721A",
              "label": "_tokenApprovals",
              "type": "t_mapping(t_uint256,t_address)",
              "src": "erc721a/contracts/ERC721A.sol:55"
            },
            {
              "contract": "ERC721A",
              "label": "_operatorApprovals",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "src": "erc721a/contracts/ERC721A.sol:58"
            },
            {
              "contract": "ERC721A",
              "label": "nextOwnerToExplicitlySet",
              "type": "t_uint256",
              "src": "erc721a/contracts/ERC721A.sol:398"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_mapping(t_uint256,t_struct(TokenOwnership)4297_storage)": {
              "label": "mapping(uint256 => struct ERC721A.TokenOwnership)"
            },
            "t_struct(TokenOwnership)4297_storage": {
              "label": "struct ERC721A.TokenOwnership",
              "members": [
                {
                  "label": "addr",
                  "type": "t_address"
                },
                {
                  "label": "startTimestamp",
                  "type": "t_uint64"
                }
              ]
            },
            "t_address": {
              "label": "address"
            },
            "t_uint64": {
              "label": "uint64"
            },
            "t_mapping(t_address,t_struct(AddressData)4302_storage)": {
              "label": "mapping(address => struct ERC721A.AddressData)"
            },
            "t_struct(AddressData)4302_storage": {
              "label": "struct ERC721A.AddressData",
              "members": [
                {
                  "label": "balance",
                  "type": "t_uint128"
                },
                {
                  "label": "numberMinted",
                  "type": "t_uint128"
                }
              ]
            },
            "t_uint128": {
              "label": "uint128"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_bool": {
              "label": "bool"
            }
          },
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "Ownable": {
        "src": "@openzeppelin/contracts/access/Ownable.sol:20",
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin/contracts/access/Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "Ownable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "PaymentSplitter": {
        "src": "@openzeppelin/contracts/finance/PaymentSplitter.sol:27",
        "version": {
          "withMetadata": "7ca80aa715b481cb550ce3949750475a418af4045c653fe6bed689f443f26bfb",
          "withoutMetadata": "a4e026d1eefdf675d63e6c33090429de6d5c3dc870d8924a7112b284573f6a31",
          "linkedWithoutMetadata": "a4e026d1eefdf675d63e6c33090429de6d5c3dc870d8924a7112b284573f6a31"
        },
        "inherit": [
          "Context"
        ],
        "libraries": [
          "Address",
          "SafeERC20"
        ],
        "methods": [
          "(address[],uint256[])",
          "()",
          "totalShares()",
          "totalReleased()",
          "totalReleased(address)",
          "shares(address)",
          "released(address)",
          "released(address,address)",
          "payee(uint256)",
          "release(address payable)",
          "release(address,address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "PaymentSplitter",
            "src": "@openzeppelin/contracts/finance/PaymentSplitter.sol:50"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "PaymentSplitter",
              "label": "_totalShares",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts/finance/PaymentSplitter.sol:33"
            },
            {
              "contract": "PaymentSplitter",
              "label": "_totalReleased",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts/finance/PaymentSplitter.sol:34"
            },
            {
              "contract": "PaymentSplitter",
              "label": "_shares",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin/contracts/finance/PaymentSplitter.sol:36"
            },
            {
              "contract": "PaymentSplitter",
              "label": "_released",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin/contracts/finance/PaymentSplitter.sol:37"
            },
            {
              "contract": "PaymentSplitter",
              "label": "_payees",
              "type": "t_array(t_address)dyn_storage",
              "src": "@openzeppelin/contracts/finance/PaymentSplitter.sol:38"
            },
            {
              "contract": "PaymentSplitter",
              "label": "_erc20TotalReleased",
              "type": "t_mapping(t_contract(IERC20)663,t_uint256)",
              "src": "@openzeppelin/contracts/finance/PaymentSplitter.sol:40"
            },
            {
              "contract": "PaymentSplitter",
              "label": "_erc20Released",
              "type": "t_mapping(t_contract(IERC20)663,t_mapping(t_address,t_uint256))",
              "src": "@openzeppelin/contracts/finance/PaymentSplitter.sol:41"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_array(t_address)dyn_storage": {
              "label": "address[]"
            },
            "t_mapping(t_contract(IERC20)663,t_uint256)": {
              "label": "mapping(contract IERC20 => uint256)"
            },
            "t_contract(IERC20)663": {
              "label": "contract IERC20"
            },
            "t_mapping(t_contract(IERC20)663,t_mapping(t_address,t_uint256))": {
              "label": "mapping(contract IERC20 => mapping(address => uint256))"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ReentrancyGuard": {
        "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:22",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReentrancyGuard",
            "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:39"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ReentrancyGuard",
              "label": "_status",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:37"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "SafeERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:18",
        "version": {
          "withMetadata": "56f3b47fe199a74f30abd43f547fa939c88066448b04cd5f17bdafbe2e03804a",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "Address"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC721": {
        "src": "@openzeppelin/contracts/token/ERC721/IERC721.sol:11",
        "inherit": [
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "balanceOf(address)",
          "ownerOf(uint256)",
          "safeTransferFrom(address,address,uint256)",
          "transferFrom(address,address,uint256)",
          "approve(address,uint256)",
          "getApproved(uint256)",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "safeTransferFrom(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC721Receiver": {
        "src": "@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol:11",
        "inherit": [],
        "libraries": [],
        "methods": [
          "onERC721Received(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC721Enumerable": {
        "src": "@openzeppelin/contracts/token/ERC721/extensions/IERC721Enumerable.sol:12",
        "inherit": [
          "IERC721",
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "tokenOfOwnerByIndex(address,uint256)",
          "tokenByIndex(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC721Metadata": {
        "src": "@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol:12",
        "inherit": [
          "IERC721",
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "tokenURI(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Address": {
        "src": "@openzeppelin/contracts/utils/Address.sol:9",
        "version": {
          "withMetadata": "484d2cade7f176ca5050f1f249737dd81ac6ed00490f5099f09054c1bc596b67",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:186"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Strings": {
        "src": "@openzeppelin/contracts/utils/Strings.sol:9",
        "version": {
          "withMetadata": "b16d77140251bcd9725701aa6d1902c15605c3749a720b7aac593644f6c217ac",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "MerkleProof": {
        "src": "@openzeppelin/contracts/utils/cryptography/MerkleProof.sol:15",
        "version": {
          "withMetadata": "eae9c389bfc7a3fccc9b1be4ba129d982448e261280aa30913fa3d7bc9f5440f",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC165": {
        "src": "@openzeppelin/contracts/utils/introspection/ERC165.sol:22",
        "inherit": [
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC165": {
        "src": "@openzeppelin/contracts/utils/introspection/IERC165.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "SafeMath": {
        "src": "@openzeppelin/contracts/utils/math/SafeMath.sol:16",
        "version": {
          "withMetadata": "8418487e012b6d36d0f064d32c31976a5cbfce3373a77c05261a0ae367939886",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "EnumerableMap": {
        "src": "@openzeppelin/contracts/utils/structs/EnumerableMap.sol:32",
        "version": {
          "withMetadata": "eb2563fd64638723253d815b920b9bdd7ba216c3415fd72b3339b5602807aab3",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "EnumerableSet"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "EnumerableSet": {
        "src": "@openzeppelin/contracts/utils/structs/EnumerableSet.sol:30",
        "version": {
          "withMetadata": "6ee35d052c3beaf7db7a043d937ed616f73a3d6a147dd22fd5b78a58e78e8277",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "DreadfulzNFT": {
        "src": "contracts/DreadfulzNFT.sol:12",
        "version": {
          "withMetadata": "25528828f5a469fab20f2de9c811e1767869297564bf035fbbe11bdb37527010",
          "withoutMetadata": "517b041dc88c601e1a72216d689922769c58ad221c5c898ccf4a1fe6208b799d",
          "linkedWithoutMetadata": "517b041dc88c601e1a72216d689922769c58ad221c5c898ccf4a1fe6208b799d"
        },
        "inherit": [
          "PaymentSplitter",
          "ERC721A",
          "IERC721Enumerable",
          "IERC721Metadata",
          "IERC721",
          "ERC165",
          "IERC165",
          "ReentrancyGuard",
          "Ownable",
          "Context"
        ],
        "libraries": [
          "EnumerableSet",
          "EnumerableMap"
        ],
        "methods": [
          "()",
          "mint(uint256)",
          "presale(uint256,bytes32[])",
          "balanceOfOwner(address)",
          "mintToTeam(address,uint256)",
          "setSaleActive()",
          "set2ndSaleActive()",
          "setFinalSaleActive()",
          "setMerkleRoot(bytes32)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "DreadfulzNFT",
            "src": "contracts/DreadfulzNFT.sol:48"
          },
          {
            "kind": "state-variable-assignment",
            "name": "merkleRoot",
            "src": "contracts/DreadfulzNFT.sol:22"
          },
          {
            "kind": "state-variable-assignment",
            "name": "isSaleActive",
            "src": "contracts/DreadfulzNFT.sol:26"
          },
          {
            "kind": "state-variable-assignment",
            "name": "is2ndSaleActive",
            "src": "contracts/DreadfulzNFT.sol:27"
          },
          {
            "kind": "state-variable-assignment",
            "name": "isFinalSaleActive",
            "src": "contracts/DreadfulzNFT.sol:28"
          },
          {
            "kind": "state-variable-assignment",
            "name": "RESERVED_AMOUNT",
            "src": "contracts/DreadfulzNFT.sol:30"
          },
          {
            "kind": "state-variable-assignment",
            "name": "FIRST_SALE_AMOUNT",
            "src": "contracts/DreadfulzNFT.sol:31"
          },
          {
            "kind": "state-variable-assignment",
            "name": "SECOND_SALE_AMOUNT",
            "src": "contracts/DreadfulzNFT.sol:32"
          },
          {
            "kind": "state-variable-assignment",
            "name": "FINAL_SALE_AMOUNT",
            "src": "contracts/DreadfulzNFT.sol:33"
          },
          {
            "kind": "state-variable-assignment",
            "name": "PRESALE_PRICE",
            "src": "contracts/DreadfulzNFT.sol:35"
          },
          {
            "kind": "state-variable-assignment",
            "name": "FIRST_SALE_PRICE",
            "src": "contracts/DreadfulzNFT.sol:36"
          },
          {
            "kind": "state-variable-assignment",
            "name": "SECOND_SALE_PRICE",
            "src": "contracts/DreadfulzNFT.sol:37"
          },
          {
            "kind": "state-variable-assignment",
            "name": "FINAL_SALE_PRICE",
            "src": "contracts/DreadfulzNFT.sol:38"
          },
          {
            "kind": "state-variable-assignment",
            "name": "DEV_WALLET",
            "src": "contracts/DreadfulzNFT.sol:40"
          },
          {
            "kind": "state-variable-assignment",
            "name": "MARKETING_WALLET",
            "src": "contracts/DreadfulzNFT.sol:41"
          },
          {
            "kind": "state-variable-assignment",
            "name": "payees",
            "src": "contracts/DreadfulzNFT.sol:43"
          },
          {
            "kind": "state-variable-assignment",
            "name": "shares",
            "src": "contracts/DreadfulzNFT.sol:44"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "DreadfulzNFT",
              "label": "_holderTokens",
              "type": "t_mapping(t_address,t_struct(UintSet)2986_storage)",
              "src": "contracts/DreadfulzNFT.sol:17"
            },
            {
              "contract": "DreadfulzNFT",
              "label": "_tokenOwners",
              "type": "t_struct(UintToAddressMap)2283_storage",
              "src": "contracts/DreadfulzNFT.sol:20"
            },
            {
              "contract": "DreadfulzNFT",
              "label": "merkleRoot",
              "type": "t_bytes32",
              "src": "contracts/DreadfulzNFT.sol:22"
            },
            {
              "contract": "DreadfulzNFT",
              "label": "whitelistClaimed",
              "type": "t_mapping(t_address,t_bool)",
              "src": "contracts/DreadfulzNFT.sol:24"
            },
            {
              "contract": "DreadfulzNFT",
              "label": "isSaleActive",
              "type": "t_bool",
              "src": "contracts/DreadfulzNFT.sol:26"
            },
            {
              "contract": "DreadfulzNFT",
              "label": "is2ndSaleActive",
              "type": "t_bool",
              "src": "contracts/DreadfulzNFT.sol:27"
            },
            {
              "contract": "DreadfulzNFT",
              "label": "isFinalSaleActive",
              "type": "t_bool",
              "src": "contracts/DreadfulzNFT.sol:28"
            },
            {
              "contract": "DreadfulzNFT",
              "label": "RESERVED_AMOUNT",
              "type": "t_uint256",
              "src": "contracts/DreadfulzNFT.sol:30"
            },
            {
              "contract": "DreadfulzNFT",
              "label": "FIRST_SALE_AMOUNT",
              "type": "t_uint256",
              "src": "contracts/DreadfulzNFT.sol:31"
            },
            {
              "contract": "DreadfulzNFT",
              "label": "SECOND_SALE_AMOUNT",
              "type": "t_uint256",
              "src": "contracts/DreadfulzNFT.sol:32"
            },
            {
              "contract": "DreadfulzNFT",
              "label": "FINAL_SALE_AMOUNT",
              "type": "t_uint256",
              "src": "contracts/DreadfulzNFT.sol:33"
            },
            {
              "contract": "DreadfulzNFT",
              "label": "PRESALE_PRICE",
              "type": "t_uint256",
              "src": "contracts/DreadfulzNFT.sol:35"
            },
            {
              "contract": "DreadfulzNFT",
              "label": "FIRST_SALE_PRICE",
              "type": "t_uint256",
              "src": "contracts/DreadfulzNFT.sol:36"
            },
            {
              "contract": "DreadfulzNFT",
              "label": "SECOND_SALE_PRICE",
              "type": "t_uint256",
              "src": "contracts/DreadfulzNFT.sol:37"
            },
            {
              "contract": "DreadfulzNFT",
              "label": "FINAL_SALE_PRICE",
              "type": "t_uint256",
              "src": "contracts/DreadfulzNFT.sol:38"
            },
            {
              "contract": "DreadfulzNFT",
              "label": "DEV_WALLET",
              "type": "t_address_payable",
              "src": "contracts/DreadfulzNFT.sol:40"
            },
            {
              "contract": "DreadfulzNFT",
              "label": "MARKETING_WALLET",
              "type": "t_address_payable",
              "src": "contracts/DreadfulzNFT.sol:41"
            },
            {
              "contract": "DreadfulzNFT",
              "label": "payees",
              "type": "t_array(t_address)dyn_storage",
              "src": "contracts/DreadfulzNFT.sol:43"
            },
            {
              "contract": "DreadfulzNFT",
              "label": "shares",
              "type": "t_array(t_uint256)dyn_storage",
              "src": "contracts/DreadfulzNFT.sol:44"
            }
          ],
          "types": {
            "t_mapping(t_address,t_struct(UintSet)2986_storage)": {
              "label": "mapping(address => struct EnumerableSet.UintSet)"
            },
            "t_address": {
              "label": "address"
            },
            "t_struct(UintSet)2986_storage": {
              "label": "struct EnumerableSet.UintSet",
              "members": [
                {
                  "label": "_inner",
                  "type": "t_struct(Set)2528_storage"
                }
              ]
            },
            "t_struct(Set)2528_storage": {
              "label": "struct EnumerableSet.Set",
              "members": [
                {
                  "label": "_values",
                  "type": "t_array(t_bytes32)dyn_storage"
                },
                {
                  "label": "_indexes",
                  "type": "t_mapping(t_bytes32,t_uint256)"
                }
              ]
            },
            "t_array(t_bytes32)dyn_storage": {
              "label": "bytes32[]"
            },
            "t_bytes32": {
              "label": "bytes32"
            },
            "t_mapping(t_bytes32,t_uint256)": {
              "label": "mapping(bytes32 => uint256)"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_struct(UintToAddressMap)2283_storage": {
              "label": "struct EnumerableMap.UintToAddressMap",
              "members": [
                {
                  "label": "_inner",
                  "type": "t_struct(Map)2053_storage"
                }
              ]
            },
            "t_struct(Map)2053_storage": {
              "label": "struct EnumerableMap.Map",
              "members": [
                {
                  "label": "_keys",
                  "type": "t_struct(Bytes32Set)2722_storage"
                },
                {
                  "label": "_values",
                  "type": "t_mapping(t_bytes32,t_bytes32)"
                }
              ]
            },
            "t_struct(Bytes32Set)2722_storage": {
              "label": "struct EnumerableSet.Bytes32Set",
              "members": [
                {
                  "label": "_inner",
                  "type": "t_struct(Set)2528_storage"
                }
              ]
            },
            "t_mapping(t_bytes32,t_bytes32)": {
              "label": "mapping(bytes32 => bytes32)"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_address_payable": {
              "label": "address payable"
            },
            "t_array(t_address)dyn_storage": {
              "label": "address[]"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "DreadfulzStaking": {
        "src": "contracts/DreadfulzStaking.sol:17",
        "version": {
          "withMetadata": "eafd307abdf61dff55977d875d74a3685c6237a2ea4b37eff117d25242f517b4",
          "withoutMetadata": "2c7697bb44406bda1c59c4fcaa4e6d54b427fd0608ceb0c5b793659e3517c87e",
          "linkedWithoutMetadata": "2c7697bb44406bda1c59c4fcaa4e6d54b427fd0608ceb0c5b793659e3517c87e"
        },
        "inherit": [
          "Ownable",
          "Context"
        ],
        "libraries": [
          "SafeMath"
        ],
        "methods": [
          "(address,address)",
          "setTokensClaimable(bool)",
          "getStakedTokens(address)",
          "stake(uint256)",
          "stakeBatch(uint256[])",
          "stakeAll()",
          "unstake(uint256)",
          "unstakeBatch(uint256[])",
          "emergencyUnstake(uint256)",
          "updateReward(address)",
          "rewardsOwing(address)",
          "claimReward(address)",
          "unclaimedRewards(address)",
          "onERC721Received(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "DreadfulzStaking",
            "src": "contracts/DreadfulzStaking.sol:66"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "DreadfulzStaking",
              "label": "rewardsToken",
              "type": "t_contract(IERC20)663",
              "src": "contracts/DreadfulzStaking.sol:21"
            },
            {
              "contract": "DreadfulzStaking",
              "label": "dreadfulzNFT",
              "type": "t_contract(DreadfulzNFT)3570",
              "src": "contracts/DreadfulzStaking.sol:22"
            },
            {
              "contract": "DreadfulzStaking",
              "label": "rewardsPerTokenPoints",
              "type": "t_uint256",
              "src": "contracts/DreadfulzStaking.sol:24"
            },
            {
              "contract": "DreadfulzStaking",
              "label": "totalUnclaimedRewards",
              "type": "t_uint256",
              "src": "contracts/DreadfulzStaking.sol:25"
            },
            {
              "contract": "DreadfulzStaking",
              "label": "stakers",
              "type": "t_mapping(t_address,t_struct(Staker)3609_storage)",
              "src": "contracts/DreadfulzStaking.sol:42"
            },
            {
              "contract": "DreadfulzStaking",
              "label": "tokenOwner",
              "type": "t_mapping(t_uint256,t_address)",
              "src": "contracts/DreadfulzStaking.sol:45"
            },
            {
              "contract": "DreadfulzStaking",
              "label": "tokensClaimable",
              "type": "t_bool",
              "src": "contracts/DreadfulzStaking.sol:48"
            },
            {
              "contract": "DreadfulzStaking",
              "label": "initialised",
              "type": "t_bool",
              "src": "contracts/DreadfulzStaking.sol:49"
            }
          ],
          "types": {
            "t_contract(IERC20)663": {
              "label": "contract IERC20"
            },
            "t_contract(DreadfulzNFT)3570": {
              "label": "contract DreadfulzNFT"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_struct(Staker)3609_storage)": {
              "label": "mapping(address => struct DreadfulzStaking.Staker)"
            },
            "t_address": {
              "label": "address"
            },
            "t_struct(Staker)3609_storage": {
              "label": "struct DreadfulzStaking.Staker",
              "members": [
                {
                  "label": "tokenIds",
                  "type": "t_array(t_uint256)dyn_storage"
                },
                {
                  "label": "tokenIndex",
                  "type": "t_mapping(t_uint256,t_uint256)"
                },
                {
                  "label": "lastRewardPoints",
                  "type": "t_uint256"
                },
                {
                  "label": "rewardsEarned",
                  "type": "t_uint256"
                },
                {
                  "label": "rewardsReleased",
                  "type": "t_uint256"
                }
              ]
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]"
            },
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)"
            },
            "t_bool": {
              "label": "bool"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC721A": {
        "src": "erc721a/contracts/ERC721A.sol:23",
        "version": {
          "withMetadata": "d90e8953f63fb7e09b553fb57c484f25b64a2b502bb9adf41ef329e5f28fad0c",
          "withoutMetadata": "b46845ce757cb59201ed5980ba1e238b1af2a42363b8f4b5a07b70d5394d3bf0",
          "linkedWithoutMetadata": "b46845ce757cb59201ed5980ba1e238b1af2a42363b8f4b5a07b70d5394d3bf0"
        },
        "inherit": [
          "IERC721Enumerable",
          "IERC721Metadata",
          "IERC721",
          "ERC165",
          "IERC165",
          "Context"
        ],
        "libraries": [
          "Address",
          "Strings"
        ],
        "methods": [
          "(string,string,uint256)",
          "totalSupply()",
          "tokenByIndex(uint256)",
          "tokenOfOwnerByIndex(address,uint256)",
          "supportsInterface(bytes4)",
          "balanceOf(address)",
          "ownerOf(uint256)",
          "name()",
          "symbol()",
          "tokenURI(uint256)",
          "approve(address,uint256)",
          "getApproved(uint256)",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "transferFrom(address,address,uint256)",
          "safeTransferFrom(address,address,uint256)",
          "safeTransferFrom(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC721A",
            "src": "erc721a/contracts/ERC721A.sol:64"
          },
          {
            "kind": "state-variable-assignment",
            "name": "currentIndex",
            "src": "erc721a/contracts/ERC721A.sol:37"
          },
          {
            "kind": "state-variable-immutable",
            "name": "maxBatchSize",
            "src": "erc721a/contracts/ERC721A.sol:39"
          },
          {
            "kind": "state-variable-assignment",
            "name": "nextOwnerToExplicitlySet",
            "src": "erc721a/contracts/ERC721A.sol:398"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ERC721A",
              "label": "currentIndex",
              "type": "t_uint256",
              "src": "erc721a/contracts/ERC721A.sol:37"
            },
            {
              "contract": "ERC721A",
              "label": "_name",
              "type": "t_string_storage",
              "src": "erc721a/contracts/ERC721A.sol:42"
            },
            {
              "contract": "ERC721A",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "erc721a/contracts/ERC721A.sol:45"
            },
            {
              "contract": "ERC721A",
              "label": "_ownerships",
              "type": "t_mapping(t_uint256,t_struct(TokenOwnership)4291_storage)",
              "src": "erc721a/contracts/ERC721A.sol:49"
            },
            {
              "contract": "ERC721A",
              "label": "_addressData",
              "type": "t_mapping(t_address,t_struct(AddressData)4296_storage)",
              "src": "erc721a/contracts/ERC721A.sol:52"
            },
            {
              "contract": "ERC721A",
              "label": "_tokenApprovals",
              "type": "t_mapping(t_uint256,t_address)",
              "src": "erc721a/contracts/ERC721A.sol:55"
            },
            {
              "contract": "ERC721A",
              "label": "_operatorApprovals",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "src": "erc721a/contracts/ERC721A.sol:58"
            },
            {
              "contract": "ERC721A",
              "label": "nextOwnerToExplicitlySet",
              "type": "t_uint256",
              "src": "erc721a/contracts/ERC721A.sol:398"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_mapping(t_uint256,t_struct(TokenOwnership)4291_storage)": {
              "label": "mapping(uint256 => struct ERC721A.TokenOwnership)"
            },
            "t_struct(TokenOwnership)4291_storage": {
              "label": "struct ERC721A.TokenOwnership",
              "members": [
                {
                  "label": "addr",
                  "type": "t_address"
                },
                {
                  "label": "startTimestamp",
                  "type": "t_uint64"
                }
              ]
            },
            "t_address": {
              "label": "address"
            },
            "t_uint64": {
              "label": "uint64"
            },
            "t_mapping(t_address,t_struct(AddressData)4296_storage)": {
              "label": "mapping(address => struct ERC721A.AddressData)"
            },
            "t_struct(AddressData)4296_storage": {
              "label": "struct ERC721A.AddressData",
              "members": [
                {
                  "label": "balance",
                  "type": "t_uint128"
                },
                {
                  "label": "numberMinted",
                  "type": "t_uint128"
                }
              ]
            },
            "t_uint128": {
              "label": "uint128"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_bool": {
              "label": "bool"
            }
          },
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "Ownable": {
        "src": "@openzeppelin/contracts/access/Ownable.sol:20",
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin/contracts/access/Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "Ownable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "PaymentSplitter": {
        "src": "@openzeppelin/contracts/finance/PaymentSplitter.sol:27",
        "version": {
          "withMetadata": "7ca80aa715b481cb550ce3949750475a418af4045c653fe6bed689f443f26bfb",
          "withoutMetadata": "a4e026d1eefdf675d63e6c33090429de6d5c3dc870d8924a7112b284573f6a31",
          "linkedWithoutMetadata": "a4e026d1eefdf675d63e6c33090429de6d5c3dc870d8924a7112b284573f6a31"
        },
        "inherit": [
          "Context"
        ],
        "libraries": [
          "Address",
          "SafeERC20"
        ],
        "methods": [
          "(address[],uint256[])",
          "()",
          "totalShares()",
          "totalReleased()",
          "totalReleased(address)",
          "shares(address)",
          "released(address)",
          "released(address,address)",
          "payee(uint256)",
          "release(address payable)",
          "release(address,address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "PaymentSplitter",
            "src": "@openzeppelin/contracts/finance/PaymentSplitter.sol:50"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "PaymentSplitter",
              "label": "_totalShares",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts/finance/PaymentSplitter.sol:33"
            },
            {
              "contract": "PaymentSplitter",
              "label": "_totalReleased",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts/finance/PaymentSplitter.sol:34"
            },
            {
              "contract": "PaymentSplitter",
              "label": "_shares",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin/contracts/finance/PaymentSplitter.sol:36"
            },
            {
              "contract": "PaymentSplitter",
              "label": "_released",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin/contracts/finance/PaymentSplitter.sol:37"
            },
            {
              "contract": "PaymentSplitter",
              "label": "_payees",
              "type": "t_array(t_address)dyn_storage",
              "src": "@openzeppelin/contracts/finance/PaymentSplitter.sol:38"
            },
            {
              "contract": "PaymentSplitter",
              "label": "_erc20TotalReleased",
              "type": "t_mapping(t_contract(IERC20)663,t_uint256)",
              "src": "@openzeppelin/contracts/finance/PaymentSplitter.sol:40"
            },
            {
              "contract": "PaymentSplitter",
              "label": "_erc20Released",
              "type": "t_mapping(t_contract(IERC20)663,t_mapping(t_address,t_uint256))",
              "src": "@openzeppelin/contracts/finance/PaymentSplitter.sol:41"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_array(t_address)dyn_storage": {
              "label": "address[]"
            },
            "t_mapping(t_contract(IERC20)663,t_uint256)": {
              "label": "mapping(contract IERC20 => uint256)"
            },
            "t_contract(IERC20)663": {
              "label": "contract IERC20"
            },
            "t_mapping(t_contract(IERC20)663,t_mapping(t_address,t_uint256))": {
              "label": "mapping(contract IERC20 => mapping(address => uint256))"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ReentrancyGuard": {
        "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:22",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReentrancyGuard",
            "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:39"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ReentrancyGuard",
              "label": "_status",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:37"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "SafeERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:18",
        "version": {
          "withMetadata": "56f3b47fe199a74f30abd43f547fa939c88066448b04cd5f17bdafbe2e03804a",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "Address"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC721": {
        "src": "@openzeppelin/contracts/token/ERC721/IERC721.sol:11",
        "inherit": [
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "balanceOf(address)",
          "ownerOf(uint256)",
          "safeTransferFrom(address,address,uint256)",
          "transferFrom(address,address,uint256)",
          "approve(address,uint256)",
          "getApproved(uint256)",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "safeTransferFrom(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC721Receiver": {
        "src": "@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol:11",
        "inherit": [],
        "libraries": [],
        "methods": [
          "onERC721Received(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC721Enumerable": {
        "src": "@openzeppelin/contracts/token/ERC721/extensions/IERC721Enumerable.sol:12",
        "inherit": [
          "IERC721",
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "tokenOfOwnerByIndex(address,uint256)",
          "tokenByIndex(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC721Metadata": {
        "src": "@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol:12",
        "inherit": [
          "IERC721",
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "tokenURI(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Address": {
        "src": "@openzeppelin/contracts/utils/Address.sol:9",
        "version": {
          "withMetadata": "484d2cade7f176ca5050f1f249737dd81ac6ed00490f5099f09054c1bc596b67",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:186"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Strings": {
        "src": "@openzeppelin/contracts/utils/Strings.sol:9",
        "version": {
          "withMetadata": "b16d77140251bcd9725701aa6d1902c15605c3749a720b7aac593644f6c217ac",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "MerkleProof": {
        "src": "@openzeppelin/contracts/utils/cryptography/MerkleProof.sol:15",
        "version": {
          "withMetadata": "eae9c389bfc7a3fccc9b1be4ba129d982448e261280aa30913fa3d7bc9f5440f",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC165": {
        "src": "@openzeppelin/contracts/utils/introspection/ERC165.sol:22",
        "inherit": [
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC165": {
        "src": "@openzeppelin/contracts/utils/introspection/IERC165.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "SafeMath": {
        "src": "@openzeppelin/contracts/utils/math/SafeMath.sol:16",
        "version": {
          "withMetadata": "8418487e012b6d36d0f064d32c31976a5cbfce3373a77c05261a0ae367939886",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "EnumerableMap": {
        "src": "@openzeppelin/contracts/utils/structs/EnumerableMap.sol:32",
        "version": {
          "withMetadata": "eb2563fd64638723253d815b920b9bdd7ba216c3415fd72b3339b5602807aab3",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "EnumerableSet"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "EnumerableSet": {
        "src": "@openzeppelin/contracts/utils/structs/EnumerableSet.sol:30",
        "version": {
          "withMetadata": "6ee35d052c3beaf7db7a043d937ed616f73a3d6a147dd22fd5b78a58e78e8277",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "DreadfulzNFT": {
        "src": "contracts/DreadfulzNFT.sol:12",
        "version": {
          "withMetadata": "66f54eb1c200892ad6f424d2824fe3cf7dab61a61d811a5791dc631effa0dd10",
          "withoutMetadata": "8731eb70e8c2d4ece42f2c93d9ee0697d72d7cfa1e540b1e94a4b8feae9b7ebc",
          "linkedWithoutMetadata": "8731eb70e8c2d4ece42f2c93d9ee0697d72d7cfa1e540b1e94a4b8feae9b7ebc"
        },
        "inherit": [
          "PaymentSplitter",
          "ERC721A",
          "IERC721Enumerable",
          "IERC721Metadata",
          "IERC721",
          "ERC165",
          "IERC165",
          "ReentrancyGuard",
          "Ownable",
          "Context"
        ],
        "libraries": [
          "EnumerableSet",
          "EnumerableMap",
          "MerkleProof"
        ],
        "methods": [
          "()",
          "mint(uint256)",
          "presale(uint256,bytes32[])",
          "balanceOfOwner(address)",
          "mintToTeam(address,uint256)",
          "setSaleActive()",
          "set2ndSaleActive()",
          "setFinalSaleActive()",
          "setMerkleRoot(bytes32)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "DreadfulzNFT",
            "src": "contracts/DreadfulzNFT.sol:48"
          },
          {
            "kind": "state-variable-assignment",
            "name": "merkleRoot",
            "src": "contracts/DreadfulzNFT.sol:22"
          },
          {
            "kind": "state-variable-assignment",
            "name": "isSaleActive",
            "src": "contracts/DreadfulzNFT.sol:26"
          },
          {
            "kind": "state-variable-assignment",
            "name": "is2ndSaleActive",
            "src": "contracts/DreadfulzNFT.sol:27"
          },
          {
            "kind": "state-variable-assignment",
            "name": "isFinalSaleActive",
            "src": "contracts/DreadfulzNFT.sol:28"
          },
          {
            "kind": "state-variable-assignment",
            "name": "RESERVED_AMOUNT",
            "src": "contracts/DreadfulzNFT.sol:30"
          },
          {
            "kind": "state-variable-assignment",
            "name": "FIRST_SALE_AMOUNT",
            "src": "contracts/DreadfulzNFT.sol:31"
          },
          {
            "kind": "state-variable-assignment",
            "name": "SECOND_SALE_AMOUNT",
            "src": "contracts/DreadfulzNFT.sol:32"
          },
          {
            "kind": "state-variable-assignment",
            "name": "FINAL_SALE_AMOUNT",
            "src": "contracts/DreadfulzNFT.sol:33"
          },
          {
            "kind": "state-variable-assignment",
            "name": "PRESALE_PRICE",
            "src": "contracts/DreadfulzNFT.sol:35"
          },
          {
            "kind": "state-variable-assignment",
            "name": "FIRST_SALE_PRICE",
            "src": "contracts/DreadfulzNFT.sol:36"
          },
          {
            "kind": "state-variable-assignment",
            "name": "SECOND_SALE_PRICE",
            "src": "contracts/DreadfulzNFT.sol:37"
          },
          {
            "kind": "state-variable-assignment",
            "name": "FINAL_SALE_PRICE",
            "src": "contracts/DreadfulzNFT.sol:38"
          },
          {
            "kind": "state-variable-assignment",
            "name": "DEV_WALLET",
            "src": "contracts/DreadfulzNFT.sol:40"
          },
          {
            "kind": "state-variable-assignment",
            "name": "MARKETING_WALLET",
            "src": "contracts/DreadfulzNFT.sol:41"
          },
          {
            "kind": "state-variable-assignment",
            "name": "payees",
            "src": "contracts/DreadfulzNFT.sol:43"
          },
          {
            "kind": "state-variable-assignment",
            "name": "shares",
            "src": "contracts/DreadfulzNFT.sol:44"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "DreadfulzNFT",
              "label": "_holderTokens",
              "type": "t_mapping(t_address,t_struct(UintSet)2986_storage)",
              "src": "contracts/DreadfulzNFT.sol:17"
            },
            {
              "contract": "DreadfulzNFT",
              "label": "_tokenOwners",
              "type": "t_struct(UintToAddressMap)2283_storage",
              "src": "contracts/DreadfulzNFT.sol:20"
            },
            {
              "contract": "DreadfulzNFT",
              "label": "merkleRoot",
              "type": "t_bytes32",
              "src": "contracts/DreadfulzNFT.sol:22"
            },
            {
              "contract": "DreadfulzNFT",
              "label": "whitelistClaimed",
              "type": "t_mapping(t_address,t_bool)",
              "src": "contracts/DreadfulzNFT.sol:24"
            },
            {
              "contract": "DreadfulzNFT",
              "label": "isSaleActive",
              "type": "t_bool",
              "src": "contracts/DreadfulzNFT.sol:26"
            },
            {
              "contract": "DreadfulzNFT",
              "label": "is2ndSaleActive",
              "type": "t_bool",
              "src": "contracts/DreadfulzNFT.sol:27"
            },
            {
              "contract": "DreadfulzNFT",
              "label": "isFinalSaleActive",
              "type": "t_bool",
              "src": "contracts/DreadfulzNFT.sol:28"
            },
            {
              "contract": "DreadfulzNFT",
              "label": "RESERVED_AMOUNT",
              "type": "t_uint256",
              "src": "contracts/DreadfulzNFT.sol:30"
            },
            {
              "contract": "DreadfulzNFT",
              "label": "FIRST_SALE_AMOUNT",
              "type": "t_uint256",
              "src": "contracts/DreadfulzNFT.sol:31"
            },
            {
              "contract": "DreadfulzNFT",
              "label": "SECOND_SALE_AMOUNT",
              "type": "t_uint256",
              "src": "contracts/DreadfulzNFT.sol:32"
            },
            {
              "contract": "DreadfulzNFT",
              "label": "FINAL_SALE_AMOUNT",
              "type": "t_uint256",
              "src": "contracts/DreadfulzNFT.sol:33"
            },
            {
              "contract": "DreadfulzNFT",
              "label": "PRESALE_PRICE",
              "type": "t_uint256",
              "src": "contracts/DreadfulzNFT.sol:35"
            },
            {
              "contract": "DreadfulzNFT",
              "label": "FIRST_SALE_PRICE",
              "type": "t_uint256",
              "src": "contracts/DreadfulzNFT.sol:36"
            },
            {
              "contract": "DreadfulzNFT",
              "label": "SECOND_SALE_PRICE",
              "type": "t_uint256",
              "src": "contracts/DreadfulzNFT.sol:37"
            },
            {
              "contract": "DreadfulzNFT",
              "label": "FINAL_SALE_PRICE",
              "type": "t_uint256",
              "src": "contracts/DreadfulzNFT.sol:38"
            },
            {
              "contract": "DreadfulzNFT",
              "label": "DEV_WALLET",
              "type": "t_address_payable",
              "src": "contracts/DreadfulzNFT.sol:40"
            },
            {
              "contract": "DreadfulzNFT",
              "label": "MARKETING_WALLET",
              "type": "t_address_payable",
              "src": "contracts/DreadfulzNFT.sol:41"
            },
            {
              "contract": "DreadfulzNFT",
              "label": "payees",
              "type": "t_array(t_address)dyn_storage",
              "src": "contracts/DreadfulzNFT.sol:43"
            },
            {
              "contract": "DreadfulzNFT",
              "label": "shares",
              "type": "t_array(t_uint256)dyn_storage",
              "src": "contracts/DreadfulzNFT.sol:44"
            }
          ],
          "types": {
            "t_mapping(t_address,t_struct(UintSet)2986_storage)": {
              "label": "mapping(address => struct EnumerableSet.UintSet)"
            },
            "t_address": {
              "label": "address"
            },
            "t_struct(UintSet)2986_storage": {
              "label": "struct EnumerableSet.UintSet",
              "members": [
                {
                  "label": "_inner",
                  "type": "t_struct(Set)2528_storage"
                }
              ]
            },
            "t_struct(Set)2528_storage": {
              "label": "struct EnumerableSet.Set",
              "members": [
                {
                  "label": "_values",
                  "type": "t_array(t_bytes32)dyn_storage"
                },
                {
                  "label": "_indexes",
                  "type": "t_mapping(t_bytes32,t_uint256)"
                }
              ]
            },
            "t_array(t_bytes32)dyn_storage": {
              "label": "bytes32[]"
            },
            "t_bytes32": {
              "label": "bytes32"
            },
            "t_mapping(t_bytes32,t_uint256)": {
              "label": "mapping(bytes32 => uint256)"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_struct(UintToAddressMap)2283_storage": {
              "label": "struct EnumerableMap.UintToAddressMap",
              "members": [
                {
                  "label": "_inner",
                  "type": "t_struct(Map)2053_storage"
                }
              ]
            },
            "t_struct(Map)2053_storage": {
              "label": "struct EnumerableMap.Map",
              "members": [
                {
                  "label": "_keys",
                  "type": "t_struct(Bytes32Set)2722_storage"
                },
                {
                  "label": "_values",
                  "type": "t_mapping(t_bytes32,t_bytes32)"
                }
              ]
            },
            "t_struct(Bytes32Set)2722_storage": {
              "label": "struct EnumerableSet.Bytes32Set",
              "members": [
                {
                  "label": "_inner",
                  "type": "t_struct(Set)2528_storage"
                }
              ]
            },
            "t_mapping(t_bytes32,t_bytes32)": {
              "label": "mapping(bytes32 => bytes32)"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_address_payable": {
              "label": "address payable"
            },
            "t_array(t_address)dyn_storage": {
              "label": "address[]"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "DreadfulzStaking": {
        "src": "contracts/DreadfulzStaking.sol:17",
        "version": {
          "withMetadata": "b6d919cab6c4f94bb9c46a563e5869aab149598570d9cf95eb32cacbb5ce237e",
          "withoutMetadata": "2c7697bb44406bda1c59c4fcaa4e6d54b427fd0608ceb0c5b793659e3517c87e",
          "linkedWithoutMetadata": "2c7697bb44406bda1c59c4fcaa4e6d54b427fd0608ceb0c5b793659e3517c87e"
        },
        "inherit": [
          "Ownable",
          "Context"
        ],
        "libraries": [
          "SafeMath"
        ],
        "methods": [
          "(address,address)",
          "setTokensClaimable(bool)",
          "getStakedTokens(address)",
          "stake(uint256)",
          "stakeBatch(uint256[])",
          "stakeAll()",
          "unstake(uint256)",
          "unstakeBatch(uint256[])",
          "emergencyUnstake(uint256)",
          "updateReward(address)",
          "rewardsOwing(address)",
          "claimReward(address)",
          "unclaimedRewards(address)",
          "onERC721Received(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "DreadfulzStaking",
            "src": "contracts/DreadfulzStaking.sol:66"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "DreadfulzStaking",
              "label": "rewardsToken",
              "type": "t_contract(IERC20)663",
              "src": "contracts/DreadfulzStaking.sol:21"
            },
            {
              "contract": "DreadfulzStaking",
              "label": "dreadfulzNFT",
              "type": "t_contract(DreadfulzNFT)3580",
              "src": "contracts/DreadfulzStaking.sol:22"
            },
            {
              "contract": "DreadfulzStaking",
              "label": "rewardsPerTokenPoints",
              "type": "t_uint256",
              "src": "contracts/DreadfulzStaking.sol:24"
            },
            {
              "contract": "DreadfulzStaking",
              "label": "totalUnclaimedRewards",
              "type": "t_uint256",
              "src": "contracts/DreadfulzStaking.sol:25"
            },
            {
              "contract": "DreadfulzStaking",
              "label": "stakers",
              "type": "t_mapping(t_address,t_struct(Staker)3619_storage)",
              "src": "contracts/DreadfulzStaking.sol:42"
            },
            {
              "contract": "DreadfulzStaking",
              "label": "tokenOwner",
              "type": "t_mapping(t_uint256,t_address)",
              "src": "contracts/DreadfulzStaking.sol:45"
            },
            {
              "contract": "DreadfulzStaking",
              "label": "tokensClaimable",
              "type": "t_bool",
              "src": "contracts/DreadfulzStaking.sol:48"
            },
            {
              "contract": "DreadfulzStaking",
              "label": "initialised",
              "type": "t_bool",
              "src": "contracts/DreadfulzStaking.sol:49"
            }
          ],
          "types": {
            "t_contract(IERC20)663": {
              "label": "contract IERC20"
            },
            "t_contract(DreadfulzNFT)3580": {
              "label": "contract DreadfulzNFT"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_struct(Staker)3619_storage)": {
              "label": "mapping(address => struct DreadfulzStaking.Staker)"
            },
            "t_address": {
              "label": "address"
            },
            "t_struct(Staker)3619_storage": {
              "label": "struct DreadfulzStaking.Staker",
              "members": [
                {
                  "label": "tokenIds",
                  "type": "t_array(t_uint256)dyn_storage"
                },
                {
                  "label": "tokenIndex",
                  "type": "t_mapping(t_uint256,t_uint256)"
                },
                {
                  "label": "lastRewardPoints",
                  "type": "t_uint256"
                },
                {
                  "label": "rewardsEarned",
                  "type": "t_uint256"
                },
                {
                  "label": "rewardsReleased",
                  "type": "t_uint256"
                }
              ]
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]"
            },
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)"
            },
            "t_bool": {
              "label": "bool"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC721A": {
        "src": "erc721a/contracts/ERC721A.sol:23",
        "version": {
          "withMetadata": "d90e8953f63fb7e09b553fb57c484f25b64a2b502bb9adf41ef329e5f28fad0c",
          "withoutMetadata": "b46845ce757cb59201ed5980ba1e238b1af2a42363b8f4b5a07b70d5394d3bf0",
          "linkedWithoutMetadata": "b46845ce757cb59201ed5980ba1e238b1af2a42363b8f4b5a07b70d5394d3bf0"
        },
        "inherit": [
          "IERC721Enumerable",
          "IERC721Metadata",
          "IERC721",
          "ERC165",
          "IERC165",
          "Context"
        ],
        "libraries": [
          "Address",
          "Strings"
        ],
        "methods": [
          "(string,string,uint256)",
          "totalSupply()",
          "tokenByIndex(uint256)",
          "tokenOfOwnerByIndex(address,uint256)",
          "supportsInterface(bytes4)",
          "balanceOf(address)",
          "ownerOf(uint256)",
          "name()",
          "symbol()",
          "tokenURI(uint256)",
          "approve(address,uint256)",
          "getApproved(uint256)",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "transferFrom(address,address,uint256)",
          "safeTransferFrom(address,address,uint256)",
          "safeTransferFrom(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC721A",
            "src": "erc721a/contracts/ERC721A.sol:64"
          },
          {
            "kind": "state-variable-assignment",
            "name": "currentIndex",
            "src": "erc721a/contracts/ERC721A.sol:37"
          },
          {
            "kind": "state-variable-immutable",
            "name": "maxBatchSize",
            "src": "erc721a/contracts/ERC721A.sol:39"
          },
          {
            "kind": "state-variable-assignment",
            "name": "nextOwnerToExplicitlySet",
            "src": "erc721a/contracts/ERC721A.sol:398"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ERC721A",
              "label": "currentIndex",
              "type": "t_uint256",
              "src": "erc721a/contracts/ERC721A.sol:37"
            },
            {
              "contract": "ERC721A",
              "label": "_name",
              "type": "t_string_storage",
              "src": "erc721a/contracts/ERC721A.sol:42"
            },
            {
              "contract": "ERC721A",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "erc721a/contracts/ERC721A.sol:45"
            },
            {
              "contract": "ERC721A",
              "label": "_ownerships",
              "type": "t_mapping(t_uint256,t_struct(TokenOwnership)4301_storage)",
              "src": "erc721a/contracts/ERC721A.sol:49"
            },
            {
              "contract": "ERC721A",
              "label": "_addressData",
              "type": "t_mapping(t_address,t_struct(AddressData)4306_storage)",
              "src": "erc721a/contracts/ERC721A.sol:52"
            },
            {
              "contract": "ERC721A",
              "label": "_tokenApprovals",
              "type": "t_mapping(t_uint256,t_address)",
              "src": "erc721a/contracts/ERC721A.sol:55"
            },
            {
              "contract": "ERC721A",
              "label": "_operatorApprovals",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "src": "erc721a/contracts/ERC721A.sol:58"
            },
            {
              "contract": "ERC721A",
              "label": "nextOwnerToExplicitlySet",
              "type": "t_uint256",
              "src": "erc721a/contracts/ERC721A.sol:398"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_mapping(t_uint256,t_struct(TokenOwnership)4301_storage)": {
              "label": "mapping(uint256 => struct ERC721A.TokenOwnership)"
            },
            "t_struct(TokenOwnership)4301_storage": {
              "label": "struct ERC721A.TokenOwnership",
              "members": [
                {
                  "label": "addr",
                  "type": "t_address"
                },
                {
                  "label": "startTimestamp",
                  "type": "t_uint64"
                }
              ]
            },
            "t_address": {
              "label": "address"
            },
            "t_uint64": {
              "label": "uint64"
            },
            "t_mapping(t_address,t_struct(AddressData)4306_storage)": {
              "label": "mapping(address => struct ERC721A.AddressData)"
            },
            "t_struct(AddressData)4306_storage": {
              "label": "struct ERC721A.AddressData",
              "members": [
                {
                  "label": "balance",
                  "type": "t_uint128"
                },
                {
                  "label": "numberMinted",
                  "type": "t_uint128"
                }
              ]
            },
            "t_uint128": {
              "label": "uint128"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_bool": {
              "label": "bool"
            }
          },
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "Ownable": {
        "src": "@openzeppelin/contracts/access/Ownable.sol:20",
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin/contracts/access/Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "Ownable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "PaymentSplitter": {
        "src": "@openzeppelin/contracts/finance/PaymentSplitter.sol:27",
        "version": {
          "withMetadata": "7ca80aa715b481cb550ce3949750475a418af4045c653fe6bed689f443f26bfb",
          "withoutMetadata": "a4e026d1eefdf675d63e6c33090429de6d5c3dc870d8924a7112b284573f6a31",
          "linkedWithoutMetadata": "a4e026d1eefdf675d63e6c33090429de6d5c3dc870d8924a7112b284573f6a31"
        },
        "inherit": [
          "Context"
        ],
        "libraries": [
          "Address",
          "SafeERC20"
        ],
        "methods": [
          "(address[],uint256[])",
          "()",
          "totalShares()",
          "totalReleased()",
          "totalReleased(address)",
          "shares(address)",
          "released(address)",
          "released(address,address)",
          "payee(uint256)",
          "release(address payable)",
          "release(address,address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "PaymentSplitter",
            "src": "@openzeppelin/contracts/finance/PaymentSplitter.sol:50"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "PaymentSplitter",
              "label": "_totalShares",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts/finance/PaymentSplitter.sol:33"
            },
            {
              "contract": "PaymentSplitter",
              "label": "_totalReleased",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts/finance/PaymentSplitter.sol:34"
            },
            {
              "contract": "PaymentSplitter",
              "label": "_shares",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin/contracts/finance/PaymentSplitter.sol:36"
            },
            {
              "contract": "PaymentSplitter",
              "label": "_released",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin/contracts/finance/PaymentSplitter.sol:37"
            },
            {
              "contract": "PaymentSplitter",
              "label": "_payees",
              "type": "t_array(t_address)dyn_storage",
              "src": "@openzeppelin/contracts/finance/PaymentSplitter.sol:38"
            },
            {
              "contract": "PaymentSplitter",
              "label": "_erc20TotalReleased",
              "type": "t_mapping(t_contract(IERC20)663,t_uint256)",
              "src": "@openzeppelin/contracts/finance/PaymentSplitter.sol:40"
            },
            {
              "contract": "PaymentSplitter",
              "label": "_erc20Released",
              "type": "t_mapping(t_contract(IERC20)663,t_mapping(t_address,t_uint256))",
              "src": "@openzeppelin/contracts/finance/PaymentSplitter.sol:41"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_array(t_address)dyn_storage": {
              "label": "address[]"
            },
            "t_mapping(t_contract(IERC20)663,t_uint256)": {
              "label": "mapping(contract IERC20 => uint256)"
            },
            "t_contract(IERC20)663": {
              "label": "contract IERC20"
            },
            "t_mapping(t_contract(IERC20)663,t_mapping(t_address,t_uint256))": {
              "label": "mapping(contract IERC20 => mapping(address => uint256))"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ReentrancyGuard": {
        "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:22",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReentrancyGuard",
            "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:39"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ReentrancyGuard",
              "label": "_status",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:37"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "SafeERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:18",
        "version": {
          "withMetadata": "56f3b47fe199a74f30abd43f547fa939c88066448b04cd5f17bdafbe2e03804a",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "Address"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC721": {
        "src": "@openzeppelin/contracts/token/ERC721/IERC721.sol:11",
        "inherit": [
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "balanceOf(address)",
          "ownerOf(uint256)",
          "safeTransferFrom(address,address,uint256)",
          "transferFrom(address,address,uint256)",
          "approve(address,uint256)",
          "getApproved(uint256)",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "safeTransferFrom(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC721Receiver": {
        "src": "@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol:11",
        "inherit": [],
        "libraries": [],
        "methods": [
          "onERC721Received(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC721Enumerable": {
        "src": "@openzeppelin/contracts/token/ERC721/extensions/IERC721Enumerable.sol:12",
        "inherit": [
          "IERC721",
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "tokenOfOwnerByIndex(address,uint256)",
          "tokenByIndex(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC721Metadata": {
        "src": "@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol:12",
        "inherit": [
          "IERC721",
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "tokenURI(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Address": {
        "src": "@openzeppelin/contracts/utils/Address.sol:9",
        "version": {
          "withMetadata": "484d2cade7f176ca5050f1f249737dd81ac6ed00490f5099f09054c1bc596b67",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:186"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Strings": {
        "src": "@openzeppelin/contracts/utils/Strings.sol:9",
        "version": {
          "withMetadata": "b16d77140251bcd9725701aa6d1902c15605c3749a720b7aac593644f6c217ac",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "MerkleProof": {
        "src": "@openzeppelin/contracts/utils/cryptography/MerkleProof.sol:15",
        "version": {
          "withMetadata": "eae9c389bfc7a3fccc9b1be4ba129d982448e261280aa30913fa3d7bc9f5440f",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC165": {
        "src": "@openzeppelin/contracts/utils/introspection/ERC165.sol:22",
        "inherit": [
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC165": {
        "src": "@openzeppelin/contracts/utils/introspection/IERC165.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "SafeMath": {
        "src": "@openzeppelin/contracts/utils/math/SafeMath.sol:16",
        "version": {
          "withMetadata": "8418487e012b6d36d0f064d32c31976a5cbfce3373a77c05261a0ae367939886",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "EnumerableMap": {
        "src": "@openzeppelin/contracts/utils/structs/EnumerableMap.sol:32",
        "version": {
          "withMetadata": "eb2563fd64638723253d815b920b9bdd7ba216c3415fd72b3339b5602807aab3",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "EnumerableSet"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "EnumerableSet": {
        "src": "@openzeppelin/contracts/utils/structs/EnumerableSet.sol:30",
        "version": {
          "withMetadata": "6ee35d052c3beaf7db7a043d937ed616f73a3d6a147dd22fd5b78a58e78e8277",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "DreadfulzNFT": {
        "src": "contracts/DreadfulzNFT.sol:12",
        "version": {
          "withMetadata": "752d2b4541217f4ec1cced298a640ec8907dbec4f7b12a938a7f91ff90966540",
          "withoutMetadata": "42a43f837f61f1e7922747a701eb9184460fcd964651584c22873bc44b9fdd43",
          "linkedWithoutMetadata": "42a43f837f61f1e7922747a701eb9184460fcd964651584c22873bc44b9fdd43"
        },
        "inherit": [
          "PaymentSplitter",
          "ERC721A",
          "IERC721Enumerable",
          "IERC721Metadata",
          "IERC721",
          "ERC165",
          "IERC165",
          "ReentrancyGuard",
          "Ownable",
          "Context"
        ],
        "libraries": [
          "EnumerableSet",
          "EnumerableMap",
          "MerkleProof"
        ],
        "methods": [
          "()",
          "mint(uint256)",
          "presale(uint256,bytes32[])",
          "balanceOfOwner(address)",
          "mintToTeam(address,uint256)",
          "setSaleActive()",
          "set2ndSaleActive()",
          "setFinalSaleActive()",
          "setMerkleRoot(bytes32)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "DreadfulzNFT",
            "src": "contracts/DreadfulzNFT.sol:46"
          },
          {
            "kind": "state-variable-assignment",
            "name": "merkleRoot",
            "src": "contracts/DreadfulzNFT.sol:22"
          },
          {
            "kind": "state-variable-assignment",
            "name": "isSaleActive",
            "src": "contracts/DreadfulzNFT.sol:26"
          },
          {
            "kind": "state-variable-assignment",
            "name": "is2ndSaleActive",
            "src": "contracts/DreadfulzNFT.sol:27"
          },
          {
            "kind": "state-variable-assignment",
            "name": "isFinalSaleActive",
            "src": "contracts/DreadfulzNFT.sol:28"
          },
          {
            "kind": "state-variable-assignment",
            "name": "RESERVED_AMOUNT",
            "src": "contracts/DreadfulzNFT.sol:30"
          },
          {
            "kind": "state-variable-assignment",
            "name": "FIRST_SALE_AMOUNT",
            "src": "contracts/DreadfulzNFT.sol:31"
          },
          {
            "kind": "state-variable-assignment",
            "name": "SECOND_SALE_AMOUNT",
            "src": "contracts/DreadfulzNFT.sol:32"
          },
          {
            "kind": "state-variable-assignment",
            "name": "FINAL_SALE_AMOUNT",
            "src": "contracts/DreadfulzNFT.sol:33"
          },
          {
            "kind": "state-variable-assignment",
            "name": "PRESALE_PRICE",
            "src": "contracts/DreadfulzNFT.sol:35"
          },
          {
            "kind": "state-variable-assignment",
            "name": "FIRST_SALE_PRICE",
            "src": "contracts/DreadfulzNFT.sol:36"
          },
          {
            "kind": "state-variable-assignment",
            "name": "SECOND_SALE_PRICE",
            "src": "contracts/DreadfulzNFT.sol:37"
          },
          {
            "kind": "state-variable-assignment",
            "name": "FINAL_SALE_PRICE",
            "src": "contracts/DreadfulzNFT.sol:38"
          },
          {
            "kind": "state-variable-assignment",
            "name": "DEV_WALLET",
            "src": "contracts/DreadfulzNFT.sol:40"
          },
          {
            "kind": "state-variable-assignment",
            "name": "MARKETING_WALLET",
            "src": "contracts/DreadfulzNFT.sol:41"
          },
          {
            "kind": "state-variable-assignment",
            "name": "payees",
            "src": "contracts/DreadfulzNFT.sol:43"
          },
          {
            "kind": "state-variable-assignment",
            "name": "shares",
            "src": "contracts/DreadfulzNFT.sol:44"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "DreadfulzNFT",
              "label": "_holderTokens",
              "type": "t_mapping(t_address,t_struct(UintSet)2986_storage)",
              "src": "contracts/DreadfulzNFT.sol:17"
            },
            {
              "contract": "DreadfulzNFT",
              "label": "_tokenOwners",
              "type": "t_struct(UintToAddressMap)2283_storage",
              "src": "contracts/DreadfulzNFT.sol:20"
            },
            {
              "contract": "DreadfulzNFT",
              "label": "merkleRoot",
              "type": "t_bytes32",
              "src": "contracts/DreadfulzNFT.sol:22"
            },
            {
              "contract": "DreadfulzNFT",
              "label": "whitelistClaimed",
              "type": "t_mapping(t_address,t_bool)",
              "src": "contracts/DreadfulzNFT.sol:24"
            },
            {
              "contract": "DreadfulzNFT",
              "label": "isSaleActive",
              "type": "t_bool",
              "src": "contracts/DreadfulzNFT.sol:26"
            },
            {
              "contract": "DreadfulzNFT",
              "label": "is2ndSaleActive",
              "type": "t_bool",
              "src": "contracts/DreadfulzNFT.sol:27"
            },
            {
              "contract": "DreadfulzNFT",
              "label": "isFinalSaleActive",
              "type": "t_bool",
              "src": "contracts/DreadfulzNFT.sol:28"
            },
            {
              "contract": "DreadfulzNFT",
              "label": "RESERVED_AMOUNT",
              "type": "t_uint256",
              "src": "contracts/DreadfulzNFT.sol:30"
            },
            {
              "contract": "DreadfulzNFT",
              "label": "FIRST_SALE_AMOUNT",
              "type": "t_uint256",
              "src": "contracts/DreadfulzNFT.sol:31"
            },
            {
              "contract": "DreadfulzNFT",
              "label": "SECOND_SALE_AMOUNT",
              "type": "t_uint256",
              "src": "contracts/DreadfulzNFT.sol:32"
            },
            {
              "contract": "DreadfulzNFT",
              "label": "FINAL_SALE_AMOUNT",
              "type": "t_uint256",
              "src": "contracts/DreadfulzNFT.sol:33"
            },
            {
              "contract": "DreadfulzNFT",
              "label": "PRESALE_PRICE",
              "type": "t_uint256",
              "src": "contracts/DreadfulzNFT.sol:35"
            },
            {
              "contract": "DreadfulzNFT",
              "label": "FIRST_SALE_PRICE",
              "type": "t_uint256",
              "src": "contracts/DreadfulzNFT.sol:36"
            },
            {
              "contract": "DreadfulzNFT",
              "label": "SECOND_SALE_PRICE",
              "type": "t_uint256",
              "src": "contracts/DreadfulzNFT.sol:37"
            },
            {
              "contract": "DreadfulzNFT",
              "label": "FINAL_SALE_PRICE",
              "type": "t_uint256",
              "src": "contracts/DreadfulzNFT.sol:38"
            },
            {
              "contract": "DreadfulzNFT",
              "label": "DEV_WALLET",
              "type": "t_address_payable",
              "src": "contracts/DreadfulzNFT.sol:40"
            },
            {
              "contract": "DreadfulzNFT",
              "label": "MARKETING_WALLET",
              "type": "t_address_payable",
              "src": "contracts/DreadfulzNFT.sol:41"
            },
            {
              "contract": "DreadfulzNFT",
              "label": "payees",
              "type": "t_array(t_address)dyn_storage",
              "src": "contracts/DreadfulzNFT.sol:43"
            },
            {
              "contract": "DreadfulzNFT",
              "label": "shares",
              "type": "t_array(t_uint256)dyn_storage",
              "src": "contracts/DreadfulzNFT.sol:44"
            }
          ],
          "types": {
            "t_mapping(t_address,t_struct(UintSet)2986_storage)": {
              "label": "mapping(address => struct EnumerableSet.UintSet)"
            },
            "t_address": {
              "label": "address"
            },
            "t_struct(UintSet)2986_storage": {
              "label": "struct EnumerableSet.UintSet",
              "members": [
                {
                  "label": "_inner",
                  "type": "t_struct(Set)2528_storage"
                }
              ]
            },
            "t_struct(Set)2528_storage": {
              "label": "struct EnumerableSet.Set",
              "members": [
                {
                  "label": "_values",
                  "type": "t_array(t_bytes32)dyn_storage"
                },
                {
                  "label": "_indexes",
                  "type": "t_mapping(t_bytes32,t_uint256)"
                }
              ]
            },
            "t_array(t_bytes32)dyn_storage": {
              "label": "bytes32[]"
            },
            "t_bytes32": {
              "label": "bytes32"
            },
            "t_mapping(t_bytes32,t_uint256)": {
              "label": "mapping(bytes32 => uint256)"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_struct(UintToAddressMap)2283_storage": {
              "label": "struct EnumerableMap.UintToAddressMap",
              "members": [
                {
                  "label": "_inner",
                  "type": "t_struct(Map)2053_storage"
                }
              ]
            },
            "t_struct(Map)2053_storage": {
              "label": "struct EnumerableMap.Map",
              "members": [
                {
                  "label": "_keys",
                  "type": "t_struct(Bytes32Set)2722_storage"
                },
                {
                  "label": "_values",
                  "type": "t_mapping(t_bytes32,t_bytes32)"
                }
              ]
            },
            "t_struct(Bytes32Set)2722_storage": {
              "label": "struct EnumerableSet.Bytes32Set",
              "members": [
                {
                  "label": "_inner",
                  "type": "t_struct(Set)2528_storage"
                }
              ]
            },
            "t_mapping(t_bytes32,t_bytes32)": {
              "label": "mapping(bytes32 => bytes32)"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_address_payable": {
              "label": "address payable"
            },
            "t_array(t_address)dyn_storage": {
              "label": "address[]"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "DreadfulzStaking": {
        "src": "contracts/DreadfulzStaking.sol:17",
        "version": {
          "withMetadata": "1fbc283540465342d7b04ebc493a3a135d0e5d7ddf77b0cc6669f4ebf1566f74",
          "withoutMetadata": "2c7697bb44406bda1c59c4fcaa4e6d54b427fd0608ceb0c5b793659e3517c87e",
          "linkedWithoutMetadata": "2c7697bb44406bda1c59c4fcaa4e6d54b427fd0608ceb0c5b793659e3517c87e"
        },
        "inherit": [
          "Ownable",
          "Context"
        ],
        "libraries": [
          "SafeMath"
        ],
        "methods": [
          "(address,address)",
          "setTokensClaimable(bool)",
          "getStakedTokens(address)",
          "stake(uint256)",
          "stakeBatch(uint256[])",
          "stakeAll()",
          "unstake(uint256)",
          "unstakeBatch(uint256[])",
          "emergencyUnstake(uint256)",
          "updateReward(address)",
          "rewardsOwing(address)",
          "claimReward(address)",
          "unclaimedRewards(address)",
          "onERC721Received(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "DreadfulzStaking",
            "src": "contracts/DreadfulzStaking.sol:66"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "DreadfulzStaking",
              "label": "rewardsToken",
              "type": "t_contract(IERC20)663",
              "src": "contracts/DreadfulzStaking.sol:21"
            },
            {
              "contract": "DreadfulzStaking",
              "label": "dreadfulzNFT",
              "type": "t_contract(DreadfulzNFT)3571",
              "src": "contracts/DreadfulzStaking.sol:22"
            },
            {
              "contract": "DreadfulzStaking",
              "label": "rewardsPerTokenPoints",
              "type": "t_uint256",
              "src": "contracts/DreadfulzStaking.sol:24"
            },
            {
              "contract": "DreadfulzStaking",
              "label": "totalUnclaimedRewards",
              "type": "t_uint256",
              "src": "contracts/DreadfulzStaking.sol:25"
            },
            {
              "contract": "DreadfulzStaking",
              "label": "stakers",
              "type": "t_mapping(t_address,t_struct(Staker)3610_storage)",
              "src": "contracts/DreadfulzStaking.sol:42"
            },
            {
              "contract": "DreadfulzStaking",
              "label": "tokenOwner",
              "type": "t_mapping(t_uint256,t_address)",
              "src": "contracts/DreadfulzStaking.sol:45"
            },
            {
              "contract": "DreadfulzStaking",
              "label": "tokensClaimable",
              "type": "t_bool",
              "src": "contracts/DreadfulzStaking.sol:48"
            },
            {
              "contract": "DreadfulzStaking",
              "label": "initialised",
              "type": "t_bool",
              "src": "contracts/DreadfulzStaking.sol:49"
            }
          ],
          "types": {
            "t_contract(IERC20)663": {
              "label": "contract IERC20"
            },
            "t_contract(DreadfulzNFT)3571": {
              "label": "contract DreadfulzNFT"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_struct(Staker)3610_storage)": {
              "label": "mapping(address => struct DreadfulzStaking.Staker)"
            },
            "t_address": {
              "label": "address"
            },
            "t_struct(Staker)3610_storage": {
              "label": "struct DreadfulzStaking.Staker",
              "members": [
                {
                  "label": "tokenIds",
                  "type": "t_array(t_uint256)dyn_storage"
                },
                {
                  "label": "tokenIndex",
                  "type": "t_mapping(t_uint256,t_uint256)"
                },
                {
                  "label": "lastRewardPoints",
                  "type": "t_uint256"
                },
                {
                  "label": "rewardsEarned",
                  "type": "t_uint256"
                },
                {
                  "label": "rewardsReleased",
                  "type": "t_uint256"
                }
              ]
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]"
            },
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)"
            },
            "t_bool": {
              "label": "bool"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC721A": {
        "src": "erc721a/contracts/ERC721A.sol:23",
        "version": {
          "withMetadata": "d90e8953f63fb7e09b553fb57c484f25b64a2b502bb9adf41ef329e5f28fad0c",
          "withoutMetadata": "b46845ce757cb59201ed5980ba1e238b1af2a42363b8f4b5a07b70d5394d3bf0",
          "linkedWithoutMetadata": "b46845ce757cb59201ed5980ba1e238b1af2a42363b8f4b5a07b70d5394d3bf0"
        },
        "inherit": [
          "IERC721Enumerable",
          "IERC721Metadata",
          "IERC721",
          "ERC165",
          "IERC165",
          "Context"
        ],
        "libraries": [
          "Address",
          "Strings"
        ],
        "methods": [
          "(string,string,uint256)",
          "totalSupply()",
          "tokenByIndex(uint256)",
          "tokenOfOwnerByIndex(address,uint256)",
          "supportsInterface(bytes4)",
          "balanceOf(address)",
          "ownerOf(uint256)",
          "name()",
          "symbol()",
          "tokenURI(uint256)",
          "approve(address,uint256)",
          "getApproved(uint256)",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "transferFrom(address,address,uint256)",
          "safeTransferFrom(address,address,uint256)",
          "safeTransferFrom(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC721A",
            "src": "erc721a/contracts/ERC721A.sol:64"
          },
          {
            "kind": "state-variable-assignment",
            "name": "currentIndex",
            "src": "erc721a/contracts/ERC721A.sol:37"
          },
          {
            "kind": "state-variable-immutable",
            "name": "maxBatchSize",
            "src": "erc721a/contracts/ERC721A.sol:39"
          },
          {
            "kind": "state-variable-assignment",
            "name": "nextOwnerToExplicitlySet",
            "src": "erc721a/contracts/ERC721A.sol:398"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ERC721A",
              "label": "currentIndex",
              "type": "t_uint256",
              "src": "erc721a/contracts/ERC721A.sol:37"
            },
            {
              "contract": "ERC721A",
              "label": "_name",
              "type": "t_string_storage",
              "src": "erc721a/contracts/ERC721A.sol:42"
            },
            {
              "contract": "ERC721A",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "erc721a/contracts/ERC721A.sol:45"
            },
            {
              "contract": "ERC721A",
              "label": "_ownerships",
              "type": "t_mapping(t_uint256,t_struct(TokenOwnership)4292_storage)",
              "src": "erc721a/contracts/ERC721A.sol:49"
            },
            {
              "contract": "ERC721A",
              "label": "_addressData",
              "type": "t_mapping(t_address,t_struct(AddressData)4297_storage)",
              "src": "erc721a/contracts/ERC721A.sol:52"
            },
            {
              "contract": "ERC721A",
              "label": "_tokenApprovals",
              "type": "t_mapping(t_uint256,t_address)",
              "src": "erc721a/contracts/ERC721A.sol:55"
            },
            {
              "contract": "ERC721A",
              "label": "_operatorApprovals",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "src": "erc721a/contracts/ERC721A.sol:58"
            },
            {
              "contract": "ERC721A",
              "label": "nextOwnerToExplicitlySet",
              "type": "t_uint256",
              "src": "erc721a/contracts/ERC721A.sol:398"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_mapping(t_uint256,t_struct(TokenOwnership)4292_storage)": {
              "label": "mapping(uint256 => struct ERC721A.TokenOwnership)"
            },
            "t_struct(TokenOwnership)4292_storage": {
              "label": "struct ERC721A.TokenOwnership",
              "members": [
                {
                  "label": "addr",
                  "type": "t_address"
                },
                {
                  "label": "startTimestamp",
                  "type": "t_uint64"
                }
              ]
            },
            "t_address": {
              "label": "address"
            },
            "t_uint64": {
              "label": "uint64"
            },
            "t_mapping(t_address,t_struct(AddressData)4297_storage)": {
              "label": "mapping(address => struct ERC721A.AddressData)"
            },
            "t_struct(AddressData)4297_storage": {
              "label": "struct ERC721A.AddressData",
              "members": [
                {
                  "label": "balance",
                  "type": "t_uint128"
                },
                {
                  "label": "numberMinted",
                  "type": "t_uint128"
                }
              ]
            },
            "t_uint128": {
              "label": "uint128"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_bool": {
              "label": "bool"
            }
          },
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "Ownable": {
        "src": "@openzeppelin/contracts/access/Ownable.sol:20",
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin/contracts/access/Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "Ownable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "PaymentSplitter": {
        "src": "@openzeppelin/contracts/finance/PaymentSplitter.sol:27",
        "version": {
          "withMetadata": "7ca80aa715b481cb550ce3949750475a418af4045c653fe6bed689f443f26bfb",
          "withoutMetadata": "a4e026d1eefdf675d63e6c33090429de6d5c3dc870d8924a7112b284573f6a31",
          "linkedWithoutMetadata": "a4e026d1eefdf675d63e6c33090429de6d5c3dc870d8924a7112b284573f6a31"
        },
        "inherit": [
          "Context"
        ],
        "libraries": [
          "Address",
          "SafeERC20"
        ],
        "methods": [
          "(address[],uint256[])",
          "()",
          "totalShares()",
          "totalReleased()",
          "totalReleased(address)",
          "shares(address)",
          "released(address)",
          "released(address,address)",
          "payee(uint256)",
          "release(address payable)",
          "release(address,address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "PaymentSplitter",
            "src": "@openzeppelin/contracts/finance/PaymentSplitter.sol:50"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "PaymentSplitter",
              "label": "_totalShares",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts/finance/PaymentSplitter.sol:33"
            },
            {
              "contract": "PaymentSplitter",
              "label": "_totalReleased",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts/finance/PaymentSplitter.sol:34"
            },
            {
              "contract": "PaymentSplitter",
              "label": "_shares",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin/contracts/finance/PaymentSplitter.sol:36"
            },
            {
              "contract": "PaymentSplitter",
              "label": "_released",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin/contracts/finance/PaymentSplitter.sol:37"
            },
            {
              "contract": "PaymentSplitter",
              "label": "_payees",
              "type": "t_array(t_address)dyn_storage",
              "src": "@openzeppelin/contracts/finance/PaymentSplitter.sol:38"
            },
            {
              "contract": "PaymentSplitter",
              "label": "_erc20TotalReleased",
              "type": "t_mapping(t_contract(IERC20)663,t_uint256)",
              "src": "@openzeppelin/contracts/finance/PaymentSplitter.sol:40"
            },
            {
              "contract": "PaymentSplitter",
              "label": "_erc20Released",
              "type": "t_mapping(t_contract(IERC20)663,t_mapping(t_address,t_uint256))",
              "src": "@openzeppelin/contracts/finance/PaymentSplitter.sol:41"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_array(t_address)dyn_storage": {
              "label": "address[]"
            },
            "t_mapping(t_contract(IERC20)663,t_uint256)": {
              "label": "mapping(contract IERC20 => uint256)"
            },
            "t_contract(IERC20)663": {
              "label": "contract IERC20"
            },
            "t_mapping(t_contract(IERC20)663,t_mapping(t_address,t_uint256))": {
              "label": "mapping(contract IERC20 => mapping(address => uint256))"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ReentrancyGuard": {
        "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:22",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReentrancyGuard",
            "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:39"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ReentrancyGuard",
              "label": "_status",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:37"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "SafeERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:18",
        "version": {
          "withMetadata": "56f3b47fe199a74f30abd43f547fa939c88066448b04cd5f17bdafbe2e03804a",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "Address"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC721": {
        "src": "@openzeppelin/contracts/token/ERC721/IERC721.sol:11",
        "inherit": [
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "balanceOf(address)",
          "ownerOf(uint256)",
          "safeTransferFrom(address,address,uint256)",
          "transferFrom(address,address,uint256)",
          "approve(address,uint256)",
          "getApproved(uint256)",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "safeTransferFrom(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC721Receiver": {
        "src": "@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol:11",
        "inherit": [],
        "libraries": [],
        "methods": [
          "onERC721Received(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC721Enumerable": {
        "src": "@openzeppelin/contracts/token/ERC721/extensions/IERC721Enumerable.sol:12",
        "inherit": [
          "IERC721",
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "tokenOfOwnerByIndex(address,uint256)",
          "tokenByIndex(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC721Metadata": {
        "src": "@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol:12",
        "inherit": [
          "IERC721",
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "tokenURI(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Address": {
        "src": "@openzeppelin/contracts/utils/Address.sol:9",
        "version": {
          "withMetadata": "484d2cade7f176ca5050f1f249737dd81ac6ed00490f5099f09054c1bc596b67",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:186"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Strings": {
        "src": "@openzeppelin/contracts/utils/Strings.sol:9",
        "version": {
          "withMetadata": "b16d77140251bcd9725701aa6d1902c15605c3749a720b7aac593644f6c217ac",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "MerkleProof": {
        "src": "@openzeppelin/contracts/utils/cryptography/MerkleProof.sol:15",
        "version": {
          "withMetadata": "eae9c389bfc7a3fccc9b1be4ba129d982448e261280aa30913fa3d7bc9f5440f",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC165": {
        "src": "@openzeppelin/contracts/utils/introspection/ERC165.sol:22",
        "inherit": [
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC165": {
        "src": "@openzeppelin/contracts/utils/introspection/IERC165.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "SafeMath": {
        "src": "@openzeppelin/contracts/utils/math/SafeMath.sol:16",
        "version": {
          "withMetadata": "8418487e012b6d36d0f064d32c31976a5cbfce3373a77c05261a0ae367939886",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "EnumerableMap": {
        "src": "@openzeppelin/contracts/utils/structs/EnumerableMap.sol:32",
        "version": {
          "withMetadata": "eb2563fd64638723253d815b920b9bdd7ba216c3415fd72b3339b5602807aab3",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "EnumerableSet"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "EnumerableSet": {
        "src": "@openzeppelin/contracts/utils/structs/EnumerableSet.sol:30",
        "version": {
          "withMetadata": "6ee35d052c3beaf7db7a043d937ed616f73a3d6a147dd22fd5b78a58e78e8277",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "DreadfulzNFT": {
        "src": "contracts/DreadfulzNFT.sol:12",
        "version": {
          "withMetadata": "2d7216d2653ecfe6d8f3353c85d4b3b33b982badf8f41353249a631394008df9",
          "withoutMetadata": "48bb968f338b79c7fb6fb994edb93b00ee77362d6d31bab646eb2f105322a875",
          "linkedWithoutMetadata": "48bb968f338b79c7fb6fb994edb93b00ee77362d6d31bab646eb2f105322a875"
        },
        "inherit": [
          "PaymentSplitter",
          "ERC721A",
          "IERC721Enumerable",
          "IERC721Metadata",
          "IERC721",
          "ERC165",
          "IERC165",
          "ReentrancyGuard",
          "Ownable",
          "Context"
        ],
        "libraries": [
          "EnumerableSet",
          "EnumerableMap",
          "MerkleProof"
        ],
        "methods": [
          "()",
          "mint(uint256)",
          "presale(uint256,bytes32[])",
          "balanceOfOwner(address)",
          "mintToTeam(address,uint256)",
          "setSaleActive()",
          "set2ndSaleActive()",
          "setFinalSaleActive()",
          "setMerkleRoot(bytes32)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "DreadfulzNFT",
            "src": "contracts/DreadfulzNFT.sol:46"
          },
          {
            "kind": "state-variable-assignment",
            "name": "merkleRoot",
            "src": "contracts/DreadfulzNFT.sol:22"
          },
          {
            "kind": "state-variable-assignment",
            "name": "isSaleActive",
            "src": "contracts/DreadfulzNFT.sol:26"
          },
          {
            "kind": "state-variable-assignment",
            "name": "is2ndSaleActive",
            "src": "contracts/DreadfulzNFT.sol:27"
          },
          {
            "kind": "state-variable-assignment",
            "name": "isFinalSaleActive",
            "src": "contracts/DreadfulzNFT.sol:28"
          },
          {
            "kind": "state-variable-assignment",
            "name": "RESERVED_AMOUNT",
            "src": "contracts/DreadfulzNFT.sol:30"
          },
          {
            "kind": "state-variable-assignment",
            "name": "FIRST_SALE_AMOUNT",
            "src": "contracts/DreadfulzNFT.sol:31"
          },
          {
            "kind": "state-variable-assignment",
            "name": "SECOND_SALE_AMOUNT",
            "src": "contracts/DreadfulzNFT.sol:32"
          },
          {
            "kind": "state-variable-assignment",
            "name": "FINAL_SALE_AMOUNT",
            "src": "contracts/DreadfulzNFT.sol:33"
          },
          {
            "kind": "state-variable-assignment",
            "name": "PRESALE_PRICE",
            "src": "contracts/DreadfulzNFT.sol:35"
          },
          {
            "kind": "state-variable-assignment",
            "name": "FIRST_SALE_PRICE",
            "src": "contracts/DreadfulzNFT.sol:36"
          },
          {
            "kind": "state-variable-assignment",
            "name": "SECOND_SALE_PRICE",
            "src": "contracts/DreadfulzNFT.sol:37"
          },
          {
            "kind": "state-variable-assignment",
            "name": "FINAL_SALE_PRICE",
            "src": "contracts/DreadfulzNFT.sol:38"
          },
          {
            "kind": "state-variable-assignment",
            "name": "DEV_WALLET",
            "src": "contracts/DreadfulzNFT.sol:40"
          },
          {
            "kind": "state-variable-assignment",
            "name": "MARKETING_WALLET",
            "src": "contracts/DreadfulzNFT.sol:41"
          },
          {
            "kind": "state-variable-assignment",
            "name": "payees",
            "src": "contracts/DreadfulzNFT.sol:43"
          },
          {
            "kind": "state-variable-assignment",
            "name": "shares",
            "src": "contracts/DreadfulzNFT.sol:44"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "DreadfulzNFT",
              "label": "_holderTokens",
              "type": "t_mapping(t_address,t_struct(UintSet)2986_storage)",
              "src": "contracts/DreadfulzNFT.sol:17"
            },
            {
              "contract": "DreadfulzNFT",
              "label": "_tokenOwners",
              "type": "t_struct(UintToAddressMap)2283_storage",
              "src": "contracts/DreadfulzNFT.sol:20"
            },
            {
              "contract": "DreadfulzNFT",
              "label": "merkleRoot",
              "type": "t_bytes32",
              "src": "contracts/DreadfulzNFT.sol:22"
            },
            {
              "contract": "DreadfulzNFT",
              "label": "whitelistClaimed",
              "type": "t_mapping(t_address,t_bool)",
              "src": "contracts/DreadfulzNFT.sol:24"
            },
            {
              "contract": "DreadfulzNFT",
              "label": "isSaleActive",
              "type": "t_bool",
              "src": "contracts/DreadfulzNFT.sol:26"
            },
            {
              "contract": "DreadfulzNFT",
              "label": "is2ndSaleActive",
              "type": "t_bool",
              "src": "contracts/DreadfulzNFT.sol:27"
            },
            {
              "contract": "DreadfulzNFT",
              "label": "isFinalSaleActive",
              "type": "t_bool",
              "src": "contracts/DreadfulzNFT.sol:28"
            },
            {
              "contract": "DreadfulzNFT",
              "label": "RESERVED_AMOUNT",
              "type": "t_uint256",
              "src": "contracts/DreadfulzNFT.sol:30"
            },
            {
              "contract": "DreadfulzNFT",
              "label": "FIRST_SALE_AMOUNT",
              "type": "t_uint256",
              "src": "contracts/DreadfulzNFT.sol:31"
            },
            {
              "contract": "DreadfulzNFT",
              "label": "SECOND_SALE_AMOUNT",
              "type": "t_uint256",
              "src": "contracts/DreadfulzNFT.sol:32"
            },
            {
              "contract": "DreadfulzNFT",
              "label": "FINAL_SALE_AMOUNT",
              "type": "t_uint256",
              "src": "contracts/DreadfulzNFT.sol:33"
            },
            {
              "contract": "DreadfulzNFT",
              "label": "PRESALE_PRICE",
              "type": "t_uint256",
              "src": "contracts/DreadfulzNFT.sol:35"
            },
            {
              "contract": "DreadfulzNFT",
              "label": "FIRST_SALE_PRICE",
              "type": "t_uint256",
              "src": "contracts/DreadfulzNFT.sol:36"
            },
            {
              "contract": "DreadfulzNFT",
              "label": "SECOND_SALE_PRICE",
              "type": "t_uint256",
              "src": "contracts/DreadfulzNFT.sol:37"
            },
            {
              "contract": "DreadfulzNFT",
              "label": "FINAL_SALE_PRICE",
              "type": "t_uint256",
              "src": "contracts/DreadfulzNFT.sol:38"
            },
            {
              "contract": "DreadfulzNFT",
              "label": "DEV_WALLET",
              "type": "t_address_payable",
              "src": "contracts/DreadfulzNFT.sol:40"
            },
            {
              "contract": "DreadfulzNFT",
              "label": "MARKETING_WALLET",
              "type": "t_address_payable",
              "src": "contracts/DreadfulzNFT.sol:41"
            },
            {
              "contract": "DreadfulzNFT",
              "label": "payees",
              "type": "t_array(t_address)dyn_storage",
              "src": "contracts/DreadfulzNFT.sol:43"
            },
            {
              "contract": "DreadfulzNFT",
              "label": "shares",
              "type": "t_array(t_uint256)dyn_storage",
              "src": "contracts/DreadfulzNFT.sol:44"
            }
          ],
          "types": {
            "t_mapping(t_address,t_struct(UintSet)2986_storage)": {
              "label": "mapping(address => struct EnumerableSet.UintSet)"
            },
            "t_address": {
              "label": "address"
            },
            "t_struct(UintSet)2986_storage": {
              "label": "struct EnumerableSet.UintSet",
              "members": [
                {
                  "label": "_inner",
                  "type": "t_struct(Set)2528_storage"
                }
              ]
            },
            "t_struct(Set)2528_storage": {
              "label": "struct EnumerableSet.Set",
              "members": [
                {
                  "label": "_values",
                  "type": "t_array(t_bytes32)dyn_storage"
                },
                {
                  "label": "_indexes",
                  "type": "t_mapping(t_bytes32,t_uint256)"
                }
              ]
            },
            "t_array(t_bytes32)dyn_storage": {
              "label": "bytes32[]"
            },
            "t_bytes32": {
              "label": "bytes32"
            },
            "t_mapping(t_bytes32,t_uint256)": {
              "label": "mapping(bytes32 => uint256)"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_struct(UintToAddressMap)2283_storage": {
              "label": "struct EnumerableMap.UintToAddressMap",
              "members": [
                {
                  "label": "_inner",
                  "type": "t_struct(Map)2053_storage"
                }
              ]
            },
            "t_struct(Map)2053_storage": {
              "label": "struct EnumerableMap.Map",
              "members": [
                {
                  "label": "_keys",
                  "type": "t_struct(Bytes32Set)2722_storage"
                },
                {
                  "label": "_values",
                  "type": "t_mapping(t_bytes32,t_bytes32)"
                }
              ]
            },
            "t_struct(Bytes32Set)2722_storage": {
              "label": "struct EnumerableSet.Bytes32Set",
              "members": [
                {
                  "label": "_inner",
                  "type": "t_struct(Set)2528_storage"
                }
              ]
            },
            "t_mapping(t_bytes32,t_bytes32)": {
              "label": "mapping(bytes32 => bytes32)"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_address_payable": {
              "label": "address payable"
            },
            "t_array(t_address)dyn_storage": {
              "label": "address[]"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "DreadfulzStaking": {
        "src": "contracts/DreadfulzStaking.sol:17",
        "version": {
          "withMetadata": "69515dac6b26abd3e50a6117956680e8248453230703e5395bc3c36fa43c25c3",
          "withoutMetadata": "2c7697bb44406bda1c59c4fcaa4e6d54b427fd0608ceb0c5b793659e3517c87e",
          "linkedWithoutMetadata": "2c7697bb44406bda1c59c4fcaa4e6d54b427fd0608ceb0c5b793659e3517c87e"
        },
        "inherit": [
          "Ownable",
          "Context"
        ],
        "libraries": [
          "SafeMath"
        ],
        "methods": [
          "(address,address)",
          "setTokensClaimable(bool)",
          "getStakedTokens(address)",
          "stake(uint256)",
          "stakeBatch(uint256[])",
          "stakeAll()",
          "unstake(uint256)",
          "unstakeBatch(uint256[])",
          "emergencyUnstake(uint256)",
          "updateReward(address)",
          "rewardsOwing(address)",
          "claimReward(address)",
          "unclaimedRewards(address)",
          "onERC721Received(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "DreadfulzStaking",
            "src": "contracts/DreadfulzStaking.sol:66"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "DreadfulzStaking",
              "label": "rewardsToken",
              "type": "t_contract(IERC20)663",
              "src": "contracts/DreadfulzStaking.sol:21"
            },
            {
              "contract": "DreadfulzStaking",
              "label": "dreadfulzNFT",
              "type": "t_contract(DreadfulzNFT)3571",
              "src": "contracts/DreadfulzStaking.sol:22"
            },
            {
              "contract": "DreadfulzStaking",
              "label": "rewardsPerTokenPoints",
              "type": "t_uint256",
              "src": "contracts/DreadfulzStaking.sol:24"
            },
            {
              "contract": "DreadfulzStaking",
              "label": "totalUnclaimedRewards",
              "type": "t_uint256",
              "src": "contracts/DreadfulzStaking.sol:25"
            },
            {
              "contract": "DreadfulzStaking",
              "label": "stakers",
              "type": "t_mapping(t_address,t_struct(Staker)3610_storage)",
              "src": "contracts/DreadfulzStaking.sol:42"
            },
            {
              "contract": "DreadfulzStaking",
              "label": "tokenOwner",
              "type": "t_mapping(t_uint256,t_address)",
              "src": "contracts/DreadfulzStaking.sol:45"
            },
            {
              "contract": "DreadfulzStaking",
              "label": "tokensClaimable",
              "type": "t_bool",
              "src": "contracts/DreadfulzStaking.sol:48"
            },
            {
              "contract": "DreadfulzStaking",
              "label": "initialised",
              "type": "t_bool",
              "src": "contracts/DreadfulzStaking.sol:49"
            }
          ],
          "types": {
            "t_contract(IERC20)663": {
              "label": "contract IERC20"
            },
            "t_contract(DreadfulzNFT)3571": {
              "label": "contract DreadfulzNFT"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_struct(Staker)3610_storage)": {
              "label": "mapping(address => struct DreadfulzStaking.Staker)"
            },
            "t_address": {
              "label": "address"
            },
            "t_struct(Staker)3610_storage": {
              "label": "struct DreadfulzStaking.Staker",
              "members": [
                {
                  "label": "tokenIds",
                  "type": "t_array(t_uint256)dyn_storage"
                },
                {
                  "label": "tokenIndex",
                  "type": "t_mapping(t_uint256,t_uint256)"
                },
                {
                  "label": "lastRewardPoints",
                  "type": "t_uint256"
                },
                {
                  "label": "rewardsEarned",
                  "type": "t_uint256"
                },
                {
                  "label": "rewardsReleased",
                  "type": "t_uint256"
                }
              ]
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]"
            },
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)"
            },
            "t_bool": {
              "label": "bool"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC721A": {
        "src": "erc721a/contracts/ERC721A.sol:23",
        "version": {
          "withMetadata": "d90e8953f63fb7e09b553fb57c484f25b64a2b502bb9adf41ef329e5f28fad0c",
          "withoutMetadata": "b46845ce757cb59201ed5980ba1e238b1af2a42363b8f4b5a07b70d5394d3bf0",
          "linkedWithoutMetadata": "b46845ce757cb59201ed5980ba1e238b1af2a42363b8f4b5a07b70d5394d3bf0"
        },
        "inherit": [
          "IERC721Enumerable",
          "IERC721Metadata",
          "IERC721",
          "ERC165",
          "IERC165",
          "Context"
        ],
        "libraries": [
          "Address",
          "Strings"
        ],
        "methods": [
          "(string,string,uint256)",
          "totalSupply()",
          "tokenByIndex(uint256)",
          "tokenOfOwnerByIndex(address,uint256)",
          "supportsInterface(bytes4)",
          "balanceOf(address)",
          "ownerOf(uint256)",
          "name()",
          "symbol()",
          "tokenURI(uint256)",
          "approve(address,uint256)",
          "getApproved(uint256)",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "transferFrom(address,address,uint256)",
          "safeTransferFrom(address,address,uint256)",
          "safeTransferFrom(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC721A",
            "src": "erc721a/contracts/ERC721A.sol:64"
          },
          {
            "kind": "state-variable-assignment",
            "name": "currentIndex",
            "src": "erc721a/contracts/ERC721A.sol:37"
          },
          {
            "kind": "state-variable-immutable",
            "name": "maxBatchSize",
            "src": "erc721a/contracts/ERC721A.sol:39"
          },
          {
            "kind": "state-variable-assignment",
            "name": "nextOwnerToExplicitlySet",
            "src": "erc721a/contracts/ERC721A.sol:398"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ERC721A",
              "label": "currentIndex",
              "type": "t_uint256",
              "src": "erc721a/contracts/ERC721A.sol:37"
            },
            {
              "contract": "ERC721A",
              "label": "_name",
              "type": "t_string_storage",
              "src": "erc721a/contracts/ERC721A.sol:42"
            },
            {
              "contract": "ERC721A",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "erc721a/contracts/ERC721A.sol:45"
            },
            {
              "contract": "ERC721A",
              "label": "_ownerships",
              "type": "t_mapping(t_uint256,t_struct(TokenOwnership)4292_storage)",
              "src": "erc721a/contracts/ERC721A.sol:49"
            },
            {
              "contract": "ERC721A",
              "label": "_addressData",
              "type": "t_mapping(t_address,t_struct(AddressData)4297_storage)",
              "src": "erc721a/contracts/ERC721A.sol:52"
            },
            {
              "contract": "ERC721A",
              "label": "_tokenApprovals",
              "type": "t_mapping(t_uint256,t_address)",
              "src": "erc721a/contracts/ERC721A.sol:55"
            },
            {
              "contract": "ERC721A",
              "label": "_operatorApprovals",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "src": "erc721a/contracts/ERC721A.sol:58"
            },
            {
              "contract": "ERC721A",
              "label": "nextOwnerToExplicitlySet",
              "type": "t_uint256",
              "src": "erc721a/contracts/ERC721A.sol:398"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_mapping(t_uint256,t_struct(TokenOwnership)4292_storage)": {
              "label": "mapping(uint256 => struct ERC721A.TokenOwnership)"
            },
            "t_struct(TokenOwnership)4292_storage": {
              "label": "struct ERC721A.TokenOwnership",
              "members": [
                {
                  "label": "addr",
                  "type": "t_address"
                },
                {
                  "label": "startTimestamp",
                  "type": "t_uint64"
                }
              ]
            },
            "t_address": {
              "label": "address"
            },
            "t_uint64": {
              "label": "uint64"
            },
            "t_mapping(t_address,t_struct(AddressData)4297_storage)": {
              "label": "mapping(address => struct ERC721A.AddressData)"
            },
            "t_struct(AddressData)4297_storage": {
              "label": "struct ERC721A.AddressData",
              "members": [
                {
                  "label": "balance",
                  "type": "t_uint128"
                },
                {
                  "label": "numberMinted",
                  "type": "t_uint128"
                }
              ]
            },
            "t_uint128": {
              "label": "uint128"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_bool": {
              "label": "bool"
            }
          },
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "Ownable": {
        "src": "@openzeppelin/contracts/access/Ownable.sol:20",
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin/contracts/access/Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "Ownable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "PaymentSplitter": {
        "src": "@openzeppelin/contracts/finance/PaymentSplitter.sol:27",
        "version": {
          "withMetadata": "7ca80aa715b481cb550ce3949750475a418af4045c653fe6bed689f443f26bfb",
          "withoutMetadata": "a4e026d1eefdf675d63e6c33090429de6d5c3dc870d8924a7112b284573f6a31",
          "linkedWithoutMetadata": "a4e026d1eefdf675d63e6c33090429de6d5c3dc870d8924a7112b284573f6a31"
        },
        "inherit": [
          "Context"
        ],
        "libraries": [
          "Address",
          "SafeERC20"
        ],
        "methods": [
          "(address[],uint256[])",
          "()",
          "totalShares()",
          "totalReleased()",
          "totalReleased(address)",
          "shares(address)",
          "released(address)",
          "released(address,address)",
          "payee(uint256)",
          "release(address payable)",
          "release(address,address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "PaymentSplitter",
            "src": "@openzeppelin/contracts/finance/PaymentSplitter.sol:50"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "PaymentSplitter",
              "label": "_totalShares",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts/finance/PaymentSplitter.sol:33"
            },
            {
              "contract": "PaymentSplitter",
              "label": "_totalReleased",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts/finance/PaymentSplitter.sol:34"
            },
            {
              "contract": "PaymentSplitter",
              "label": "_shares",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin/contracts/finance/PaymentSplitter.sol:36"
            },
            {
              "contract": "PaymentSplitter",
              "label": "_released",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin/contracts/finance/PaymentSplitter.sol:37"
            },
            {
              "contract": "PaymentSplitter",
              "label": "_payees",
              "type": "t_array(t_address)dyn_storage",
              "src": "@openzeppelin/contracts/finance/PaymentSplitter.sol:38"
            },
            {
              "contract": "PaymentSplitter",
              "label": "_erc20TotalReleased",
              "type": "t_mapping(t_contract(IERC20)663,t_uint256)",
              "src": "@openzeppelin/contracts/finance/PaymentSplitter.sol:40"
            },
            {
              "contract": "PaymentSplitter",
              "label": "_erc20Released",
              "type": "t_mapping(t_contract(IERC20)663,t_mapping(t_address,t_uint256))",
              "src": "@openzeppelin/contracts/finance/PaymentSplitter.sol:41"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_array(t_address)dyn_storage": {
              "label": "address[]"
            },
            "t_mapping(t_contract(IERC20)663,t_uint256)": {
              "label": "mapping(contract IERC20 => uint256)"
            },
            "t_contract(IERC20)663": {
              "label": "contract IERC20"
            },
            "t_mapping(t_contract(IERC20)663,t_mapping(t_address,t_uint256))": {
              "label": "mapping(contract IERC20 => mapping(address => uint256))"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ReentrancyGuard": {
        "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:22",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReentrancyGuard",
            "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:39"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ReentrancyGuard",
              "label": "_status",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:37"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "SafeERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:18",
        "version": {
          "withMetadata": "56f3b47fe199a74f30abd43f547fa939c88066448b04cd5f17bdafbe2e03804a",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "Address"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC721": {
        "src": "@openzeppelin/contracts/token/ERC721/IERC721.sol:11",
        "inherit": [
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "balanceOf(address)",
          "ownerOf(uint256)",
          "safeTransferFrom(address,address,uint256)",
          "transferFrom(address,address,uint256)",
          "approve(address,uint256)",
          "getApproved(uint256)",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "safeTransferFrom(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC721Receiver": {
        "src": "@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol:11",
        "inherit": [],
        "libraries": [],
        "methods": [
          "onERC721Received(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC721Enumerable": {
        "src": "@openzeppelin/contracts/token/ERC721/extensions/IERC721Enumerable.sol:12",
        "inherit": [
          "IERC721",
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "tokenOfOwnerByIndex(address,uint256)",
          "tokenByIndex(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC721Metadata": {
        "src": "@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol:12",
        "inherit": [
          "IERC721",
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "tokenURI(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Address": {
        "src": "@openzeppelin/contracts/utils/Address.sol:9",
        "version": {
          "withMetadata": "484d2cade7f176ca5050f1f249737dd81ac6ed00490f5099f09054c1bc596b67",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:186"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Strings": {
        "src": "@openzeppelin/contracts/utils/Strings.sol:9",
        "version": {
          "withMetadata": "b16d77140251bcd9725701aa6d1902c15605c3749a720b7aac593644f6c217ac",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "MerkleProof": {
        "src": "@openzeppelin/contracts/utils/cryptography/MerkleProof.sol:15",
        "version": {
          "withMetadata": "eae9c389bfc7a3fccc9b1be4ba129d982448e261280aa30913fa3d7bc9f5440f",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC165": {
        "src": "@openzeppelin/contracts/utils/introspection/ERC165.sol:22",
        "inherit": [
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC165": {
        "src": "@openzeppelin/contracts/utils/introspection/IERC165.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "SafeMath": {
        "src": "@openzeppelin/contracts/utils/math/SafeMath.sol:16",
        "version": {
          "withMetadata": "8418487e012b6d36d0f064d32c31976a5cbfce3373a77c05261a0ae367939886",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "EnumerableMap": {
        "src": "@openzeppelin/contracts/utils/structs/EnumerableMap.sol:32",
        "version": {
          "withMetadata": "eb2563fd64638723253d815b920b9bdd7ba216c3415fd72b3339b5602807aab3",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "EnumerableSet"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "EnumerableSet": {
        "src": "@openzeppelin/contracts/utils/structs/EnumerableSet.sol:30",
        "version": {
          "withMetadata": "6ee35d052c3beaf7db7a043d937ed616f73a3d6a147dd22fd5b78a58e78e8277",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "DreadfulzNFT": {
        "src": "contracts/DreadfulzNFT.sol:12",
        "version": {
          "withMetadata": "752d2b4541217f4ec1cced298a640ec8907dbec4f7b12a938a7f91ff90966540",
          "withoutMetadata": "42a43f837f61f1e7922747a701eb9184460fcd964651584c22873bc44b9fdd43",
          "linkedWithoutMetadata": "42a43f837f61f1e7922747a701eb9184460fcd964651584c22873bc44b9fdd43"
        },
        "inherit": [
          "PaymentSplitter",
          "ERC721A",
          "IERC721Enumerable",
          "IERC721Metadata",
          "IERC721",
          "ERC165",
          "IERC165",
          "ReentrancyGuard",
          "Ownable",
          "Context"
        ],
        "libraries": [
          "EnumerableSet",
          "EnumerableMap",
          "MerkleProof"
        ],
        "methods": [
          "()",
          "mint(uint256)",
          "presale(uint256,bytes32[])",
          "balanceOfOwner(address)",
          "mintToTeam(address,uint256)",
          "setSaleActive()",
          "set2ndSaleActive()",
          "setFinalSaleActive()",
          "setMerkleRoot(bytes32)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "DreadfulzNFT",
            "src": "contracts/DreadfulzNFT.sol:46"
          },
          {
            "kind": "state-variable-assignment",
            "name": "merkleRoot",
            "src": "contracts/DreadfulzNFT.sol:22"
          },
          {
            "kind": "state-variable-assignment",
            "name": "isSaleActive",
            "src": "contracts/DreadfulzNFT.sol:26"
          },
          {
            "kind": "state-variable-assignment",
            "name": "is2ndSaleActive",
            "src": "contracts/DreadfulzNFT.sol:27"
          },
          {
            "kind": "state-variable-assignment",
            "name": "isFinalSaleActive",
            "src": "contracts/DreadfulzNFT.sol:28"
          },
          {
            "kind": "state-variable-assignment",
            "name": "RESERVED_AMOUNT",
            "src": "contracts/DreadfulzNFT.sol:30"
          },
          {
            "kind": "state-variable-assignment",
            "name": "FIRST_SALE_AMOUNT",
            "src": "contracts/DreadfulzNFT.sol:31"
          },
          {
            "kind": "state-variable-assignment",
            "name": "SECOND_SALE_AMOUNT",
            "src": "contracts/DreadfulzNFT.sol:32"
          },
          {
            "kind": "state-variable-assignment",
            "name": "FINAL_SALE_AMOUNT",
            "src": "contracts/DreadfulzNFT.sol:33"
          },
          {
            "kind": "state-variable-assignment",
            "name": "PRESALE_PRICE",
            "src": "contracts/DreadfulzNFT.sol:35"
          },
          {
            "kind": "state-variable-assignment",
            "name": "FIRST_SALE_PRICE",
            "src": "contracts/DreadfulzNFT.sol:36"
          },
          {
            "kind": "state-variable-assignment",
            "name": "SECOND_SALE_PRICE",
            "src": "contracts/DreadfulzNFT.sol:37"
          },
          {
            "kind": "state-variable-assignment",
            "name": "FINAL_SALE_PRICE",
            "src": "contracts/DreadfulzNFT.sol:38"
          },
          {
            "kind": "state-variable-assignment",
            "name": "DEV_WALLET",
            "src": "contracts/DreadfulzNFT.sol:40"
          },
          {
            "kind": "state-variable-assignment",
            "name": "MARKETING_WALLET",
            "src": "contracts/DreadfulzNFT.sol:41"
          },
          {
            "kind": "state-variable-assignment",
            "name": "payees",
            "src": "contracts/DreadfulzNFT.sol:43"
          },
          {
            "kind": "state-variable-assignment",
            "name": "shares",
            "src": "contracts/DreadfulzNFT.sol:44"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "DreadfulzNFT",
              "label": "_holderTokens",
              "type": "t_mapping(t_address,t_struct(UintSet)2986_storage)",
              "src": "contracts/DreadfulzNFT.sol:17"
            },
            {
              "contract": "DreadfulzNFT",
              "label": "_tokenOwners",
              "type": "t_struct(UintToAddressMap)2283_storage",
              "src": "contracts/DreadfulzNFT.sol:20"
            },
            {
              "contract": "DreadfulzNFT",
              "label": "merkleRoot",
              "type": "t_bytes32",
              "src": "contracts/DreadfulzNFT.sol:22"
            },
            {
              "contract": "DreadfulzNFT",
              "label": "whitelistClaimed",
              "type": "t_mapping(t_address,t_bool)",
              "src": "contracts/DreadfulzNFT.sol:24"
            },
            {
              "contract": "DreadfulzNFT",
              "label": "isSaleActive",
              "type": "t_bool",
              "src": "contracts/DreadfulzNFT.sol:26"
            },
            {
              "contract": "DreadfulzNFT",
              "label": "is2ndSaleActive",
              "type": "t_bool",
              "src": "contracts/DreadfulzNFT.sol:27"
            },
            {
              "contract": "DreadfulzNFT",
              "label": "isFinalSaleActive",
              "type": "t_bool",
              "src": "contracts/DreadfulzNFT.sol:28"
            },
            {
              "contract": "DreadfulzNFT",
              "label": "RESERVED_AMOUNT",
              "type": "t_uint256",
              "src": "contracts/DreadfulzNFT.sol:30"
            },
            {
              "contract": "DreadfulzNFT",
              "label": "FIRST_SALE_AMOUNT",
              "type": "t_uint256",
              "src": "contracts/DreadfulzNFT.sol:31"
            },
            {
              "contract": "DreadfulzNFT",
              "label": "SECOND_SALE_AMOUNT",
              "type": "t_uint256",
              "src": "contracts/DreadfulzNFT.sol:32"
            },
            {
              "contract": "DreadfulzNFT",
              "label": "FINAL_SALE_AMOUNT",
              "type": "t_uint256",
              "src": "contracts/DreadfulzNFT.sol:33"
            },
            {
              "contract": "DreadfulzNFT",
              "label": "PRESALE_PRICE",
              "type": "t_uint256",
              "src": "contracts/DreadfulzNFT.sol:35"
            },
            {
              "contract": "DreadfulzNFT",
              "label": "FIRST_SALE_PRICE",
              "type": "t_uint256",
              "src": "contracts/DreadfulzNFT.sol:36"
            },
            {
              "contract": "DreadfulzNFT",
              "label": "SECOND_SALE_PRICE",
              "type": "t_uint256",
              "src": "contracts/DreadfulzNFT.sol:37"
            },
            {
              "contract": "DreadfulzNFT",
              "label": "FINAL_SALE_PRICE",
              "type": "t_uint256",
              "src": "contracts/DreadfulzNFT.sol:38"
            },
            {
              "contract": "DreadfulzNFT",
              "label": "DEV_WALLET",
              "type": "t_address_payable",
              "src": "contracts/DreadfulzNFT.sol:40"
            },
            {
              "contract": "DreadfulzNFT",
              "label": "MARKETING_WALLET",
              "type": "t_address_payable",
              "src": "contracts/DreadfulzNFT.sol:41"
            },
            {
              "contract": "DreadfulzNFT",
              "label": "payees",
              "type": "t_array(t_address)dyn_storage",
              "src": "contracts/DreadfulzNFT.sol:43"
            },
            {
              "contract": "DreadfulzNFT",
              "label": "shares",
              "type": "t_array(t_uint256)dyn_storage",
              "src": "contracts/DreadfulzNFT.sol:44"
            }
          ],
          "types": {
            "t_mapping(t_address,t_struct(UintSet)2986_storage)": {
              "label": "mapping(address => struct EnumerableSet.UintSet)"
            },
            "t_address": {
              "label": "address"
            },
            "t_struct(UintSet)2986_storage": {
              "label": "struct EnumerableSet.UintSet",
              "members": [
                {
                  "label": "_inner",
                  "type": "t_struct(Set)2528_storage"
                }
              ]
            },
            "t_struct(Set)2528_storage": {
              "label": "struct EnumerableSet.Set",
              "members": [
                {
                  "label": "_values",
                  "type": "t_array(t_bytes32)dyn_storage"
                },
                {
                  "label": "_indexes",
                  "type": "t_mapping(t_bytes32,t_uint256)"
                }
              ]
            },
            "t_array(t_bytes32)dyn_storage": {
              "label": "bytes32[]"
            },
            "t_bytes32": {
              "label": "bytes32"
            },
            "t_mapping(t_bytes32,t_uint256)": {
              "label": "mapping(bytes32 => uint256)"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_struct(UintToAddressMap)2283_storage": {
              "label": "struct EnumerableMap.UintToAddressMap",
              "members": [
                {
                  "label": "_inner",
                  "type": "t_struct(Map)2053_storage"
                }
              ]
            },
            "t_struct(Map)2053_storage": {
              "label": "struct EnumerableMap.Map",
              "members": [
                {
                  "label": "_keys",
                  "type": "t_struct(Bytes32Set)2722_storage"
                },
                {
                  "label": "_values",
                  "type": "t_mapping(t_bytes32,t_bytes32)"
                }
              ]
            },
            "t_struct(Bytes32Set)2722_storage": {
              "label": "struct EnumerableSet.Bytes32Set",
              "members": [
                {
                  "label": "_inner",
                  "type": "t_struct(Set)2528_storage"
                }
              ]
            },
            "t_mapping(t_bytes32,t_bytes32)": {
              "label": "mapping(bytes32 => bytes32)"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_address_payable": {
              "label": "address payable"
            },
            "t_array(t_address)dyn_storage": {
              "label": "address[]"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "DreadfulzStaking": {
        "src": "contracts/DreadfulzStaking.sol:17",
        "version": {
          "withMetadata": "1fbc283540465342d7b04ebc493a3a135d0e5d7ddf77b0cc6669f4ebf1566f74",
          "withoutMetadata": "2c7697bb44406bda1c59c4fcaa4e6d54b427fd0608ceb0c5b793659e3517c87e",
          "linkedWithoutMetadata": "2c7697bb44406bda1c59c4fcaa4e6d54b427fd0608ceb0c5b793659e3517c87e"
        },
        "inherit": [
          "Ownable",
          "Context"
        ],
        "libraries": [
          "SafeMath"
        ],
        "methods": [
          "(address,address)",
          "setTokensClaimable(bool)",
          "getStakedTokens(address)",
          "stake(uint256)",
          "stakeBatch(uint256[])",
          "stakeAll()",
          "unstake(uint256)",
          "unstakeBatch(uint256[])",
          "emergencyUnstake(uint256)",
          "updateReward(address)",
          "rewardsOwing(address)",
          "claimReward(address)",
          "unclaimedRewards(address)",
          "onERC721Received(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "DreadfulzStaking",
            "src": "contracts/DreadfulzStaking.sol:66"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "DreadfulzStaking",
              "label": "rewardsToken",
              "type": "t_contract(IERC20)663",
              "src": "contracts/DreadfulzStaking.sol:21"
            },
            {
              "contract": "DreadfulzStaking",
              "label": "dreadfulzNFT",
              "type": "t_contract(DreadfulzNFT)3571",
              "src": "contracts/DreadfulzStaking.sol:22"
            },
            {
              "contract": "DreadfulzStaking",
              "label": "rewardsPerTokenPoints",
              "type": "t_uint256",
              "src": "contracts/DreadfulzStaking.sol:24"
            },
            {
              "contract": "DreadfulzStaking",
              "label": "totalUnclaimedRewards",
              "type": "t_uint256",
              "src": "contracts/DreadfulzStaking.sol:25"
            },
            {
              "contract": "DreadfulzStaking",
              "label": "stakers",
              "type": "t_mapping(t_address,t_struct(Staker)3610_storage)",
              "src": "contracts/DreadfulzStaking.sol:42"
            },
            {
              "contract": "DreadfulzStaking",
              "label": "tokenOwner",
              "type": "t_mapping(t_uint256,t_address)",
              "src": "contracts/DreadfulzStaking.sol:45"
            },
            {
              "contract": "DreadfulzStaking",
              "label": "tokensClaimable",
              "type": "t_bool",
              "src": "contracts/DreadfulzStaking.sol:48"
            },
            {
              "contract": "DreadfulzStaking",
              "label": "initialised",
              "type": "t_bool",
              "src": "contracts/DreadfulzStaking.sol:49"
            }
          ],
          "types": {
            "t_contract(IERC20)663": {
              "label": "contract IERC20"
            },
            "t_contract(DreadfulzNFT)3571": {
              "label": "contract DreadfulzNFT"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_struct(Staker)3610_storage)": {
              "label": "mapping(address => struct DreadfulzStaking.Staker)"
            },
            "t_address": {
              "label": "address"
            },
            "t_struct(Staker)3610_storage": {
              "label": "struct DreadfulzStaking.Staker",
              "members": [
                {
                  "label": "tokenIds",
                  "type": "t_array(t_uint256)dyn_storage"
                },
                {
                  "label": "tokenIndex",
                  "type": "t_mapping(t_uint256,t_uint256)"
                },
                {
                  "label": "lastRewardPoints",
                  "type": "t_uint256"
                },
                {
                  "label": "rewardsEarned",
                  "type": "t_uint256"
                },
                {
                  "label": "rewardsReleased",
                  "type": "t_uint256"
                }
              ]
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]"
            },
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)"
            },
            "t_bool": {
              "label": "bool"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC721A": {
        "src": "erc721a/contracts/ERC721A.sol:23",
        "version": {
          "withMetadata": "d90e8953f63fb7e09b553fb57c484f25b64a2b502bb9adf41ef329e5f28fad0c",
          "withoutMetadata": "b46845ce757cb59201ed5980ba1e238b1af2a42363b8f4b5a07b70d5394d3bf0",
          "linkedWithoutMetadata": "b46845ce757cb59201ed5980ba1e238b1af2a42363b8f4b5a07b70d5394d3bf0"
        },
        "inherit": [
          "IERC721Enumerable",
          "IERC721Metadata",
          "IERC721",
          "ERC165",
          "IERC165",
          "Context"
        ],
        "libraries": [
          "Address",
          "Strings"
        ],
        "methods": [
          "(string,string,uint256)",
          "totalSupply()",
          "tokenByIndex(uint256)",
          "tokenOfOwnerByIndex(address,uint256)",
          "supportsInterface(bytes4)",
          "balanceOf(address)",
          "ownerOf(uint256)",
          "name()",
          "symbol()",
          "tokenURI(uint256)",
          "approve(address,uint256)",
          "getApproved(uint256)",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "transferFrom(address,address,uint256)",
          "safeTransferFrom(address,address,uint256)",
          "safeTransferFrom(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC721A",
            "src": "erc721a/contracts/ERC721A.sol:64"
          },
          {
            "kind": "state-variable-assignment",
            "name": "currentIndex",
            "src": "erc721a/contracts/ERC721A.sol:37"
          },
          {
            "kind": "state-variable-immutable",
            "name": "maxBatchSize",
            "src": "erc721a/contracts/ERC721A.sol:39"
          },
          {
            "kind": "state-variable-assignment",
            "name": "nextOwnerToExplicitlySet",
            "src": "erc721a/contracts/ERC721A.sol:398"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ERC721A",
              "label": "currentIndex",
              "type": "t_uint256",
              "src": "erc721a/contracts/ERC721A.sol:37"
            },
            {
              "contract": "ERC721A",
              "label": "_name",
              "type": "t_string_storage",
              "src": "erc721a/contracts/ERC721A.sol:42"
            },
            {
              "contract": "ERC721A",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "erc721a/contracts/ERC721A.sol:45"
            },
            {
              "contract": "ERC721A",
              "label": "_ownerships",
              "type": "t_mapping(t_uint256,t_struct(TokenOwnership)4292_storage)",
              "src": "erc721a/contracts/ERC721A.sol:49"
            },
            {
              "contract": "ERC721A",
              "label": "_addressData",
              "type": "t_mapping(t_address,t_struct(AddressData)4297_storage)",
              "src": "erc721a/contracts/ERC721A.sol:52"
            },
            {
              "contract": "ERC721A",
              "label": "_tokenApprovals",
              "type": "t_mapping(t_uint256,t_address)",
              "src": "erc721a/contracts/ERC721A.sol:55"
            },
            {
              "contract": "ERC721A",
              "label": "_operatorApprovals",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "src": "erc721a/contracts/ERC721A.sol:58"
            },
            {
              "contract": "ERC721A",
              "label": "nextOwnerToExplicitlySet",
              "type": "t_uint256",
              "src": "erc721a/contracts/ERC721A.sol:398"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_mapping(t_uint256,t_struct(TokenOwnership)4292_storage)": {
              "label": "mapping(uint256 => struct ERC721A.TokenOwnership)"
            },
            "t_struct(TokenOwnership)4292_storage": {
              "label": "struct ERC721A.TokenOwnership",
              "members": [
                {
                  "label": "addr",
                  "type": "t_address"
                },
                {
                  "label": "startTimestamp",
                  "type": "t_uint64"
                }
              ]
            },
            "t_address": {
              "label": "address"
            },
            "t_uint64": {
              "label": "uint64"
            },
            "t_mapping(t_address,t_struct(AddressData)4297_storage)": {
              "label": "mapping(address => struct ERC721A.AddressData)"
            },
            "t_struct(AddressData)4297_storage": {
              "label": "struct ERC721A.AddressData",
              "members": [
                {
                  "label": "balance",
                  "type": "t_uint128"
                },
                {
                  "label": "numberMinted",
                  "type": "t_uint128"
                }
              ]
            },
            "t_uint128": {
              "label": "uint128"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_bool": {
              "label": "bool"
            }
          },
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "Ownable": {
        "src": "@openzeppelin/contracts/access/Ownable.sol:20",
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin/contracts/access/Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "Ownable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "PaymentSplitter": {
        "src": "@openzeppelin/contracts/finance/PaymentSplitter.sol:27",
        "version": {
          "withMetadata": "7ca80aa715b481cb550ce3949750475a418af4045c653fe6bed689f443f26bfb",
          "withoutMetadata": "a4e026d1eefdf675d63e6c33090429de6d5c3dc870d8924a7112b284573f6a31",
          "linkedWithoutMetadata": "a4e026d1eefdf675d63e6c33090429de6d5c3dc870d8924a7112b284573f6a31"
        },
        "inherit": [
          "Context"
        ],
        "libraries": [
          "Address",
          "SafeERC20"
        ],
        "methods": [
          "(address[],uint256[])",
          "()",
          "totalShares()",
          "totalReleased()",
          "totalReleased(address)",
          "shares(address)",
          "released(address)",
          "released(address,address)",
          "payee(uint256)",
          "release(address payable)",
          "release(address,address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "PaymentSplitter",
            "src": "@openzeppelin/contracts/finance/PaymentSplitter.sol:50"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "PaymentSplitter",
              "label": "_totalShares",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts/finance/PaymentSplitter.sol:33"
            },
            {
              "contract": "PaymentSplitter",
              "label": "_totalReleased",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts/finance/PaymentSplitter.sol:34"
            },
            {
              "contract": "PaymentSplitter",
              "label": "_shares",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin/contracts/finance/PaymentSplitter.sol:36"
            },
            {
              "contract": "PaymentSplitter",
              "label": "_released",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin/contracts/finance/PaymentSplitter.sol:37"
            },
            {
              "contract": "PaymentSplitter",
              "label": "_payees",
              "type": "t_array(t_address)dyn_storage",
              "src": "@openzeppelin/contracts/finance/PaymentSplitter.sol:38"
            },
            {
              "contract": "PaymentSplitter",
              "label": "_erc20TotalReleased",
              "type": "t_mapping(t_contract(IERC20)663,t_uint256)",
              "src": "@openzeppelin/contracts/finance/PaymentSplitter.sol:40"
            },
            {
              "contract": "PaymentSplitter",
              "label": "_erc20Released",
              "type": "t_mapping(t_contract(IERC20)663,t_mapping(t_address,t_uint256))",
              "src": "@openzeppelin/contracts/finance/PaymentSplitter.sol:41"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_array(t_address)dyn_storage": {
              "label": "address[]"
            },
            "t_mapping(t_contract(IERC20)663,t_uint256)": {
              "label": "mapping(contract IERC20 => uint256)"
            },
            "t_contract(IERC20)663": {
              "label": "contract IERC20"
            },
            "t_mapping(t_contract(IERC20)663,t_mapping(t_address,t_uint256))": {
              "label": "mapping(contract IERC20 => mapping(address => uint256))"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ReentrancyGuard": {
        "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:22",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReentrancyGuard",
            "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:39"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ReentrancyGuard",
              "label": "_status",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:37"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "SafeERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:18",
        "version": {
          "withMetadata": "56f3b47fe199a74f30abd43f547fa939c88066448b04cd5f17bdafbe2e03804a",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "Address"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC721": {
        "src": "@openzeppelin/contracts/token/ERC721/IERC721.sol:11",
        "inherit": [
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "balanceOf(address)",
          "ownerOf(uint256)",
          "safeTransferFrom(address,address,uint256)",
          "transferFrom(address,address,uint256)",
          "approve(address,uint256)",
          "getApproved(uint256)",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "safeTransferFrom(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC721Receiver": {
        "src": "@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol:11",
        "inherit": [],
        "libraries": [],
        "methods": [
          "onERC721Received(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC721Enumerable": {
        "src": "@openzeppelin/contracts/token/ERC721/extensions/IERC721Enumerable.sol:12",
        "inherit": [
          "IERC721",
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "tokenOfOwnerByIndex(address,uint256)",
          "tokenByIndex(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC721Metadata": {
        "src": "@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol:12",
        "inherit": [
          "IERC721",
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "tokenURI(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Address": {
        "src": "@openzeppelin/contracts/utils/Address.sol:9",
        "version": {
          "withMetadata": "484d2cade7f176ca5050f1f249737dd81ac6ed00490f5099f09054c1bc596b67",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:186"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Strings": {
        "src": "@openzeppelin/contracts/utils/Strings.sol:9",
        "version": {
          "withMetadata": "b16d77140251bcd9725701aa6d1902c15605c3749a720b7aac593644f6c217ac",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "MerkleProof": {
        "src": "@openzeppelin/contracts/utils/cryptography/MerkleProof.sol:15",
        "version": {
          "withMetadata": "eae9c389bfc7a3fccc9b1be4ba129d982448e261280aa30913fa3d7bc9f5440f",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC165": {
        "src": "@openzeppelin/contracts/utils/introspection/ERC165.sol:22",
        "inherit": [
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC165": {
        "src": "@openzeppelin/contracts/utils/introspection/IERC165.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "SafeMath": {
        "src": "@openzeppelin/contracts/utils/math/SafeMath.sol:16",
        "version": {
          "withMetadata": "8418487e012b6d36d0f064d32c31976a5cbfce3373a77c05261a0ae367939886",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "EnumerableMap": {
        "src": "@openzeppelin/contracts/utils/structs/EnumerableMap.sol:32",
        "version": {
          "withMetadata": "eb2563fd64638723253d815b920b9bdd7ba216c3415fd72b3339b5602807aab3",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "EnumerableSet"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "EnumerableSet": {
        "src": "@openzeppelin/contracts/utils/structs/EnumerableSet.sol:30",
        "version": {
          "withMetadata": "6ee35d052c3beaf7db7a043d937ed616f73a3d6a147dd22fd5b78a58e78e8277",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "DreadfulzNFT": {
        "src": "contracts/DreadfulzNFT.sol:12",
        "version": {
          "withMetadata": "1f1c6e99ef172dfdf16e11d5be52f7c03d962024194de5d3fc92e31fea5d75e5",
          "withoutMetadata": "29960ed72ce13327570a0e413685ef35436fbc7315ebaea5715520f442cb5eff",
          "linkedWithoutMetadata": "29960ed72ce13327570a0e413685ef35436fbc7315ebaea5715520f442cb5eff"
        },
        "inherit": [
          "PaymentSplitter",
          "ERC721A",
          "IERC721Enumerable",
          "IERC721Metadata",
          "IERC721",
          "ERC165",
          "IERC165",
          "ReentrancyGuard",
          "Ownable",
          "Context"
        ],
        "libraries": [
          "EnumerableSet",
          "EnumerableMap",
          "MerkleProof"
        ],
        "methods": [
          "()",
          "mint(uint256)",
          "presale(uint256,bytes32[])",
          "balanceOfOwner(address)",
          "mintToTeam(address,uint256)",
          "setSaleActive()",
          "set2ndSaleActive()",
          "setFinalSaleActive()",
          "setMerkleRoot(bytes32)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "DreadfulzNFT",
            "src": "contracts/DreadfulzNFT.sol:46"
          },
          {
            "kind": "state-variable-assignment",
            "name": "merkleRoot",
            "src": "contracts/DreadfulzNFT.sol:22"
          },
          {
            "kind": "state-variable-assignment",
            "name": "isSaleActive",
            "src": "contracts/DreadfulzNFT.sol:26"
          },
          {
            "kind": "state-variable-assignment",
            "name": "is2ndSaleActive",
            "src": "contracts/DreadfulzNFT.sol:27"
          },
          {
            "kind": "state-variable-assignment",
            "name": "isFinalSaleActive",
            "src": "contracts/DreadfulzNFT.sol:28"
          },
          {
            "kind": "state-variable-assignment",
            "name": "RESERVED_AMOUNT",
            "src": "contracts/DreadfulzNFT.sol:30"
          },
          {
            "kind": "state-variable-assignment",
            "name": "FIRST_SALE_AMOUNT",
            "src": "contracts/DreadfulzNFT.sol:31"
          },
          {
            "kind": "state-variable-assignment",
            "name": "SECOND_SALE_AMOUNT",
            "src": "contracts/DreadfulzNFT.sol:32"
          },
          {
            "kind": "state-variable-assignment",
            "name": "FINAL_SALE_AMOUNT",
            "src": "contracts/DreadfulzNFT.sol:33"
          },
          {
            "kind": "state-variable-assignment",
            "name": "PRESALE_PRICE",
            "src": "contracts/DreadfulzNFT.sol:35"
          },
          {
            "kind": "state-variable-assignment",
            "name": "FIRST_SALE_PRICE",
            "src": "contracts/DreadfulzNFT.sol:36"
          },
          {
            "kind": "state-variable-assignment",
            "name": "SECOND_SALE_PRICE",
            "src": "contracts/DreadfulzNFT.sol:37"
          },
          {
            "kind": "state-variable-assignment",
            "name": "FINAL_SALE_PRICE",
            "src": "contracts/DreadfulzNFT.sol:38"
          },
          {
            "kind": "state-variable-assignment",
            "name": "DEV_WALLET",
            "src": "contracts/DreadfulzNFT.sol:40"
          },
          {
            "kind": "state-variable-assignment",
            "name": "MARKETING_WALLET",
            "src": "contracts/DreadfulzNFT.sol:41"
          },
          {
            "kind": "state-variable-assignment",
            "name": "payees",
            "src": "contracts/DreadfulzNFT.sol:43"
          },
          {
            "kind": "state-variable-assignment",
            "name": "shares",
            "src": "contracts/DreadfulzNFT.sol:44"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "DreadfulzNFT",
              "label": "_holderTokens",
              "type": "t_mapping(t_address,t_struct(UintSet)2986_storage)",
              "src": "contracts/DreadfulzNFT.sol:17"
            },
            {
              "contract": "DreadfulzNFT",
              "label": "_tokenOwners",
              "type": "t_struct(UintToAddressMap)2283_storage",
              "src": "contracts/DreadfulzNFT.sol:20"
            },
            {
              "contract": "DreadfulzNFT",
              "label": "merkleRoot",
              "type": "t_bytes32",
              "src": "contracts/DreadfulzNFT.sol:22"
            },
            {
              "contract": "DreadfulzNFT",
              "label": "whitelistClaimed",
              "type": "t_mapping(t_address,t_bool)",
              "src": "contracts/DreadfulzNFT.sol:24"
            },
            {
              "contract": "DreadfulzNFT",
              "label": "isSaleActive",
              "type": "t_bool",
              "src": "contracts/DreadfulzNFT.sol:26"
            },
            {
              "contract": "DreadfulzNFT",
              "label": "is2ndSaleActive",
              "type": "t_bool",
              "src": "contracts/DreadfulzNFT.sol:27"
            },
            {
              "contract": "DreadfulzNFT",
              "label": "isFinalSaleActive",
              "type": "t_bool",
              "src": "contracts/DreadfulzNFT.sol:28"
            },
            {
              "contract": "DreadfulzNFT",
              "label": "RESERVED_AMOUNT",
              "type": "t_uint256",
              "src": "contracts/DreadfulzNFT.sol:30"
            },
            {
              "contract": "DreadfulzNFT",
              "label": "FIRST_SALE_AMOUNT",
              "type": "t_uint256",
              "src": "contracts/DreadfulzNFT.sol:31"
            },
            {
              "contract": "DreadfulzNFT",
              "label": "SECOND_SALE_AMOUNT",
              "type": "t_uint256",
              "src": "contracts/DreadfulzNFT.sol:32"
            },
            {
              "contract": "DreadfulzNFT",
              "label": "FINAL_SALE_AMOUNT",
              "type": "t_uint256",
              "src": "contracts/DreadfulzNFT.sol:33"
            },
            {
              "contract": "DreadfulzNFT",
              "label": "PRESALE_PRICE",
              "type": "t_uint256",
              "src": "contracts/DreadfulzNFT.sol:35"
            },
            {
              "contract": "DreadfulzNFT",
              "label": "FIRST_SALE_PRICE",
              "type": "t_uint256",
              "src": "contracts/DreadfulzNFT.sol:36"
            },
            {
              "contract": "DreadfulzNFT",
              "label": "SECOND_SALE_PRICE",
              "type": "t_uint256",
              "src": "contracts/DreadfulzNFT.sol:37"
            },
            {
              "contract": "DreadfulzNFT",
              "label": "FINAL_SALE_PRICE",
              "type": "t_uint256",
              "src": "contracts/DreadfulzNFT.sol:38"
            },
            {
              "contract": "DreadfulzNFT",
              "label": "DEV_WALLET",
              "type": "t_address_payable",
              "src": "contracts/DreadfulzNFT.sol:40"
            },
            {
              "contract": "DreadfulzNFT",
              "label": "MARKETING_WALLET",
              "type": "t_address_payable",
              "src": "contracts/DreadfulzNFT.sol:41"
            },
            {
              "contract": "DreadfulzNFT",
              "label": "payees",
              "type": "t_array(t_address)dyn_storage",
              "src": "contracts/DreadfulzNFT.sol:43"
            },
            {
              "contract": "DreadfulzNFT",
              "label": "shares",
              "type": "t_array(t_uint256)dyn_storage",
              "src": "contracts/DreadfulzNFT.sol:44"
            }
          ],
          "types": {
            "t_mapping(t_address,t_struct(UintSet)2986_storage)": {
              "label": "mapping(address => struct EnumerableSet.UintSet)"
            },
            "t_address": {
              "label": "address"
            },
            "t_struct(UintSet)2986_storage": {
              "label": "struct EnumerableSet.UintSet",
              "members": [
                {
                  "label": "_inner",
                  "type": "t_struct(Set)2528_storage"
                }
              ]
            },
            "t_struct(Set)2528_storage": {
              "label": "struct EnumerableSet.Set",
              "members": [
                {
                  "label": "_values",
                  "type": "t_array(t_bytes32)dyn_storage"
                },
                {
                  "label": "_indexes",
                  "type": "t_mapping(t_bytes32,t_uint256)"
                }
              ]
            },
            "t_array(t_bytes32)dyn_storage": {
              "label": "bytes32[]"
            },
            "t_bytes32": {
              "label": "bytes32"
            },
            "t_mapping(t_bytes32,t_uint256)": {
              "label": "mapping(bytes32 => uint256)"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_struct(UintToAddressMap)2283_storage": {
              "label": "struct EnumerableMap.UintToAddressMap",
              "members": [
                {
                  "label": "_inner",
                  "type": "t_struct(Map)2053_storage"
                }
              ]
            },
            "t_struct(Map)2053_storage": {
              "label": "struct EnumerableMap.Map",
              "members": [
                {
                  "label": "_keys",
                  "type": "t_struct(Bytes32Set)2722_storage"
                },
                {
                  "label": "_values",
                  "type": "t_mapping(t_bytes32,t_bytes32)"
                }
              ]
            },
            "t_struct(Bytes32Set)2722_storage": {
              "label": "struct EnumerableSet.Bytes32Set",
              "members": [
                {
                  "label": "_inner",
                  "type": "t_struct(Set)2528_storage"
                }
              ]
            },
            "t_mapping(t_bytes32,t_bytes32)": {
              "label": "mapping(bytes32 => bytes32)"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_address_payable": {
              "label": "address payable"
            },
            "t_array(t_address)dyn_storage": {
              "label": "address[]"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "DreadfulzStaking": {
        "src": "contracts/DreadfulzStaking.sol:17",
        "version": {
          "withMetadata": "05e90831afbb28f18e181443602491268210f2c6b48fe66d7700e4761a40dff2",
          "withoutMetadata": "2c7697bb44406bda1c59c4fcaa4e6d54b427fd0608ceb0c5b793659e3517c87e",
          "linkedWithoutMetadata": "2c7697bb44406bda1c59c4fcaa4e6d54b427fd0608ceb0c5b793659e3517c87e"
        },
        "inherit": [
          "Ownable",
          "Context"
        ],
        "libraries": [
          "SafeMath"
        ],
        "methods": [
          "(address,address)",
          "setTokensClaimable(bool)",
          "getStakedTokens(address)",
          "stake(uint256)",
          "stakeBatch(uint256[])",
          "stakeAll()",
          "unstake(uint256)",
          "unstakeBatch(uint256[])",
          "emergencyUnstake(uint256)",
          "updateReward(address)",
          "rewardsOwing(address)",
          "claimReward(address)",
          "unclaimedRewards(address)",
          "onERC721Received(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "DreadfulzStaking",
            "src": "contracts/DreadfulzStaking.sol:66"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "DreadfulzStaking",
              "label": "rewardsToken",
              "type": "t_contract(IERC20)663",
              "src": "contracts/DreadfulzStaking.sol:21"
            },
            {
              "contract": "DreadfulzStaking",
              "label": "dreadfulzNFT",
              "type": "t_contract(DreadfulzNFT)3571",
              "src": "contracts/DreadfulzStaking.sol:22"
            },
            {
              "contract": "DreadfulzStaking",
              "label": "rewardsPerTokenPoints",
              "type": "t_uint256",
              "src": "contracts/DreadfulzStaking.sol:24"
            },
            {
              "contract": "DreadfulzStaking",
              "label": "totalUnclaimedRewards",
              "type": "t_uint256",
              "src": "contracts/DreadfulzStaking.sol:25"
            },
            {
              "contract": "DreadfulzStaking",
              "label": "stakers",
              "type": "t_mapping(t_address,t_struct(Staker)3610_storage)",
              "src": "contracts/DreadfulzStaking.sol:42"
            },
            {
              "contract": "DreadfulzStaking",
              "label": "tokenOwner",
              "type": "t_mapping(t_uint256,t_address)",
              "src": "contracts/DreadfulzStaking.sol:45"
            },
            {
              "contract": "DreadfulzStaking",
              "label": "tokensClaimable",
              "type": "t_bool",
              "src": "contracts/DreadfulzStaking.sol:48"
            },
            {
              "contract": "DreadfulzStaking",
              "label": "initialised",
              "type": "t_bool",
              "src": "contracts/DreadfulzStaking.sol:49"
            }
          ],
          "types": {
            "t_contract(IERC20)663": {
              "label": "contract IERC20"
            },
            "t_contract(DreadfulzNFT)3571": {
              "label": "contract DreadfulzNFT"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_struct(Staker)3610_storage)": {
              "label": "mapping(address => struct DreadfulzStaking.Staker)"
            },
            "t_address": {
              "label": "address"
            },
            "t_struct(Staker)3610_storage": {
              "label": "struct DreadfulzStaking.Staker",
              "members": [
                {
                  "label": "tokenIds",
                  "type": "t_array(t_uint256)dyn_storage"
                },
                {
                  "label": "tokenIndex",
                  "type": "t_mapping(t_uint256,t_uint256)"
                },
                {
                  "label": "lastRewardPoints",
                  "type": "t_uint256"
                },
                {
                  "label": "rewardsEarned",
                  "type": "t_uint256"
                },
                {
                  "label": "rewardsReleased",
                  "type": "t_uint256"
                }
              ]
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]"
            },
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)"
            },
            "t_bool": {
              "label": "bool"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC721A": {
        "src": "erc721a/contracts/ERC721A.sol:23",
        "version": {
          "withMetadata": "d90e8953f63fb7e09b553fb57c484f25b64a2b502bb9adf41ef329e5f28fad0c",
          "withoutMetadata": "b46845ce757cb59201ed5980ba1e238b1af2a42363b8f4b5a07b70d5394d3bf0",
          "linkedWithoutMetadata": "b46845ce757cb59201ed5980ba1e238b1af2a42363b8f4b5a07b70d5394d3bf0"
        },
        "inherit": [
          "IERC721Enumerable",
          "IERC721Metadata",
          "IERC721",
          "ERC165",
          "IERC165",
          "Context"
        ],
        "libraries": [
          "Address",
          "Strings"
        ],
        "methods": [
          "(string,string,uint256)",
          "totalSupply()",
          "tokenByIndex(uint256)",
          "tokenOfOwnerByIndex(address,uint256)",
          "supportsInterface(bytes4)",
          "balanceOf(address)",
          "ownerOf(uint256)",
          "name()",
          "symbol()",
          "tokenURI(uint256)",
          "approve(address,uint256)",
          "getApproved(uint256)",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "transferFrom(address,address,uint256)",
          "safeTransferFrom(address,address,uint256)",
          "safeTransferFrom(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC721A",
            "src": "erc721a/contracts/ERC721A.sol:64"
          },
          {
            "kind": "state-variable-assignment",
            "name": "currentIndex",
            "src": "erc721a/contracts/ERC721A.sol:37"
          },
          {
            "kind": "state-variable-immutable",
            "name": "maxBatchSize",
            "src": "erc721a/contracts/ERC721A.sol:39"
          },
          {
            "kind": "state-variable-assignment",
            "name": "nextOwnerToExplicitlySet",
            "src": "erc721a/contracts/ERC721A.sol:398"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ERC721A",
              "label": "currentIndex",
              "type": "t_uint256",
              "src": "erc721a/contracts/ERC721A.sol:37"
            },
            {
              "contract": "ERC721A",
              "label": "_name",
              "type": "t_string_storage",
              "src": "erc721a/contracts/ERC721A.sol:42"
            },
            {
              "contract": "ERC721A",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "erc721a/contracts/ERC721A.sol:45"
            },
            {
              "contract": "ERC721A",
              "label": "_ownerships",
              "type": "t_mapping(t_uint256,t_struct(TokenOwnership)4292_storage)",
              "src": "erc721a/contracts/ERC721A.sol:49"
            },
            {
              "contract": "ERC721A",
              "label": "_addressData",
              "type": "t_mapping(t_address,t_struct(AddressData)4297_storage)",
              "src": "erc721a/contracts/ERC721A.sol:52"
            },
            {
              "contract": "ERC721A",
              "label": "_tokenApprovals",
              "type": "t_mapping(t_uint256,t_address)",
              "src": "erc721a/contracts/ERC721A.sol:55"
            },
            {
              "contract": "ERC721A",
              "label": "_operatorApprovals",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "src": "erc721a/contracts/ERC721A.sol:58"
            },
            {
              "contract": "ERC721A",
              "label": "nextOwnerToExplicitlySet",
              "type": "t_uint256",
              "src": "erc721a/contracts/ERC721A.sol:398"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_mapping(t_uint256,t_struct(TokenOwnership)4292_storage)": {
              "label": "mapping(uint256 => struct ERC721A.TokenOwnership)"
            },
            "t_struct(TokenOwnership)4292_storage": {
              "label": "struct ERC721A.TokenOwnership",
              "members": [
                {
                  "label": "addr",
                  "type": "t_address"
                },
                {
                  "label": "startTimestamp",
                  "type": "t_uint64"
                }
              ]
            },
            "t_address": {
              "label": "address"
            },
            "t_uint64": {
              "label": "uint64"
            },
            "t_mapping(t_address,t_struct(AddressData)4297_storage)": {
              "label": "mapping(address => struct ERC721A.AddressData)"
            },
            "t_struct(AddressData)4297_storage": {
              "label": "struct ERC721A.AddressData",
              "members": [
                {
                  "label": "balance",
                  "type": "t_uint128"
                },
                {
                  "label": "numberMinted",
                  "type": "t_uint128"
                }
              ]
            },
            "t_uint128": {
              "label": "uint128"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_bool": {
              "label": "bool"
            }
          },
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "Ownable": {
        "src": "@openzeppelin/contracts/access/Ownable.sol:20",
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin/contracts/access/Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "Ownable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ReentrancyGuard": {
        "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:22",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReentrancyGuard",
            "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:39"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ReentrancyGuard",
              "label": "_status",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:37"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC721": {
        "src": "@openzeppelin/contracts/token/ERC721/IERC721.sol:11",
        "inherit": [
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "balanceOf(address)",
          "ownerOf(uint256)",
          "safeTransferFrom(address,address,uint256)",
          "transferFrom(address,address,uint256)",
          "approve(address,uint256)",
          "getApproved(uint256)",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "safeTransferFrom(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC721Receiver": {
        "src": "@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol:11",
        "inherit": [],
        "libraries": [],
        "methods": [
          "onERC721Received(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC721Enumerable": {
        "src": "@openzeppelin/contracts/token/ERC721/extensions/IERC721Enumerable.sol:12",
        "inherit": [
          "IERC721",
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "tokenOfOwnerByIndex(address,uint256)",
          "tokenByIndex(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC721Metadata": {
        "src": "@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol:12",
        "inherit": [
          "IERC721",
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "tokenURI(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Address": {
        "src": "@openzeppelin/contracts/utils/Address.sol:9",
        "version": {
          "withMetadata": "484d2cade7f176ca5050f1f249737dd81ac6ed00490f5099f09054c1bc596b67",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:186"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Strings": {
        "src": "@openzeppelin/contracts/utils/Strings.sol:9",
        "version": {
          "withMetadata": "b16d77140251bcd9725701aa6d1902c15605c3749a720b7aac593644f6c217ac",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC165": {
        "src": "@openzeppelin/contracts/utils/introspection/ERC165.sol:22",
        "inherit": [
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC165": {
        "src": "@openzeppelin/contracts/utils/introspection/IERC165.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "MemorialNFT": {
        "src": "contracts/MemorialNFT.sol:8",
        "version": {
          "withMetadata": "5661e000f428cc92cc191e318e5e3ec1317644c6cf76e954523250f3613325ff",
          "withoutMetadata": "fe72f1679185379fd30966dba55bd26a39dee60dcb38413e7d3ef7bc13acbc1a",
          "linkedWithoutMetadata": "fe72f1679185379fd30966dba55bd26a39dee60dcb38413e7d3ef7bc13acbc1a"
        },
        "inherit": [
          "ERC721A",
          "IERC721Enumerable",
          "IERC721Metadata",
          "IERC721",
          "ERC165",
          "IERC165",
          "ReentrancyGuard",
          "Ownable",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "()",
          "mint(uint256)",
          "mintToTeam(address,uint256)",
          "setSaleActive()",
          "set2ndSaleActive()",
          "setFinalSaleActive()",
          "withdrawToOwners()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "MemorialNFT",
            "src": "contracts/MemorialNFT.sol:26"
          },
          {
            "kind": "state-variable-assignment",
            "name": "isSaleActive",
            "src": "contracts/MemorialNFT.sol:9"
          },
          {
            "kind": "state-variable-assignment",
            "name": "is2ndSaleActive",
            "src": "contracts/MemorialNFT.sol:10"
          },
          {
            "kind": "state-variable-assignment",
            "name": "isFinalSaleActive",
            "src": "contracts/MemorialNFT.sol:11"
          },
          {
            "kind": "state-variable-assignment",
            "name": "RESERVED_AMOUNT",
            "src": "contracts/MemorialNFT.sol:13"
          },
          {
            "kind": "state-variable-assignment",
            "name": "FIRST_SALE_AMOUNT",
            "src": "contracts/MemorialNFT.sol:14"
          },
          {
            "kind": "state-variable-assignment",
            "name": "SECOND_SALE_AMOUNT",
            "src": "contracts/MemorialNFT.sol:15"
          },
          {
            "kind": "state-variable-assignment",
            "name": "FINAL_SALE_AMOUNT",
            "src": "contracts/MemorialNFT.sol:16"
          },
          {
            "kind": "state-variable-assignment",
            "name": "FIRST_SALE_PRICE",
            "src": "contracts/MemorialNFT.sol:18"
          },
          {
            "kind": "state-variable-assignment",
            "name": "SECOND_SALE_PRICE",
            "src": "contracts/MemorialNFT.sol:19"
          },
          {
            "kind": "state-variable-assignment",
            "name": "FINAL_SALE_PRICE",
            "src": "contracts/MemorialNFT.sol:20"
          },
          {
            "kind": "state-variable-assignment",
            "name": "DEV_WALLET",
            "src": "contracts/MemorialNFT.sol:22"
          },
          {
            "kind": "state-variable-assignment",
            "name": "DESIGN_WALLET",
            "src": "contracts/MemorialNFT.sol:23"
          },
          {
            "kind": "state-variable-assignment",
            "name": "MARKETING_WALLET",
            "src": "contracts/MemorialNFT.sol:24"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "MemorialNFT",
              "label": "isSaleActive",
              "type": "t_bool",
              "src": "contracts/MemorialNFT.sol:9"
            },
            {
              "contract": "MemorialNFT",
              "label": "is2ndSaleActive",
              "type": "t_bool",
              "src": "contracts/MemorialNFT.sol:10"
            },
            {
              "contract": "MemorialNFT",
              "label": "isFinalSaleActive",
              "type": "t_bool",
              "src": "contracts/MemorialNFT.sol:11"
            },
            {
              "contract": "MemorialNFT",
              "label": "RESERVED_AMOUNT",
              "type": "t_uint256",
              "src": "contracts/MemorialNFT.sol:13"
            },
            {
              "contract": "MemorialNFT",
              "label": "FIRST_SALE_AMOUNT",
              "type": "t_uint256",
              "src": "contracts/MemorialNFT.sol:14"
            },
            {
              "contract": "MemorialNFT",
              "label": "SECOND_SALE_AMOUNT",
              "type": "t_uint256",
              "src": "contracts/MemorialNFT.sol:15"
            },
            {
              "contract": "MemorialNFT",
              "label": "FINAL_SALE_AMOUNT",
              "type": "t_uint256",
              "src": "contracts/MemorialNFT.sol:16"
            },
            {
              "contract": "MemorialNFT",
              "label": "FIRST_SALE_PRICE",
              "type": "t_uint256",
              "src": "contracts/MemorialNFT.sol:18"
            },
            {
              "contract": "MemorialNFT",
              "label": "SECOND_SALE_PRICE",
              "type": "t_uint256",
              "src": "contracts/MemorialNFT.sol:19"
            },
            {
              "contract": "MemorialNFT",
              "label": "FINAL_SALE_PRICE",
              "type": "t_uint256",
              "src": "contracts/MemorialNFT.sol:20"
            },
            {
              "contract": "MemorialNFT",
              "label": "DEV_WALLET",
              "type": "t_address_payable",
              "src": "contracts/MemorialNFT.sol:22"
            },
            {
              "contract": "MemorialNFT",
              "label": "DESIGN_WALLET",
              "type": "t_address_payable",
              "src": "contracts/MemorialNFT.sol:23"
            },
            {
              "contract": "MemorialNFT",
              "label": "MARKETING_WALLET",
              "type": "t_address_payable",
              "src": "contracts/MemorialNFT.sol:24"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_address_payable": {
              "label": "address payable"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC721A": {
        "src": "erc721a/contracts/ERC721A.sol:23",
        "version": {
          "withMetadata": "d90e8953f63fb7e09b553fb57c484f25b64a2b502bb9adf41ef329e5f28fad0c",
          "withoutMetadata": "b46845ce757cb59201ed5980ba1e238b1af2a42363b8f4b5a07b70d5394d3bf0",
          "linkedWithoutMetadata": "b46845ce757cb59201ed5980ba1e238b1af2a42363b8f4b5a07b70d5394d3bf0"
        },
        "inherit": [
          "IERC721Enumerable",
          "IERC721Metadata",
          "IERC721",
          "ERC165",
          "IERC165",
          "Context"
        ],
        "libraries": [
          "Address",
          "Strings"
        ],
        "methods": [
          "(string,string,uint256)",
          "totalSupply()",
          "tokenByIndex(uint256)",
          "tokenOfOwnerByIndex(address,uint256)",
          "supportsInterface(bytes4)",
          "balanceOf(address)",
          "ownerOf(uint256)",
          "name()",
          "symbol()",
          "tokenURI(uint256)",
          "approve(address,uint256)",
          "getApproved(uint256)",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "transferFrom(address,address,uint256)",
          "safeTransferFrom(address,address,uint256)",
          "safeTransferFrom(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC721A",
            "src": "erc721a/contracts/ERC721A.sol:64"
          },
          {
            "kind": "state-variable-assignment",
            "name": "currentIndex",
            "src": "erc721a/contracts/ERC721A.sol:37"
          },
          {
            "kind": "state-variable-immutable",
            "name": "maxBatchSize",
            "src": "erc721a/contracts/ERC721A.sol:39"
          },
          {
            "kind": "state-variable-assignment",
            "name": "nextOwnerToExplicitlySet",
            "src": "erc721a/contracts/ERC721A.sol:398"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ERC721A",
              "label": "currentIndex",
              "type": "t_uint256",
              "src": "erc721a/contracts/ERC721A.sol:37"
            },
            {
              "contract": "ERC721A",
              "label": "_name",
              "type": "t_string_storage",
              "src": "erc721a/contracts/ERC721A.sol:42"
            },
            {
              "contract": "ERC721A",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "erc721a/contracts/ERC721A.sol:45"
            },
            {
              "contract": "ERC721A",
              "label": "_ownerships",
              "type": "t_mapping(t_uint256,t_struct(TokenOwnership)1204_storage)",
              "src": "erc721a/contracts/ERC721A.sol:49"
            },
            {
              "contract": "ERC721A",
              "label": "_addressData",
              "type": "t_mapping(t_address,t_struct(AddressData)1209_storage)",
              "src": "erc721a/contracts/ERC721A.sol:52"
            },
            {
              "contract": "ERC721A",
              "label": "_tokenApprovals",
              "type": "t_mapping(t_uint256,t_address)",
              "src": "erc721a/contracts/ERC721A.sol:55"
            },
            {
              "contract": "ERC721A",
              "label": "_operatorApprovals",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "src": "erc721a/contracts/ERC721A.sol:58"
            },
            {
              "contract": "ERC721A",
              "label": "nextOwnerToExplicitlySet",
              "type": "t_uint256",
              "src": "erc721a/contracts/ERC721A.sol:398"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_mapping(t_uint256,t_struct(TokenOwnership)1204_storage)": {
              "label": "mapping(uint256 => struct ERC721A.TokenOwnership)"
            },
            "t_struct(TokenOwnership)1204_storage": {
              "label": "struct ERC721A.TokenOwnership",
              "members": [
                {
                  "label": "addr",
                  "type": "t_address"
                },
                {
                  "label": "startTimestamp",
                  "type": "t_uint64"
                }
              ]
            },
            "t_address": {
              "label": "address"
            },
            "t_uint64": {
              "label": "uint64"
            },
            "t_mapping(t_address,t_struct(AddressData)1209_storage)": {
              "label": "mapping(address => struct ERC721A.AddressData)"
            },
            "t_struct(AddressData)1209_storage": {
              "label": "struct ERC721A.AddressData",
              "members": [
                {
                  "label": "balance",
                  "type": "t_uint128"
                },
                {
                  "label": "numberMinted",
                  "type": "t_uint128"
                }
              ]
            },
            "t_uint128": {
              "label": "uint128"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_bool": {
              "label": "bool"
            }
          },
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "Ownable": {
        "src": "@openzeppelin/contracts/access/Ownable.sol:20",
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin/contracts/access/Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "Ownable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ReentrancyGuard": {
        "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:22",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReentrancyGuard",
            "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:39"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ReentrancyGuard",
              "label": "_status",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:37"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC721": {
        "src": "@openzeppelin/contracts/token/ERC721/IERC721.sol:11",
        "inherit": [
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "balanceOf(address)",
          "ownerOf(uint256)",
          "safeTransferFrom(address,address,uint256)",
          "transferFrom(address,address,uint256)",
          "approve(address,uint256)",
          "getApproved(uint256)",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "safeTransferFrom(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC721Receiver": {
        "src": "@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol:11",
        "inherit": [],
        "libraries": [],
        "methods": [
          "onERC721Received(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC721Enumerable": {
        "src": "@openzeppelin/contracts/token/ERC721/extensions/IERC721Enumerable.sol:12",
        "inherit": [
          "IERC721",
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "tokenOfOwnerByIndex(address,uint256)",
          "tokenByIndex(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC721Metadata": {
        "src": "@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol:12",
        "inherit": [
          "IERC721",
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "tokenURI(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Address": {
        "src": "@openzeppelin/contracts/utils/Address.sol:9",
        "version": {
          "withMetadata": "484d2cade7f176ca5050f1f249737dd81ac6ed00490f5099f09054c1bc596b67",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:186"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Strings": {
        "src": "@openzeppelin/contracts/utils/Strings.sol:9",
        "version": {
          "withMetadata": "b16d77140251bcd9725701aa6d1902c15605c3749a720b7aac593644f6c217ac",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC165": {
        "src": "@openzeppelin/contracts/utils/introspection/ERC165.sol:22",
        "inherit": [
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC165": {
        "src": "@openzeppelin/contracts/utils/introspection/IERC165.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "AmazonMonkey": {
        "src": "contracts/AmazonMonkey.sol:8",
        "version": {
          "withMetadata": "2992593b229392201f617f6ed523e63a1dd3139ef979551f5e85e01450a7d779",
          "withoutMetadata": "416bb0d8dff195942a0e394805dbd6f01650e591bbe2ef4ad9c7ae3ecec7df18",
          "linkedWithoutMetadata": "416bb0d8dff195942a0e394805dbd6f01650e591bbe2ef4ad9c7ae3ecec7df18"
        },
        "inherit": [
          "ERC721A",
          "IERC721Enumerable",
          "IERC721Metadata",
          "IERC721",
          "ERC165",
          "IERC165",
          "ReentrancyGuard",
          "Ownable",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "()",
          "mint(uint256)",
          "mintToTeam(address,uint256)",
          "setSaleActive()",
          "set2ndSaleActive()",
          "setFinalSaleActive()",
          "withdrawToOwners()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "AmazonMonkey",
            "src": "contracts/AmazonMonkey.sol:27"
          },
          {
            "kind": "state-variable-assignment",
            "name": "isSaleActive",
            "src": "contracts/AmazonMonkey.sol:10"
          },
          {
            "kind": "state-variable-assignment",
            "name": "is2ndSaleActive",
            "src": "contracts/AmazonMonkey.sol:11"
          },
          {
            "kind": "state-variable-assignment",
            "name": "isFinalSaleActive",
            "src": "contracts/AmazonMonkey.sol:12"
          },
          {
            "kind": "state-variable-assignment",
            "name": "RESERVED_AMOUNT",
            "src": "contracts/AmazonMonkey.sol:14"
          },
          {
            "kind": "state-variable-assignment",
            "name": "FIRST_SALE_AMOUNT",
            "src": "contracts/AmazonMonkey.sol:15"
          },
          {
            "kind": "state-variable-assignment",
            "name": "SECOND_SALE_AMOUNT",
            "src": "contracts/AmazonMonkey.sol:16"
          },
          {
            "kind": "state-variable-assignment",
            "name": "FINAL_SALE_AMOUNT",
            "src": "contracts/AmazonMonkey.sol:17"
          },
          {
            "kind": "state-variable-assignment",
            "name": "FIRST_SALE_PRICE",
            "src": "contracts/AmazonMonkey.sol:19"
          },
          {
            "kind": "state-variable-assignment",
            "name": "SECOND_SALE_PRICE",
            "src": "contracts/AmazonMonkey.sol:20"
          },
          {
            "kind": "state-variable-assignment",
            "name": "FINAL_SALE_PRICE",
            "src": "contracts/AmazonMonkey.sol:21"
          },
          {
            "kind": "state-variable-assignment",
            "name": "DEV_WALLET",
            "src": "contracts/AmazonMonkey.sol:23"
          },
          {
            "kind": "state-variable-assignment",
            "name": "DESIGN_WALLET",
            "src": "contracts/AmazonMonkey.sol:24"
          },
          {
            "kind": "state-variable-assignment",
            "name": "MARKETING_WALLET",
            "src": "contracts/AmazonMonkey.sol:25"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "AmazonMonkey",
              "label": "isSaleActive",
              "type": "t_bool",
              "src": "contracts/AmazonMonkey.sol:10"
            },
            {
              "contract": "AmazonMonkey",
              "label": "is2ndSaleActive",
              "type": "t_bool",
              "src": "contracts/AmazonMonkey.sol:11"
            },
            {
              "contract": "AmazonMonkey",
              "label": "isFinalSaleActive",
              "type": "t_bool",
              "src": "contracts/AmazonMonkey.sol:12"
            },
            {
              "contract": "AmazonMonkey",
              "label": "RESERVED_AMOUNT",
              "type": "t_uint256",
              "src": "contracts/AmazonMonkey.sol:14"
            },
            {
              "contract": "AmazonMonkey",
              "label": "FIRST_SALE_AMOUNT",
              "type": "t_uint256",
              "src": "contracts/AmazonMonkey.sol:15"
            },
            {
              "contract": "AmazonMonkey",
              "label": "SECOND_SALE_AMOUNT",
              "type": "t_uint256",
              "src": "contracts/AmazonMonkey.sol:16"
            },
            {
              "contract": "AmazonMonkey",
              "label": "FINAL_SALE_AMOUNT",
              "type": "t_uint256",
              "src": "contracts/AmazonMonkey.sol:17"
            },
            {
              "contract": "AmazonMonkey",
              "label": "FIRST_SALE_PRICE",
              "type": "t_uint256",
              "src": "contracts/AmazonMonkey.sol:19"
            },
            {
              "contract": "AmazonMonkey",
              "label": "SECOND_SALE_PRICE",
              "type": "t_uint256",
              "src": "contracts/AmazonMonkey.sol:20"
            },
            {
              "contract": "AmazonMonkey",
              "label": "FINAL_SALE_PRICE",
              "type": "t_uint256",
              "src": "contracts/AmazonMonkey.sol:21"
            },
            {
              "contract": "AmazonMonkey",
              "label": "DEV_WALLET",
              "type": "t_address_payable",
              "src": "contracts/AmazonMonkey.sol:23"
            },
            {
              "contract": "AmazonMonkey",
              "label": "DESIGN_WALLET",
              "type": "t_address_payable",
              "src": "contracts/AmazonMonkey.sol:24"
            },
            {
              "contract": "AmazonMonkey",
              "label": "MARKETING_WALLET",
              "type": "t_address_payable",
              "src": "contracts/AmazonMonkey.sol:25"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_address_payable": {
              "label": "address payable"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC721A": {
        "src": "erc721a/contracts/ERC721A.sol:23",
        "version": {
          "withMetadata": "d90e8953f63fb7e09b553fb57c484f25b64a2b502bb9adf41ef329e5f28fad0c",
          "withoutMetadata": "b46845ce757cb59201ed5980ba1e238b1af2a42363b8f4b5a07b70d5394d3bf0",
          "linkedWithoutMetadata": "b46845ce757cb59201ed5980ba1e238b1af2a42363b8f4b5a07b70d5394d3bf0"
        },
        "inherit": [
          "IERC721Enumerable",
          "IERC721Metadata",
          "IERC721",
          "ERC165",
          "IERC165",
          "Context"
        ],
        "libraries": [
          "Address",
          "Strings"
        ],
        "methods": [
          "(string,string,uint256)",
          "totalSupply()",
          "tokenByIndex(uint256)",
          "tokenOfOwnerByIndex(address,uint256)",
          "supportsInterface(bytes4)",
          "balanceOf(address)",
          "ownerOf(uint256)",
          "name()",
          "symbol()",
          "tokenURI(uint256)",
          "approve(address,uint256)",
          "getApproved(uint256)",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "transferFrom(address,address,uint256)",
          "safeTransferFrom(address,address,uint256)",
          "safeTransferFrom(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC721A",
            "src": "erc721a/contracts/ERC721A.sol:64"
          },
          {
            "kind": "state-variable-assignment",
            "name": "currentIndex",
            "src": "erc721a/contracts/ERC721A.sol:37"
          },
          {
            "kind": "state-variable-immutable",
            "name": "maxBatchSize",
            "src": "erc721a/contracts/ERC721A.sol:39"
          },
          {
            "kind": "state-variable-assignment",
            "name": "nextOwnerToExplicitlySet",
            "src": "erc721a/contracts/ERC721A.sol:398"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ERC721A",
              "label": "currentIndex",
              "type": "t_uint256",
              "src": "erc721a/contracts/ERC721A.sol:37"
            },
            {
              "contract": "ERC721A",
              "label": "_name",
              "type": "t_string_storage",
              "src": "erc721a/contracts/ERC721A.sol:42"
            },
            {
              "contract": "ERC721A",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "erc721a/contracts/ERC721A.sol:45"
            },
            {
              "contract": "ERC721A",
              "label": "_ownerships",
              "type": "t_mapping(t_uint256,t_struct(TokenOwnership)1204_storage)",
              "src": "erc721a/contracts/ERC721A.sol:49"
            },
            {
              "contract": "ERC721A",
              "label": "_addressData",
              "type": "t_mapping(t_address,t_struct(AddressData)1209_storage)",
              "src": "erc721a/contracts/ERC721A.sol:52"
            },
            {
              "contract": "ERC721A",
              "label": "_tokenApprovals",
              "type": "t_mapping(t_uint256,t_address)",
              "src": "erc721a/contracts/ERC721A.sol:55"
            },
            {
              "contract": "ERC721A",
              "label": "_operatorApprovals",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "src": "erc721a/contracts/ERC721A.sol:58"
            },
            {
              "contract": "ERC721A",
              "label": "nextOwnerToExplicitlySet",
              "type": "t_uint256",
              "src": "erc721a/contracts/ERC721A.sol:398"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_mapping(t_uint256,t_struct(TokenOwnership)1204_storage)": {
              "label": "mapping(uint256 => struct ERC721A.TokenOwnership)"
            },
            "t_struct(TokenOwnership)1204_storage": {
              "label": "struct ERC721A.TokenOwnership",
              "members": [
                {
                  "label": "addr",
                  "type": "t_address"
                },
                {
                  "label": "startTimestamp",
                  "type": "t_uint64"
                }
              ]
            },
            "t_address": {
              "label": "address"
            },
            "t_uint64": {
              "label": "uint64"
            },
            "t_mapping(t_address,t_struct(AddressData)1209_storage)": {
              "label": "mapping(address => struct ERC721A.AddressData)"
            },
            "t_struct(AddressData)1209_storage": {
              "label": "struct ERC721A.AddressData",
              "members": [
                {
                  "label": "balance",
                  "type": "t_uint128"
                },
                {
                  "label": "numberMinted",
                  "type": "t_uint128"
                }
              ]
            },
            "t_uint128": {
              "label": "uint128"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_bool": {
              "label": "bool"
            }
          },
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "Ownable": {
        "src": "@openzeppelin/contracts/access/Ownable.sol:20",
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin/contracts/access/Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "Ownable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "PaymentSplitter": {
        "src": "@openzeppelin/contracts/finance/PaymentSplitter.sol:27",
        "version": {
          "withMetadata": "7ca80aa715b481cb550ce3949750475a418af4045c653fe6bed689f443f26bfb",
          "withoutMetadata": "a4e026d1eefdf675d63e6c33090429de6d5c3dc870d8924a7112b284573f6a31",
          "linkedWithoutMetadata": "a4e026d1eefdf675d63e6c33090429de6d5c3dc870d8924a7112b284573f6a31"
        },
        "inherit": [
          "Context"
        ],
        "libraries": [
          "Address",
          "SafeERC20"
        ],
        "methods": [
          "(address[],uint256[])",
          "()",
          "totalShares()",
          "totalReleased()",
          "totalReleased(address)",
          "shares(address)",
          "released(address)",
          "released(address,address)",
          "payee(uint256)",
          "release(address payable)",
          "release(address,address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "PaymentSplitter",
            "src": "@openzeppelin/contracts/finance/PaymentSplitter.sol:50"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "PaymentSplitter",
              "label": "_totalShares",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts/finance/PaymentSplitter.sol:33"
            },
            {
              "contract": "PaymentSplitter",
              "label": "_totalReleased",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts/finance/PaymentSplitter.sol:34"
            },
            {
              "contract": "PaymentSplitter",
              "label": "_shares",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin/contracts/finance/PaymentSplitter.sol:36"
            },
            {
              "contract": "PaymentSplitter",
              "label": "_released",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin/contracts/finance/PaymentSplitter.sol:37"
            },
            {
              "contract": "PaymentSplitter",
              "label": "_payees",
              "type": "t_array(t_address)dyn_storage",
              "src": "@openzeppelin/contracts/finance/PaymentSplitter.sol:38"
            },
            {
              "contract": "PaymentSplitter",
              "label": "_erc20TotalReleased",
              "type": "t_mapping(t_contract(IERC20)663,t_uint256)",
              "src": "@openzeppelin/contracts/finance/PaymentSplitter.sol:40"
            },
            {
              "contract": "PaymentSplitter",
              "label": "_erc20Released",
              "type": "t_mapping(t_contract(IERC20)663,t_mapping(t_address,t_uint256))",
              "src": "@openzeppelin/contracts/finance/PaymentSplitter.sol:41"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_array(t_address)dyn_storage": {
              "label": "address[]"
            },
            "t_mapping(t_contract(IERC20)663,t_uint256)": {
              "label": "mapping(contract IERC20 => uint256)"
            },
            "t_contract(IERC20)663": {
              "label": "contract IERC20"
            },
            "t_mapping(t_contract(IERC20)663,t_mapping(t_address,t_uint256))": {
              "label": "mapping(contract IERC20 => mapping(address => uint256))"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ReentrancyGuard": {
        "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:22",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReentrancyGuard",
            "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:39"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ReentrancyGuard",
              "label": "_status",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:37"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "SafeERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:18",
        "version": {
          "withMetadata": "56f3b47fe199a74f30abd43f547fa939c88066448b04cd5f17bdafbe2e03804a",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "Address"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC721": {
        "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:19",
        "version": {
          "withMetadata": "a97b2fc6d546756af2e82361f54c6147d0eff33ddbe0aee27e1a8fdf775a7e23",
          "withoutMetadata": "e6b415ab52f61fe661612cb1ec1cef049bd71a34c9983a70c5faabee2370fb2e",
          "linkedWithoutMetadata": "e6b415ab52f61fe661612cb1ec1cef049bd71a34c9983a70c5faabee2370fb2e"
        },
        "inherit": [
          "IERC721Metadata",
          "IERC721",
          "ERC165",
          "IERC165",
          "Context"
        ],
        "libraries": [
          "Address",
          "Strings"
        ],
        "methods": [
          "(string,string)",
          "supportsInterface(bytes4)",
          "balanceOf(address)",
          "ownerOf(uint256)",
          "name()",
          "symbol()",
          "tokenURI(uint256)",
          "approve(address,uint256)",
          "getApproved(uint256)",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "transferFrom(address,address,uint256)",
          "safeTransferFrom(address,address,uint256)",
          "safeTransferFrom(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC721",
            "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:44"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ERC721",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:24"
            },
            {
              "contract": "ERC721",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:27"
            },
            {
              "contract": "ERC721",
              "label": "_owners",
              "type": "t_mapping(t_uint256,t_address)",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:30"
            },
            {
              "contract": "ERC721",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:33"
            },
            {
              "contract": "ERC721",
              "label": "_tokenApprovals",
              "type": "t_mapping(t_uint256,t_address)",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:36"
            },
            {
              "contract": "ERC721",
              "label": "_operatorApprovals",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:39"
            }
          ],
          "types": {
            "t_string_storage": {
              "label": "string"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_address": {
              "label": "address"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_bool": {
              "label": "bool"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC721": {
        "src": "@openzeppelin/contracts/token/ERC721/IERC721.sol:11",
        "inherit": [
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "balanceOf(address)",
          "ownerOf(uint256)",
          "safeTransferFrom(address,address,uint256)",
          "transferFrom(address,address,uint256)",
          "approve(address,uint256)",
          "getApproved(uint256)",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "safeTransferFrom(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC721Receiver": {
        "src": "@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol:11",
        "inherit": [],
        "libraries": [],
        "methods": [
          "onERC721Received(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC721Burnable": {
        "src": "@openzeppelin/contracts/token/ERC721/extensions/ERC721Burnable.sol:13",
        "inherit": [
          "ERC721",
          "IERC721Metadata",
          "IERC721",
          "ERC165",
          "IERC165",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "burn(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC721Enumerable": {
        "src": "@openzeppelin/contracts/token/ERC721/extensions/IERC721Enumerable.sol:12",
        "inherit": [
          "IERC721",
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "tokenOfOwnerByIndex(address,uint256)",
          "tokenByIndex(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC721Metadata": {
        "src": "@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol:12",
        "inherit": [
          "IERC721",
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "tokenURI(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Address": {
        "src": "@openzeppelin/contracts/utils/Address.sol:9",
        "version": {
          "withMetadata": "484d2cade7f176ca5050f1f249737dd81ac6ed00490f5099f09054c1bc596b67",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:186"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Strings": {
        "src": "@openzeppelin/contracts/utils/Strings.sol:9",
        "version": {
          "withMetadata": "b16d77140251bcd9725701aa6d1902c15605c3749a720b7aac593644f6c217ac",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "MerkleProof": {
        "src": "@openzeppelin/contracts/utils/cryptography/MerkleProof.sol:15",
        "version": {
          "withMetadata": "eae9c389bfc7a3fccc9b1be4ba129d982448e261280aa30913fa3d7bc9f5440f",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC165": {
        "src": "@openzeppelin/contracts/utils/introspection/ERC165.sol:22",
        "inherit": [
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC165": {
        "src": "@openzeppelin/contracts/utils/introspection/IERC165.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "AmazonMonkey": {
        "src": "contracts/AmazonMonkey.sol:8",
        "version": {
          "withMetadata": "51634785a8f5522a945f35701c845a0bcd1d34b45b65b4583583c7919b6f8b3e",
          "withoutMetadata": "4cc54b43ea125baca20c0cc621fe3f2ff4eed468c0862adac4cc3085716aa871",
          "linkedWithoutMetadata": "4cc54b43ea125baca20c0cc621fe3f2ff4eed468c0862adac4cc3085716aa871"
        },
        "inherit": [
          "ERC721A",
          "IERC721Enumerable",
          "IERC721Metadata",
          "IERC721",
          "ERC165",
          "IERC165",
          "ReentrancyGuard",
          "Ownable",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "()",
          "mint(uint256)",
          "mintToTeam(address,uint256)",
          "setSaleActive()",
          "set2ndSaleActive()",
          "setFinalSaleActive()",
          "withdrawToOwners()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "AmazonMonkey",
            "src": "contracts/AmazonMonkey.sol:29"
          },
          {
            "kind": "state-variable-assignment",
            "name": "isSaleActive",
            "src": "contracts/AmazonMonkey.sol:10"
          },
          {
            "kind": "state-variable-assignment",
            "name": "is2ndSaleActive",
            "src": "contracts/AmazonMonkey.sol:11"
          },
          {
            "kind": "state-variable-assignment",
            "name": "isFinalSaleActive",
            "src": "contracts/AmazonMonkey.sol:12"
          },
          {
            "kind": "state-variable-assignment",
            "name": "RESERVED_AMOUNT",
            "src": "contracts/AmazonMonkey.sol:14"
          },
          {
            "kind": "state-variable-assignment",
            "name": "FIRST_SALE_AMOUNT",
            "src": "contracts/AmazonMonkey.sol:15"
          },
          {
            "kind": "state-variable-assignment",
            "name": "SECOND_SALE_AMOUNT",
            "src": "contracts/AmazonMonkey.sol:16"
          },
          {
            "kind": "state-variable-assignment",
            "name": "FINAL_SALE_AMOUNT",
            "src": "contracts/AmazonMonkey.sol:17"
          },
          {
            "kind": "state-variable-assignment",
            "name": "FIRST_SALE_PRICE",
            "src": "contracts/AmazonMonkey.sol:19"
          },
          {
            "kind": "state-variable-assignment",
            "name": "SECOND_SALE_PRICE",
            "src": "contracts/AmazonMonkey.sol:20"
          },
          {
            "kind": "state-variable-assignment",
            "name": "FINAL_SALE_PRICE",
            "src": "contracts/AmazonMonkey.sol:21"
          },
          {
            "kind": "state-variable-assignment",
            "name": "DEV_WALLET",
            "src": "contracts/AmazonMonkey.sol:25"
          },
          {
            "kind": "state-variable-assignment",
            "name": "DESIGN_WALLET",
            "src": "contracts/AmazonMonkey.sol:26"
          },
          {
            "kind": "state-variable-assignment",
            "name": "MARKETING_WALLET",
            "src": "contracts/AmazonMonkey.sol:27"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "AmazonMonkey",
              "label": "isSaleActive",
              "type": "t_bool",
              "src": "contracts/AmazonMonkey.sol:10"
            },
            {
              "contract": "AmazonMonkey",
              "label": "is2ndSaleActive",
              "type": "t_bool",
              "src": "contracts/AmazonMonkey.sol:11"
            },
            {
              "contract": "AmazonMonkey",
              "label": "isFinalSaleActive",
              "type": "t_bool",
              "src": "contracts/AmazonMonkey.sol:12"
            },
            {
              "contract": "AmazonMonkey",
              "label": "RESERVED_AMOUNT",
              "type": "t_uint256",
              "src": "contracts/AmazonMonkey.sol:14"
            },
            {
              "contract": "AmazonMonkey",
              "label": "FIRST_SALE_AMOUNT",
              "type": "t_uint256",
              "src": "contracts/AmazonMonkey.sol:15"
            },
            {
              "contract": "AmazonMonkey",
              "label": "SECOND_SALE_AMOUNT",
              "type": "t_uint256",
              "src": "contracts/AmazonMonkey.sol:16"
            },
            {
              "contract": "AmazonMonkey",
              "label": "FINAL_SALE_AMOUNT",
              "type": "t_uint256",
              "src": "contracts/AmazonMonkey.sol:17"
            },
            {
              "contract": "AmazonMonkey",
              "label": "FIRST_SALE_PRICE",
              "type": "t_uint256",
              "src": "contracts/AmazonMonkey.sol:19"
            },
            {
              "contract": "AmazonMonkey",
              "label": "SECOND_SALE_PRICE",
              "type": "t_uint256",
              "src": "contracts/AmazonMonkey.sol:20"
            },
            {
              "contract": "AmazonMonkey",
              "label": "FINAL_SALE_PRICE",
              "type": "t_uint256",
              "src": "contracts/AmazonMonkey.sol:21"
            },
            {
              "contract": "AmazonMonkey",
              "label": "tokensByOwner",
              "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
              "src": "contracts/AmazonMonkey.sol:23"
            },
            {
              "contract": "AmazonMonkey",
              "label": "DEV_WALLET",
              "type": "t_address_payable",
              "src": "contracts/AmazonMonkey.sol:25"
            },
            {
              "contract": "AmazonMonkey",
              "label": "DESIGN_WALLET",
              "type": "t_address_payable",
              "src": "contracts/AmazonMonkey.sol:26"
            },
            {
              "contract": "AmazonMonkey",
              "label": "MARKETING_WALLET",
              "type": "t_address_payable",
              "src": "contracts/AmazonMonkey.sol:27"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
              "label": "mapping(address => uint256[])"
            },
            "t_address": {
              "label": "address"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]"
            },
            "t_address_payable": {
              "label": "address payable"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "BaseERC721": {
        "src": "contracts/BaseERC721.sol:10",
        "version": {
          "withMetadata": "10fbc12c0368ed1a8113bf74177bb2d2bf37cc55cafb972aafa8d6f04e404235",
          "withoutMetadata": "fb928dd281db7cf80be9708f6152c115a8640a5e3d5ac43e40dccb8443a932a5",
          "linkedWithoutMetadata": "fb928dd281db7cf80be9708f6152c115a8640a5e3d5ac43e40dccb8443a932a5"
        },
        "inherit": [
          "ReentrancyGuard",
          "Ownable",
          "ERC721EnumB",
          "IERC721Enumerable",
          "ERC721B",
          "IERC721Metadata",
          "IERC721",
          "ERC165",
          "IERC165",
          "Context"
        ],
        "libraries": [
          "Strings"
        ],
        "methods": [
          "(uint256,uint256,string,string,string)",
          "setExtension(string)",
          "setUri(string)",
          "setMax(uint256)",
          "burn(uint256)",
          "setSupply(uint256)",
          "tokenURI(uint256)",
          "togglePublicSale()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "BaseERC721",
            "src": "contracts/BaseERC721.sol:20"
          },
          {
            "kind": "state-variable-assignment",
            "name": "extension",
            "src": "contracts/BaseERC721.sol:15"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "BaseERC721",
              "label": "baseUri",
              "type": "t_string_storage",
              "src": "contracts/BaseERC721.sol:12"
            },
            {
              "contract": "BaseERC721",
              "label": "supply",
              "type": "t_uint256",
              "src": "contracts/BaseERC721.sol:13"
            },
            {
              "contract": "BaseERC721",
              "label": "max",
              "type": "t_uint256",
              "src": "contracts/BaseERC721.sol:14"
            },
            {
              "contract": "BaseERC721",
              "label": "extension",
              "type": "t_string_storage",
              "src": "contracts/BaseERC721.sol:15"
            },
            {
              "contract": "BaseERC721",
              "label": "isSaleActive",
              "type": "t_bool",
              "src": "contracts/BaseERC721.sol:16"
            },
            {
              "contract": "BaseERC721",
              "label": "mintCount",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "contracts/BaseERC721.sol:17"
            }
          ],
          "types": {
            "t_string_storage": {
              "label": "string"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC721B": {
        "src": "contracts/ERC721B.sol:10",
        "inherit": [
          "IERC721Metadata",
          "IERC721",
          "ERC165",
          "IERC165",
          "Context"
        ],
        "libraries": [
          "Address"
        ],
        "methods": [
          "supportsInterface(bytes4)",
          "balanceOf(address)",
          "ownerOf(uint256)",
          "name()",
          "symbol()",
          "approve(address,uint256)",
          "getApproved(uint256)",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "transferFrom(address,address,uint256)",
          "safeTransferFrom(address,address,uint256)",
          "safeTransferFrom(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC721B",
            "src": "contracts/ERC721B.sol:17"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ERC721B",
              "label": "_name",
              "type": "t_string_storage",
              "src": "contracts/ERC721B.sol:12"
            },
            {
              "contract": "ERC721B",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "contracts/ERC721B.sol:13"
            },
            {
              "contract": "ERC721B",
              "label": "_owners",
              "type": "t_array(t_address)dyn_storage",
              "src": "contracts/ERC721B.sol:14"
            },
            {
              "contract": "ERC721B",
              "label": "_tokenApprovals",
              "type": "t_mapping(t_uint256,t_address)",
              "src": "contracts/ERC721B.sol:15"
            },
            {
              "contract": "ERC721B",
              "label": "_operatorApprovals",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "src": "contracts/ERC721B.sol:16"
            }
          ],
          "types": {
            "t_string_storage": {
              "label": "string"
            },
            "t_array(t_address)dyn_storage": {
              "label": "address[]"
            },
            "t_address": {
              "label": "address"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_bool": {
              "label": "bool"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC721EnumB": {
        "src": "contracts/ERC721EnumB.sol:13",
        "inherit": [
          "IERC721Enumerable",
          "ERC721B",
          "IERC721Metadata",
          "IERC721",
          "ERC165",
          "IERC165",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "balanceOf(address)",
          "supportsInterface(bytes4)",
          "tokenOfOwnerByIndex(address,uint256)",
          "totalSupply()",
          "tokenByIndex(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC721EnumB",
              "label": "_balances",
              "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
              "src": "contracts/ERC721EnumB.sol:14"
            }
          ],
          "types": {
            "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
              "label": "mapping(address => uint256[])"
            },
            "t_address": {
              "label": "address"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "Merkle": {
        "src": "contracts/Merkle.sol:6",
        "version": {
          "withMetadata": "9931c1e908c2ed2120a407a100a2132a1f3418868ee73954dc07b7468366f33c",
          "withoutMetadata": "bcc224e6ba1619256f5a7d09aee3dc1f4ca901e3c54ee12e74d569f4c0eaec6b",
          "linkedWithoutMetadata": "bcc224e6ba1619256f5a7d09aee3dc1f4ca901e3c54ee12e74d569f4c0eaec6b"
        },
        "inherit": [],
        "libraries": [
          "MerkleProof"
        ],
        "methods": [
          "(bytes32,bytes32)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Merkle",
            "src": "contracts/Merkle.sol:10"
          },
          {
            "kind": "state-variable-immutable",
            "name": "whitelist",
            "src": "contracts/Merkle.sol:7"
          },
          {
            "kind": "state-variable-immutable",
            "name": "phaseOne",
            "src": "contracts/Merkle.sol:8"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Snails": {
        "src": "contracts/Snails.sol:10",
        "version": {
          "withMetadata": "9dc1c685d9e5e6c2f7654440e52411378766b38ea875bbe97b191a97f738e219",
          "withoutMetadata": "9dc1c685d9e5e6c2f7654440e52411378766b38ea875bbe97b191a97f738e219",
          "linkedWithoutMetadata": "9dc1c685d9e5e6c2f7654440e52411378766b38ea875bbe97b191a97f738e219"
        },
        "inherit": [
          "BaseERC721",
          "ReentrancyGuard",
          "Ownable",
          "ERC721EnumB",
          "IERC721Enumerable",
          "ERC721B",
          "IERC721Metadata",
          "IERC721",
          "ERC165",
          "IERC165",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "()",
          "claim()",
          "claimByWallet(address)",
          "setCurrentMintLimit(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Snails",
            "src": "contracts/Snails.sol:17"
          },
          {
            "kind": "state-variable-assignment",
            "name": "currentMintLimit",
            "src": "contracts/Snails.sol:11"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "Snails",
              "label": "currentMintLimit",
              "type": "t_uint256",
              "src": "contracts/Snails.sol:11"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC721A": {
        "src": "erc721a/contracts/ERC721A.sol:23",
        "version": {
          "withMetadata": "d90e8953f63fb7e09b553fb57c484f25b64a2b502bb9adf41ef329e5f28fad0c",
          "withoutMetadata": "b46845ce757cb59201ed5980ba1e238b1af2a42363b8f4b5a07b70d5394d3bf0",
          "linkedWithoutMetadata": "b46845ce757cb59201ed5980ba1e238b1af2a42363b8f4b5a07b70d5394d3bf0"
        },
        "inherit": [
          "IERC721Enumerable",
          "IERC721Metadata",
          "IERC721",
          "ERC165",
          "IERC165",
          "Context"
        ],
        "libraries": [
          "Address",
          "Strings"
        ],
        "methods": [
          "(string,string,uint256)",
          "totalSupply()",
          "tokenByIndex(uint256)",
          "tokenOfOwnerByIndex(address,uint256)",
          "supportsInterface(bytes4)",
          "balanceOf(address)",
          "ownerOf(uint256)",
          "name()",
          "symbol()",
          "tokenURI(uint256)",
          "approve(address,uint256)",
          "getApproved(uint256)",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "transferFrom(address,address,uint256)",
          "safeTransferFrom(address,address,uint256)",
          "safeTransferFrom(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC721A",
            "src": "erc721a/contracts/ERC721A.sol:64"
          },
          {
            "kind": "state-variable-assignment",
            "name": "currentIndex",
            "src": "erc721a/contracts/ERC721A.sol:37"
          },
          {
            "kind": "state-variable-immutable",
            "name": "maxBatchSize",
            "src": "erc721a/contracts/ERC721A.sol:39"
          },
          {
            "kind": "state-variable-assignment",
            "name": "nextOwnerToExplicitlySet",
            "src": "erc721a/contracts/ERC721A.sol:398"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ERC721A",
              "label": "currentIndex",
              "type": "t_uint256",
              "src": "erc721a/contracts/ERC721A.sol:37"
            },
            {
              "contract": "ERC721A",
              "label": "_name",
              "type": "t_string_storage",
              "src": "erc721a/contracts/ERC721A.sol:42"
            },
            {
              "contract": "ERC721A",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "erc721a/contracts/ERC721A.sol:45"
            },
            {
              "contract": "ERC721A",
              "label": "_ownerships",
              "type": "t_mapping(t_uint256,t_struct(TokenOwnership)4379_storage)",
              "src": "erc721a/contracts/ERC721A.sol:49"
            },
            {
              "contract": "ERC721A",
              "label": "_addressData",
              "type": "t_mapping(t_address,t_struct(AddressData)4384_storage)",
              "src": "erc721a/contracts/ERC721A.sol:52"
            },
            {
              "contract": "ERC721A",
              "label": "_tokenApprovals",
              "type": "t_mapping(t_uint256,t_address)",
              "src": "erc721a/contracts/ERC721A.sol:55"
            },
            {
              "contract": "ERC721A",
              "label": "_operatorApprovals",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "src": "erc721a/contracts/ERC721A.sol:58"
            },
            {
              "contract": "ERC721A",
              "label": "nextOwnerToExplicitlySet",
              "type": "t_uint256",
              "src": "erc721a/contracts/ERC721A.sol:398"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_mapping(t_uint256,t_struct(TokenOwnership)4379_storage)": {
              "label": "mapping(uint256 => struct ERC721A.TokenOwnership)"
            },
            "t_struct(TokenOwnership)4379_storage": {
              "label": "struct ERC721A.TokenOwnership",
              "members": [
                {
                  "label": "addr",
                  "type": "t_address"
                },
                {
                  "label": "startTimestamp",
                  "type": "t_uint64"
                }
              ]
            },
            "t_address": {
              "label": "address"
            },
            "t_uint64": {
              "label": "uint64"
            },
            "t_mapping(t_address,t_struct(AddressData)4384_storage)": {
              "label": "mapping(address => struct ERC721A.AddressData)"
            },
            "t_struct(AddressData)4384_storage": {
              "label": "struct ERC721A.AddressData",
              "members": [
                {
                  "label": "balance",
                  "type": "t_uint128"
                },
                {
                  "label": "numberMinted",
                  "type": "t_uint128"
                }
              ]
            },
            "t_uint128": {
              "label": "uint128"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_bool": {
              "label": "bool"
            }
          },
          "layoutVersion": "1.1"
        }
      }
    }
  ]
}